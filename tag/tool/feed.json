{
    "version": "https://jsonfeed.org/version/1",
    "title": "欢迎 • All posts by \"tool\" tag",
    "description": "正在建设中...",
    "home_page_url": "https://ningchenhui.github.io",
    "items": [
        {
            "id": "https://ningchenhui.github.io/ESM/Data/model02/",
            "url": "https://ningchenhui.github.io/ESM/Data/model02/",
            "title": "安装NCL",
            "date_published": "2021-03-17T16:00:00.000Z",
            "content_html": "<p>NCAR command language (NCL)</p>\n<span id=\"more\"></span>\n<h2 id=\"关于\"><a class=\"markdownIt-Anchor\" href=\"#关于\">#</a> 关于</h2>\n<p>NCAR 命令语言（NCL）是美国国家大气研究中心（NCAR）计算与信息系统实验室的产品，是一种专门为科学数据处理和可视化设计的解释语言。学习使用 NCL 主要是为了处理 NetCDF 格式。</p>\n<h2 id=\"参考网站\"><a class=\"markdownIt-Anchor\" href=\"#参考网站\">#</a> 参考网站</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5uY2wudWNhci5lZHUv\">官网</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5uY2wudWNhci5lZHUvZ2V0X3N0YXJ0ZWQuc2h0bWw=\">安装指导</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5uY2wudWNhci5lZHUvRG9jdW1lbnQvTWFudWFscy9OQ0xfVXNlcl9HdWlkZS8=\">用户指导手册</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5uY2wudWNhci5lZHUvRG9jdW1lbnQvTWFudWFscy9OQ0xfVXNlcl9HdWlkZS9EYXRhLw==\">手册的数据文件</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5weW5nbC51Y2FyLmVkdS8=\">pyngl</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5uY2wudWNhci5lZHUvRG9jdW1lbnQvTWFudWFscy9OQ0xfdG9fUHl0aG9uL1RyYW5zaXRpb25fR3VpZGVfTkNMX1B5TkdMLnBkZg==\">ncl2py Guide</span></li>\n</ul>\n<h2 id=\"安装\"><a class=\"markdownIt-Anchor\" href=\"#安装\">#</a> 安装</h2>\n<p>NCL 适用于 MacOS，Linux 和运行 Windows 10 Linux 子系统的 Windows 系统。换新笔记本后我安装了 WSL，所以这里在 WSL 中安装。<br>\n首先要安装 conda，这里按提示安装了 miniconda。（难怪我在超算的 <code>.bashrc</code>  里只看到了 miniconda，没找到 NCL，但找到了 NCO……<br>\n 然后按照建议在 conda 环境下安装 NCL，新环境为 ncl_stable。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda create -n ncl_stable -c conda-forge ncl</pre></td></tr></table></figure><p>每次进入该环境，执行</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">source</span> activate ncl_stable</pre></td></tr></table></figure><p>要显示图形化界面，首先启动 Xming 开启 X11 转接…… 然后执行下面的命令检测</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ncl -V</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ncl <span class=\"token variable\">$NCARG_ROOT</span>/lib/ncarg/nclex/gsun/gsun02n.ncl</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ncl <span class=\"token variable\">$NCARG_ROOT</span>/lib/ncarg/nclex/nug/NUG_multi_timeseries.ncl</pre></td></tr></table></figure><p>就可以看到很漂亮的图啦！</p>\n<p>于是又登上超算找 <code>conda</code> ，结果不能直接用。在 <code>.conda</code>  文件夹里有个 <code>environment.txt</code>  里明明看到了有 <code>anaconda</code>  和 ncl_stable 环境。翻 bashrc 发现有句</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">wanwb</span><span class=\"token operator\">=</span><span class=\"token string\">'source /home/export/online3/cesm06/wanwb/.bashrc'</span></pre></td></tr></table></figure><p>果断执行 <code>wanwb</code> ，可以用 conda 了！可以用 ncl！<br>\n<img style=\"display: inline-block; width: 70%; max-width: 70%; height: auto;\" data-src=\"1.png\" /></p>\n<p>回到 WSL，执行 <code>ng4ex gsun01n</code>  提示 /bin/csh: bad interpreter: No such file or directory 查一下需要安装 C-shell。再次执行，可以看到一些折线图，且工作路径下多了一个 <code>gsun01n.ncl</code>  文件。</p>\n<h2 id=\"配置环境\"><a class=\"markdownIt-Anchor\" href=\"#配置环境\">#</a> 配置环境</h2>\n<p>由于使用了 ncl_stable 环境，就不用再设置变量 <code>NCARG_ROOT</code>  和路径 <code>$NCARG_ROOT/bin</code>  了。<br>\n在家目录下放置 <code>.hluresfile</code>  文件来个性化设置 NCL 图形环境。<br>\n关于代码编辑的高亮，我用了 vscode 连接 WSL，打开 ncl 文件后安装 NCL 扩展即可。不得不说这真的好用。</p>\n<h2 id=\"准备学习\"><a class=\"markdownIt-Anchor\" href=\"#准备学习\">#</a> 准备学习</h2>\n<p>把手册下载下来进行学习！有些大的数据文件在官网上，参考中已经列出来了。</p>\n<img style=\"display: inline-block; width: 70%; max-width: 70%; height: auto;\" data-src=\"2.png\" />\n<p>加载公用函数库： <code>load &quot;$NCARG_ROOT/lib/ncarg/nclscripts/csm/contributed.ncl&quot;</code> <br>\n 运行样例： <code>ng4ex file.ncl</code> <br>\n 样例数据： <code>$NCARG_ROOT/lib/ncarg/data/nug/</code></p>\n<h2 id=\"几天后\"><a class=\"markdownIt-Anchor\" href=\"#几天后\">#</a> 几天后</h2>\n<p>把手册大致过了一遍，对某些语法感到不适外，在手册最后看到了一章 PyNGL 和 PyNIO 的。于是很疑惑地到官网再一看……<br>\n 好家伙，NCAR 已经不更新 NCL 了，官方都转 python 了</p>\n<p>（3.22：问了师姐，他们那篇论文用的代码基本是 matlab…… 而我没能找到机器上有没有 matlab……）<br>\n（续：matlab 在另一个账号下…… 代码放机器上被清了…… ）</p>\n<h2 id=\"pyngl-pynio\"><a class=\"markdownIt-Anchor\" href=\"#pyngl-pynio\">#</a> PyNGL &amp; PyNIO</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda create --name pyn_env --channel conda-forge pynio pyngl</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">source</span> activate pyn_env</pre></td></tr></table></figure><p>报错了，可能版本不兼容。删除环境重建</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda <span class=\"token function\">env</span> remove --name pyn_env</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>conda create --name pyn_env --channel conda-forge/label/cf201901 xarray netcdf4 scipy pyngl pynio</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">source</span> activate pyn_env</pre></td></tr></table></figure><p>最后清理下安装的包</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda clean -a</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>conda clean -p</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>conda clean -t</pre></td></tr></table></figure>",
            "tags": [
                "Tool"
            ]
        },
        {
            "id": "https://ningchenhui.github.io/ESM/Data/model01/",
            "url": "https://ningchenhui.github.io/ESM/Data/model01/",
            "title": "初识NetCDF",
            "date_published": "2021-03-16T09:08:20.000Z",
            "content_html": "<p>Network Common Data Form (NetCDF)</p>\n<span id=\"more\"></span>\n<!--ncl-->\n<h2 id=\"关于\"><a class=\"markdownIt-Anchor\" href=\"#关于\">#</a> 关于</h2>\n<p>Unidata 网络通用数据格式（netCDF）是用于科学数据访问的接口，并且是一个自由分发的提供了该接口的实现软件库。netCDF 库还定义了用于表示科学数据数据格式。 接口，库和格式共同支持科学数据的创建，访问和共享。</p>\n<h2 id=\"参考网站\"><a class=\"markdownIt-Anchor\" href=\"#参考网站\">#</a> 参考网站</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudW5pZGF0YS51Y2FyLmVkdS9zb2Z0d2FyZS9uZXRjZGYv\">官网</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1VuaWRhdGEvbmV0Y2RmLWM=\">GitHub</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL25ldHdvcmstY29tbW9uLWRhdGEtZm9ybS5odG1sP3NfdGlkPUNSVVhfbGZ0bmF2\">Matlab</span></li>\n</ul>\n<h2 id=\"开始\"><a class=\"markdownIt-Anchor\" href=\"#开始\">#</a> 开始</h2>\n<p>因为还不太熟悉超算服务器，我先把其中一个月的数据传到了本地，然后用 Matlab 查看。</p>\n<ol>\n<li>\n<p><code>ncdisp</code>  在命令行窗口中显示 NetCDF 数据源内容</p>\n<pre><code> FileName='T045_D.cice.h.0036-01.nc';\n ncdisp(FileName)\n</code></pre>\n <img style=\"display: inline-block; width: 70%; max-width: 70%; height: auto;\" data-src=\"1.png\" />\n<p>后面有非常多的变量……</p>\n</li>\n<li>\n<p><code>ncinfo</code>  以结构体形式返回有关 NetCDF 数据源的信息</p>\n<pre><code> finfo = ncinfo(FileName);\n</code></pre>\n</li>\n<li>\n<p><code>ncread</code>  读取 NetCDF 数据源中的变量数据</p>\n<pre><code> iceVolume=ncread(FileName,'vicen001_d'); %读取全部\n start=[100,200,1];count=[Inf,Inf,1];stride=[5,5,1];%读取部分，分别是起始点、数量、间隔\n iceVolumePart=ncread(FileName,'vicen001_d',start,count,stride);\n surf(double(iceVolumePart));\n title('Ice Volume');\n</code></pre>\n <img style=\"display: inline-block; width: 70%; max-width: 70%; height: auto;\" data-src=\"2.png\" />\n</li>\n<li>\n<p>NetCDF 包<br>\n为了对读写过程进行更多控制，可使用包含低级函数的 NetCDF 库程序包。详细可查看 matlab 官方文档。</p>\n</li>\n</ol>\n",
            "tags": [
                "Tool"
            ]
        }
    ]
}