{
    "version": "https://jsonfeed.org/version/1",
    "title": "欢迎 • All posts by \"linux\" tag",
    "description": "正在建设中...",
    "home_page_url": "https://ningchenhui.github.io",
    "items": [
        {
            "id": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linuxA0713/",
            "url": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linuxA0713/",
            "title": "Linux学习 笔记#10 Shell Scripts",
            "date_published": "2021-07-13T07:20:36.000Z",
            "content_html": "<p>使用脚本！ <span id=\"more\"></span></p>\n<h2 id=\"ch12-学习-shell-scripts\"><a class=\"markdownIt-Anchor\" href=\"#ch12-学习-shell-scripts\">#</a> Ch12 学习 Shell Scripts</h2>\n<p>tips:</p>\n<ol>\n<li>指令、选项与参数间的多个空白都会被忽略掉；</li>\n<li>可以使用『 \\[Enter] 』来延伸至下一行；</li>\n<li>『 # 』可做为批注！</li>\n</ol>\n<h3 id=\"脚本样例\"><a class=\"markdownIt-Anchor\" href=\"#脚本样例\">#</a> 脚本样例</h3>\n<h4 id=\"hello-world\"><a class=\"markdownIt-Anchor\" href=\"#hello-world\">#</a> Hello World！</h4>\n<pre><code>#!/bin/bash\n# Program:\n#       This program shows &quot;Hello World!&quot; in your screen.\n# History:\n# 2021/07/13 Sinki First release\necho &quot;Hello World! \\a \\n&quot;\nexit 0\n</code></pre>\n<h4 id=\"show-name\"><a class=\"markdownIt-Anchor\" href=\"#show-name\">#</a> Show name</h4>\n<pre><code>#!/bin/bash\n# Program:\n# User inputs his first name and last name.  Program shows his full name.\n# History:\n# 2021/07/13 Sinki First release\n\nread -p &quot;Please input your first name: &quot; firstname      # 提示使用者输入\n\nread -p &quot;Please input your last name:  &quot; lastname       # 提示使用者输入\necho &quot;\\nYour full name is: $&#123;firstname&#125; $&#123;lastname&#125;&quot; # 结果由屏幕输出\n</code></pre>\n<h4 id=\"create-files\"><a class=\"markdownIt-Anchor\" href=\"#create-files\">#</a> Create files</h4>\n<pre><code>#!/bin/bash\n# Program:\n# Program creates three files, which named by user's input and date command.\n# History:\n# 2021/07/13 Sinki First release\n\n# 1. 让使用者输入文件名，并取得 fileuser 这个变量；\necho &quot;I will use 'touch' command to create 3 files.&quot; # 纯粹显示信息\nread -p &quot;Please input your filename: &quot; fileuser         # 提示使用者输入\n\n# 2. 为了避免使用者随意按 Enter ，利用变量功能分析档名是否有设定？\nfilename=$&#123;fileuser:-&quot;filename&quot;&#125;           # 开始判断有否配置文件名\n\n# 3. 开始利用 date 指令来取得所需要的档名了；\ndate1=$(date --date='2 days ago' +%Y%m%d)  # 前两天的日期\ndate2=$(date --date='1 days ago' +%Y%m%d)  # 前一天的日期\ndate3=$(date +%Y%m%d)                      # 今天的日期\nfile1=$&#123;filename&#125;$&#123;date1&#125;                  # 底下三行在配置文件名\nfile2=$&#123;filename&#125;$&#123;date2&#125;\nfile3=$&#123;filename&#125;$&#123;date3&#125;\n\n# 4. 将档名建立吧！\ntouch &quot;$&#123;file1&#125;&quot;                           # 底下三行在建立文件\ntouch &quot;$&#123;file2&#125;&quot;\ntouch &quot;$&#123;file3&#125;&quot;\n</code></pre>\n<h4 id=\"整数运算-计算式\"><a class=\"markdownIt-Anchor\" href=\"#整数运算-计算式\">#</a> 整数运算 $((计算式))</h4>\n<pre><code>total=$(($&#123;firstnu&#125;*$&#123;secnu&#125;))\n</code></pre>\n<h4 id=\"浮点运算-bc\"><a class=\"markdownIt-Anchor\" href=\"#浮点运算-bc\">#</a> 浮点运算 bc</h4>\n<pre><code>time echo &quot;scale=$&#123;num&#125;; 4*a(1)&quot; | bc -lq\n</code></pre>\n<h3 id=\"指令执行\"><a class=\"markdownIt-Anchor\" href=\"#指令执行\">#</a> 指令执行</h3>\n<ol>\n<li>直接指令下达： <span class=\"exturl\" data-url=\"aHR0cDovL3NoZWxsLnNo\">shell.sh</span> 文件必须要具备 (rx) 权限，使用绝对路径，相对路径或在 PATH 中.</li>\n<li>以 bash 程序来执行：透过『 bash <span class=\"exturl\" data-url=\"aHR0cDovL3NoZWxsLnNo\">shell.sh</span> 』或『 sh <span class=\"exturl\" data-url=\"aHR0cDovL3NoZWxsLnNo\">shell.sh</span> 』来执行</li>\n<li>source <span class=\"exturl\" data-url=\"aHR0cDovL3NoZWxsLnNo\">shell.sh</span></li>\n</ol>\n<p>前两种是子 shell, 变量不保留。而 source 是在当前的环境中执行.</p>\n<h3 id=\"判断式\"><a class=\"markdownIt-Anchor\" href=\"#判断式\">#</a> 判断式</h3>\n<h4 id=\"test\"><a class=\"markdownIt-Anchor\" href=\"#test\">#</a> test</h4>\n<ol>\n<li>关于某个档名的『文件类型』判断，如  <code>test -e filename</code>  表示存在否<br>\n - e 该『档名』是否存在？(常用)<br>\n-f 该『档名』是否存在且为文件 (file)？(常用)<br>\n-d 该『文件名』是否存在且为目录 (directory)？(常用)</li>\n<li>关于文件的权限侦测，如  <code>test -r filename</code>  表示可读否 (但 root 权限常有例外)<br>\n-r 侦测该档名是否存在且具有『可读』的权限？<br>\n-w 侦测该档名是否存在且具有『可写』的权限？<br>\n-x 侦测该档名是否存在且具有『可执行』的权限？</li>\n<li>两个文件之间的比较，如：  <code>test file1 -nt file2 </code> <br>\n-nt (newer than) 判断 file1 是否比 file2 新<br>\n - ot (older than) 判断 file1 是否比 file2 旧<br>\n - ef 判断 file1 与 file2 是否为同一文件，可用在判断 hard link 的判定上。 主要意义在判定，两个文件是否均指向同一个 inode 哩！</li>\n<li>关于两个整数之间的判定，例如  <code>test n1 -eq n2 </code> <br>\n-eq 两数值相等 (equal)<br>\n-ne 两数值不等 (not equal)<br>\n-gt n1 大于 n2 (greater than)<br>\n-lt n1 小于 n2 (less than)<br>\n-ge n1 大于等于 n2 (greater than or equal)<br>\n-le n1 小于等于 n2 (less than or equal)</li>\n<li>判定字符串的数据<br>\n <code>test -z string</code>  判定字符串是否为 0 ？若 string 为空字符串，则为 true<br>\n <code>test -n string</code>  判定字符串是否非为 0 ？若 string 为空字符串，则为 false。 注： -n 亦可省略<br>\n <code>test str1 == str2</code>  判定 str1 是否等于 str2 ，若相等，则回传 true<br>\n <code>test str1 != str2</code>  判定 str1 是否不等于 str2 ，若相等，则回传 false</li>\n<li>多重条件判定，例如：  <code>test -r filename -a -x filename </code> <br>\n-a (and) 两状况同时成立！例如 test -r file -a -x file，则 file 同时具有 r 与 x 权限时，才回传 true。<br>\n-o (or) 两状况任何一个成立！例如 test -r file -o -x file，则 file 具有 r 或 x 权限时，就可回传 true。<br>\n! 反相状态，如  <code>test ! -x file</code>  ，当 file 不具有 x 时，回传 true</li>\n</ol>\n<h4 id=\"\"><a class=\"markdownIt-Anchor\" href=\"#\">#</a> [ ]</h4>\n<p>tips:</p>\n<ol>\n<li>在中括号 [] 内的每个组件都需要有空格键来分隔；</li>\n<li>在中括号内的变数，最好都以双引号括号起来；</li>\n<li>在中括号内的常数，最好都以单或双引号括号起来。</li>\n</ol>\n<p>参数与 test 一致。例如 <code>[ $&#123;name&#125; == &quot;Sinki&quot; ]</code></p>\n<p><em>这就是为啥 sh 脚本判断句里奇怪字母的原因吗，为啥不用大于小于号啊喂. ncl 里也是这种反人类语法啊</em></p>\n<h3 id=\"参数-num\"><a class=\"markdownIt-Anchor\" href=\"#参数-num\">#</a> 参数 $num</h3>\n<p>script 针对参数已经有设定好一些变量名称了！</p>\n<pre><code>/path/to/scriptname  opt1  opt2  opt3  opt4  \n      $0             $1    $2    $3    $4\n</code></pre>\n<p><code>$#</code>  ：代表后接的参数『个数』，以上表为例这里显示为『 4 』；<br>\n <code>$@</code>  ：代表  <code>&quot;$1&quot; &quot;$2&quot; &quot;$3&quot; &quot;$4&quot;</code> ，每个变量是独立的 (用双引号括起来)；<br>\n <code>$*</code>  ：代表  <code>&quot;$1c$2c$3c$4&quot;</code>  ，其中 c 为分隔字符，默认为空格键， 所以本例中代表  <code>&quot;$1 $2 $3 $4&quot;</code> 。一般用 <code>$@</code></p>\n<p>shift：造成参数变量号码偏移<br>\n对于 <code>sh shift_paras.sh one two three four five six</code> <br>\n 执行 <code>shift</code>  后 <code>$@</code> 变成 <sub>one</sub> two three four five six, 再执行 <code>shift 3</code>  后就是～one two three four~ five six</p>\n<h3 id=\"语句\"><a class=\"markdownIt-Anchor\" href=\"#语句\">#</a> 语句</h3>\n<h4 id=\"if-then\"><a class=\"markdownIt-Anchor\" href=\"#if-then\">#</a> if then</h4>\n<ul>\n<li>\n<p>单层、简单条件判断式</p>\n<pre><code>if [ 条件判断式 ]; then\n  当条件判断式成立时，可以进行的指令工作内容；\nfi\n</code></pre>\n</li>\n</ul>\n<p>条件判断式中的 -a 和 -o 可以拆了，比如把</p>\n<p><code>[ &quot;$&#123;yn&#125;&quot; == &quot;Y&quot; -o &quot;$&#123;yn&#125;&quot; == &quot;y&quot; ]</code></p>\n<p>改成</p>\n<p><code>[ &quot;$&#123;yn&#125;&quot; == &quot;Y&quot; ] || [ &quot;$&#123;yn&#125;&quot; == &quot;y&quot; ]</code></p>\n<p>另外 &amp;&amp; 是且。</p>\n<ul>\n<li>\n<p>多重、复杂条件判断式</p>\n<pre><code>if [ 条件判断式 ]; then\n  当条件判断式成立时，可以进行的指令工作内容；\nelse\n  当条件判断式不成立时，可以进行的指令工作内容；\nfi\n\nif [ 条件判断式一 ]; then\n  当条件判断式一成立时，可以进行的指令工作内容；\nelif [ 条件判断式二 ]; then\n  当条件判断式二成立时，可以进行的指令工作内容；\nelse\n  当条件判断式一与二均不成立时，可以进行的指令工作内容；\nfi\n</code></pre>\n</li>\n</ul>\n<h4 id=\"case-esac\"><a class=\"markdownIt-Anchor\" href=\"#case-esac\">#</a> case esac</h4>\n<pre><code>case  $变量名称 in   &lt;==关键词为 case ，还有变数前有钱字号\n  &quot;第一个变量内容&quot;)   &lt;==每个变量内容建议用双引号括起来，关键词则为小括号 )\n    程序段\n    ;;           &lt;==每个类别结尾使用两个连续的分号来处理！\n  &quot;第二个变量内容&quot;)\n    程序段\n    ;;\n  *)                  &lt;==最后一个变量内容都会用 * 来代表所有其他值\n    不包含第一个变量内容与第二个变量内容的其他程序执行段\n    exit 1\n    ;;\nesac\n</code></pre>\n<h4 id=\"function\"><a class=\"markdownIt-Anchor\" href=\"#function\">#</a> function</h4>\n<p>在 shell script 当中的 function 的设定一定要在程序的最前面，这样才能够在执行时被找到可用的程序段</p>\n<pre><code>function printit()&#123;\n  echo -n &quot;Your choice is &quot;     # 加上 -n 可以不断行继续在同一行显示\n&#125;\nprintit; echo $&#123;1&#125; | tr 'a-z' 'A-Z'  # 将参数做大小写转换！\n</code></pre>\n<p>function 也是拥有内建变量的～他的内建变量与 shell script 很类似， 函数名称代表示 $0 ，而后续接的变量也是以 $1, $2… 来取代的～</p>\n<pre><code>function printit()&#123;\n  echo &quot;Your choice is $&#123;1&#125;&quot;   # 这个 $1 必须要参考底下指令的下达\n&#125;\nprintit 1  # 请注意， printit 指令后面还有接参数！\n</code></pre>\n<h4 id=\"while-do-done-until-do-done-不定循环\"><a class=\"markdownIt-Anchor\" href=\"#while-do-done-until-do-done-不定循环\">#</a> while do done, until do done (不定循环)</h4>\n<pre><code>while [ condition ]    &lt;==中括号内的状态就是判断式\ndo            &lt;==do 是循环的开始！\n  程序段落\ndone          &lt;==done 是循环的结束\n</code></pre>\n<p>另一种</p>\n<pre><code>until [ condition ]    &lt;==中括号内的状态就是判断式\ndo            &lt;==do 是循环的开始！\n  程序段落\ndone          &lt;==done 是循环的结束\n</code></pre>\n<p>与 while 相反，真的好懂.</p>\n<h4 id=\"fordodone-固定循环\"><a class=\"markdownIt-Anchor\" href=\"#fordodone-固定循环\">#</a> for…do…done (固定循环)</h4>\n<pre><code>for var in con1 con2 con3 ...\ndo\n  程序段\ndone\n</code></pre>\n<p>这个 $var 的变量内容在循环工作时：</p>\n<ol>\n<li>第一次循环时， $var 的内容为 con1 ；</li>\n<li>第二次循环时， $var 的内容为 con2 ；</li>\n<li>第三次循环时， $var 的内容为 con3 ；</li>\n<li>…</li>\n</ol>\n<p>for 后面还可以跟这些:</p>\n<pre><code>users=$(cut -d ':' -f1 /etc/passwd)    # 撷取账号名称\nfor username in $&#123;users&#125;\n...\nfor sitenu in $(seq 1 100)       # seq 为 sequence(连续) 的缩写之意\n...\nfor sitenu in &#123;1..100&#125;\n...\nfor a in &#123;a..z&#125;\n</code></pre>\n<h4 id=\"fordodone-的数值处理\"><a class=\"markdownIt-Anchor\" href=\"#fordodone-的数值处理\">#</a> for…do…done 的数值处理</h4>\n<pre><code>for (( 初始值; 限制值; 执行步阶 ))\ndo\n  程序段\ndone\n</code></pre>\n<p>如  <code>for (( i=1; i&lt;=$&#123;nu&#125;; i=i+1 ))</code></p>\n<h3 id=\"shell-script-的追踪与-debug\"><a class=\"markdownIt-Anchor\" href=\"#shell-script-的追踪与-debug\">#</a> shell script 的追踪与 debug</h3>\n<p><code>sh [-nvx] scripts.sh </code> <br>\n-n  ：不要执行 script，仅查询语法的问题；<br>\n-v  ：再执行 sccript 前，先将 scripts 的内容输出到屏幕上；<br>\n-x  ：将使用到的 script 内容显示到屏幕上，这是很有用的参数！</p>\n<p>在输出的讯息中，在加号后面的数据其实都是指令串，由于 sh -x 的方式来将指令执行过程也显示出来， 如此用户可以判断程序代码执行到哪一段时会出现相关的信息！</p>\n<hr>\n<p>下一篇：<a href=\"/2021/07/14/linuxA0714/\">-</a><br>\n 上一篇：<a href=\"/2021/07/08/linuxA0708/\">正规表示法与文件格式化处理</a></p>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linuxA0708/",
            "url": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linuxA0708/",
            "title": "Linux学习 笔记#09 正规表示法与文件格式化处理",
            "date_published": "2021-07-08T07:20:36.000Z",
            "content_html": "<p>像乱码一样的正则表达式！ <span id=\"more\"></span></p>\n<h2 id=\"ch11-正规表示法与文件格式化处理\"><a class=\"markdownIt-Anchor\" href=\"#ch11-正规表示法与文件格式化处理\">#</a> Ch11 正规表示法与文件格式化处理</h2>\n<h3 id=\"基础正规表示法\"><a class=\"markdownIt-Anchor\" href=\"#基础正规表示法\">#</a> 基础正规表示法</h3>\n<p><em>使用正规表示法时，需要特别留意当时环境的语系，练习使用 LANG=C</em></p>\n<p>为了避免编码所造成的英文与数字的撷取问题，有些特殊的符号得要了解一下，粗体比较重要:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">特殊字段</th>\n<th style=\"text-align:left\">意义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><strong>[:alnum:]</strong></td>\n<td style=\"text-align:left\"><strong>代表英文大小写字符及数字，亦即 0-9, A-Z, a-z</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>[:alpha:]</strong></td>\n<td style=\"text-align:left\"><strong>代表任何英文大小写字符，亦即 A-Z, a-z</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[:blank:]</td>\n<td style=\"text-align:left\">代表空格键与 [Tab] 按键两者</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[:cntrl:]</td>\n<td style=\"text-align:left\">代表键盘上面的控制按键，亦即包括 CR, LF, Tab, Del… 等等</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>[:digit:]</strong></td>\n<td style=\"text-align:left\"><strong>代表数字而已，亦即 0-9</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[:graph:]</td>\n<td style=\"text-align:left\">除了空格符 (空格键与 [Tab] 按键) 外的其他所有按键</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>[:lower:]</strong></td>\n<td style=\"text-align:left\"><strong>代表小写字符，亦即 a-z</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[:print:]</td>\n<td style=\"text-align:left\">代表任何可以被打印出来的字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[:punct:]</td>\n<td style=\"text-align:left\">代表标点符号 (punctuation symbol)，亦即：&quot; ’ ? ! ; : # $…</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>[:upper:]</strong></td>\n<td style=\"text-align:left\"><strong>代表大写字符，亦即 A-Z</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[:space:]</td>\n<td style=\"text-align:left\">任何会产生空白的字符，包括空格键，[Tab], CR 等等</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[:xdigit:]</td>\n<td style=\"text-align:left\">代表 16 进位的数字类型，因此包括： 0-9, A-F, a-f 的数字与字符</td>\n</tr>\n</tbody>\n</table>\n<p><code>grep [-vin] [-A] [-B] [--color=auto] '搜寻字符串' filename </code> <br>\n选项与参数：<br>\n-A ：后面可加数字，为 after 的意思，除了列出该行外，后续的 n 行也列出来；<br>\n-B ：后面可加数字，为 befer 的意思，除了列出该行外，前面的 n 行也列出来；<br>\n-n : 加行号<br>\n - v : 反向选择<br>\n - i : 忽略大小写<br>\n–color=auto 可将正确的那个撷取数据列出颜色</p>\n<p>grep 在数据中查寻一个字符串时，是以 “整行” 为单位来进行数据的撷取的.</p>\n<h4 id=\"利用中括号-来搜寻集合字符\"><a class=\"markdownIt-Anchor\" href=\"#利用中括号-来搜寻集合字符\">#</a> 利用中括号 [] 来搜寻集合字符</h4>\n<ol>\n<li>[] 里面不论有几个字符，他都仅代表某『一个』字符，如 ‘t [ae] st’ 可以匹配到 tast 和 test</li>\n<li>集合字符里的 ^ 表示反向选择，如 ‘[^g] oo’ 就排除了 goo</li>\n<li>对于连续字符，如 [a-z] [A-Z] [0-9] 分别代表小写字母，大写字母，数字。同样 [^a-z] 表示排除小写字母</li>\n<li>~<em>A to Z！A to Z！天下を，A to Z！A to Z！取ります！</em>~</li>\n<li>[<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>] 等价于 [^a-z]</li>\n</ol>\n<h4 id=\"行首与行尾字符\"><a class=\"markdownIt-Anchor\" href=\"#行首与行尾字符\">#</a> 行首与行尾字符 ^ $</h4>\n<ol>\n<li>‘^the’ 表示只匹配行首为 the 的行. ‘<sup>[</sup>a-zA-Z]’ 则表示只匹配行首不是字母的行.</li>\n<li>行尾的话就可以 ‘\\.$’.</li>\n<li>但要注意 win 下会有断行符 ^M$</li>\n<li>空行的话就是 ‘^$’</li>\n</ol>\n<h4 id=\"任意一个字符-与重复字符\"><a class=\"markdownIt-Anchor\" href=\"#任意一个字符-与重复字符\">#</a> 任意一个字符。与重复字符 *</h4>\n<ol>\n<li>. 代表『一定有一个任意字符』</li>\n<li>* 代表『重复前一个字符， 0 到无穷多次』的意思，为组合形态<br>\n因此 『o*』代表的是：『拥有空字符或一个 o 以上的字符』, ‘o*’ 就是有没有字符都可以的意思<br>\n‘goo*g’ 就是 gog, goog, gooog… 等等</li>\n<li>.* 就代表零个或多个任意字符</li>\n</ol>\n<h4 id=\"限定连续-re-字符范围\"><a class=\"markdownIt-Anchor\" href=\"#限定连续-re-字符范围\">#</a> 限定连续 RE 字符范围 {}</h4>\n<p>因为 {与} 的符号在 shell 是有特殊意义的，因此， 我们必须要使用跳脱字符 \\ 来让他失去特殊意义才行</p>\n<ol>\n<li>‘o {2,}’ 代表 2 个及以上 o</li>\n<li>‘o {2,5}’ 代表 2 到 5 个 o</li>\n<li>‘o {2}’ 代表 2 个 o</li>\n</ol>\n<h3 id=\"sed-工具\"><a class=\"markdownIt-Anchor\" href=\"#sed-工具\">#</a> sed 工具</h3>\n<p>sed 本身也是一个管线命令，可以分析 standard input 的啦！ 而且 sed 还可以将数据进行取代、删除、新增、撷取特定行等等的功能呢！</p>\n<p><code>sed [-nefr] [动作] </code> <br>\n-n  ：使用安静 (silent) 模式。在一般 sed 的用法中，所有来自 STDIN 的数据一般都会被列出到屏幕上。 但如果加上 -n 参数后，则只有经过 sed 特殊处理的那一行 (或者动作) 才会被列出来。<br>\n-e  ：直接在指令行模式上进行 sed 的动作编辑；<br>\n-f  ：直接将 sed 的动作写在一个文件内， -f filename 则可以执行 filename 内的 sed 动作；<br>\n-r  ：sed 的动作支持的是延伸型正规表示法的语法。(预设是基础正规表示法语法)<br>\n-i  ：直接修改读取的文件内容，而不是由屏幕输出。</p>\n<p>动作说明：  [n1 [,n2]] function<br>\nn1, n2 ：不见得会存在，一般代表『选择进行动作的行数』，举例来说，如果我的动作是需要在 10 到 20 行之间进行的，则『 10,20 [动作行为] 』</p>\n<p>function 有底下这些咚咚：<br>\na   ：新增， a 的后面可以接字符串，而这些字符串会在新的一行出现 (目前的下一行)～<br>\nc   ：取代， c 的后面可以接字符串，这些字符串可以取代 n1,n2 之间的行！<br>\nd   ：删除，因为是删除啊，所以 d 后面通常不接任何咚咚；<br>\ni   ：插入， i 的后面可以接字符串，而这些字符串会在新的一行出现 (目前的上一行)；<br>\np   ：打印，亦即将某个选择的数据印出。通常 p 会与参数 sed -n 一起运作～<br>\ns   ：取代，可以直接进行取代的工作！通常这个 s 的动作可以搭配正规表示法！ 例如 1,20s/old/new/g 就是啦！</p>\n<p>举例:</p>\n<ol>\n<li><code>nl /etc/passwd | sed '2,5d' </code>  删除 2 到 5 行。动作要用单引号括住</li>\n<li><code>nl /etc/passwd | sed '2,$d' </code>  删除 2 到最后一行.</li>\n<li><code>nl /etc/passwd | sed '2a drink tea'</code>  在第二行后面加一行 drink tea. 两行以上的话要用 \\</li>\n<li><code>nl /etc/passwd | sed -n '5,7p'</code>  取出 5 到 7 行.</li>\n<li><code>/sbin/ifconfig eth0 | grep 'inet ' | sed 's/^.*inet //g' | sed 's/ *netmask.*$//g'</code>  删除 ip 的首尾</li>\n<li><code>cat /etc/man_db.conf | grep 'MAN'| sed 's/#.*$//g' | sed '/^$/d'</code>  删除含有注释的和空白行</li>\n</ol>\n<p>sed 后面如果要接超过两个以上的动作时，每个动作前面得加 -e 才行</p>\n<h3 id=\"延伸正规表示法\"><a class=\"markdownIt-Anchor\" href=\"#延伸正规表示法\">#</a> 延伸正规表示法</h3>\n<p><code>grep -E</code>  或  <code>egrep</code>  来支持延伸正规表示法！</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">RE 字符</th>\n<th style=\"text-align:left\">意义与范例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:left\">意义：重复『一个或一个以上』的前一个 RE 字符 <br>范例：搜寻 (god) (good) (goood)… 等等的字符串。  <br> <code>egrep -n 'go+d' regular_express.txt </code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">?</td>\n<td style=\"text-align:left\">意义：『零个或一个』的前一个 RE 字符 <br>范例：搜寻 (gd) (god) 这两个字符串。 <br> <code>egrep -n 'go?d' regular_express.txt </code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">丨</td>\n<td style=\"text-align:left\">意义：用或 (or) 的方式找出数个字符串 <br>范例：搜寻 gd 或 good 这两个字符串<br> <code>egrep -n 'gd丨good' regular_express.txt</code>  <br>那如果还想要找出 dog 呢？ <br> <code>egrep -n 'gd丨good丨dog' regular_express.txt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">()</td>\n<td style=\"text-align:left\">意义：找出『群组』字符串 <br>范例：搜寻 (glad) 或 (good) 这两个字符串<br> <code>egrep -n 'g(la丨oo)d' regular_express.txt</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">()+</td>\n<td style=\"text-align:left\"><br>意义：多个重复群组的判别 <br>范例：将『AxyzxyzxyzxyzC』用 echo 叫出，然后再使用如下的方法搜寻一下！ <br> <code>echo 'AxyzxyzxyzxyzC' 丨 egrep 'A(xyz)+C' </code> <br>上面的例子意思是说，我要找开头是 A 结尾是 C ，中间有一个以上的 “xyz” 字符串～</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"文件的格式化与相关处理\"><a class=\"markdownIt-Anchor\" href=\"#文件的格式化与相关处理\">#</a> 文件的格式化与相关处理</h3>\n<h4 id=\"格式化打印-printf\"><a class=\"markdownIt-Anchor\" href=\"#格式化打印-printf\">#</a> 格式化打印： printf</h4>\n<p><code>printf '打印格式' ' 实际内容</code> <br>\n关于格式方面的几个特殊样式：<br>\n\\a    警告声音输出<br>\n \\b    退格键 (backspace)<br>\n\\f    清除屏幕 (form feed)<br>\n\\n    输出新的一行<br>\n \\r    亦即 Enter 按键<br>\n \\t    水平的 [tab] 按键<br>\n \\v    垂直的 [tab] 按键<br>\n \\xNN  NN 为两位数的数字，可以转换数字成为字符。<br>\n关于 C 程序语言内，常见的变数格式<br>\n % ns   那个 n 是数字， s 代表 string ，亦即多少个字符；<br>\n% ni   那个 n 是数字， i 代表 integer ，亦即多少整数字数；<br>\n%<span class=\"exturl\" data-url=\"aHR0cDovL04ubmY=\">N.nf</span> 那个 n 与 N 都是数字， f 代表 floating (浮点)，如果有小数字数，<br>\n假设我共要十个位数，但小数点有两位，即为 %10.2f 啰！</p>\n<p>用例:<br>\n <code>printf '%s\\t %s\\t %s\\t %st %s\\t %st %s\\t t \\n' $(cat printf.txt)</code></p>\n<pre><code>Name     Chinese         English         Math    Average\nDmTsai   80      60      92      77.33\nVBird    75      55      80      70.00\nKen      60      90      70      73.33\n</code></pre>\n<p><code>printf '%10s %5i %5i %5i %8.2f \\n' $(cat printf.txt | grep -v Name) </code></p>\n<pre><code>DmTsai    80    60    92    77.33\n VBird    75    55    80    70.00\n   Ken    60    90    70    73.33\n</code></pre>\n<p><code>printf '\\x45\\n'</code></p>\n<pre><code>E\n</code></pre>\n<h4 id=\"awk好用的数据处理工具\"><a class=\"markdownIt-Anchor\" href=\"#awk好用的数据处理工具\">#</a> awk：好用的数据处理工具</h4>\n<p><code>awk '条件类型1&#123;动作1&#125; 条件类型2&#123;动作2&#125; ...' filename</code> <br>\nawk 主要是处理『每一行的字段内的数据』，而默认的『字段的分隔符为 “空格键” 或 “[tab] 键” 』</p>\n<p>例: <code>last -n 5 | awk '&#123;print $1 &quot;\\t&quot; $3&#125;'</code>  调出第一列和第三列<br>\n awk 后续的所有动作是以单引号『 ’ 』括住的，非变量的文字部分，包含上一小节 printf 提到的格式中，都需要使用双引号来定义出来喔！</p>\n<p>awk 的内建变量:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">变量名称</th>\n<th style=\"text-align:left\">代表意义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">NF</td>\n<td style=\"text-align:left\">每一行 ($0) 拥有的字段总数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">NR</td>\n<td style=\"text-align:left\">目前 awk 所处理的是『第几行』数据</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FS</td>\n<td style=\"text-align:left\">目前的分隔字符，默认是空格键</td>\n</tr>\n</tbody>\n</table>\n<p>例: <code>last -n 5| awk '&#123;print $1 &quot;\\t lines: &quot; NR &quot;\\t columns: &quot; NF&#125;'</code></p>\n<p>awk 的条件支持 C 式的逻辑运算</p>\n<p>例: <code>cat /etc/passwd | awk '&#123;FS=&quot;:&quot;&#125; $3 &lt; 10 &#123;print $1 &quot;\\t &quot; $3&#125;'</code>  以：为分隔符，输出第三栏小于 10 的</p>\n<p>这个定义 FS 在第二行才生效，因此要用 BEGIN<br>\n <code>cat /etc/passwd | awk 'BEGIN &#123;FS=&quot;:&quot;&#125; $3 &lt; 10 &#123;print $1 &quot;\\t &quot; $3&#125;'</code></p>\n<p>计算功能:</p>\n<pre><code>cat pay.txt | \\\nawk 'NR==1&#123;printf &quot;%10s %10s %10s %10s %10s\\n&quot;,$1,$2,$3,$4,&quot;Total&quot; &#125;\nNR&gt;=2&#123;total = $2 + $3 + $4\nprintf &quot;%10s %10d %10d %10d %10.2f\\n&quot;, $1, $2, $3, $4, total&#125;'\n\n  Name        1st        2nd        3th      Total\n VBird      23000      24000      25000   72000.00\nDMTsai      21000      20000      23000   64000.00\n Bird2      43000      42000      41000  126000.00\n</code></pre>\n<p>说明:</p>\n<ol>\n<li>awk 的指令间隔：所有 awk 的动作，亦即在 {} 内的动作，如果有需要多个指令辅助时，可利用分号『;』间隔， 或者直接以 [Enter] 按键来隔开每个指令.</li>\n<li>格式化输出时，在 printf 的格式设定当中，务必加上 \\n ，才能进行分行！</li>\n<li>与 bash shell 的变量不同，在 awk 当中，变量可以直接使用，不需加上 $ 符号。</li>\n</ol>\n<h4 id=\"文件比对工具\"><a class=\"markdownIt-Anchor\" href=\"#文件比对工具\">#</a> 文件比对工具</h4>\n<p>比对两个文件之间的差异的，并且是以行为单位来比对，一般是用在 ASCII 纯文本档的比对上，同一的文件 (或软件) 的新旧版本差异</p>\n<p><code>diff [-bBi] from-file to-file</code> <br>\nfrom-file ：一个档名，作为原始比对文件的档名；<br>\nto-file   ：一个档名，作为目的比对文件的档名；<br>\n注意，from-file 或 to-file 可以 - 取代，那个 - 代表『Standard input』之意。</p>\n<p>-b  ：忽略一行当中，仅有多个空白的差异 (例如 “about me” 与 “about     me” 视为相同<br>\n - B  ：忽略空白行的差异。<br>\n-i  ：忽略大小写的不同。</p>\n<p>打印结果中 &lt;代表左边 from 内容，&gt; 代表右边 to 内容.</p>\n<p><code>cmp [-l] file1 file2</code>  利用『字节』单位去比对两个文件<br>\n - l  ：将所有的不同点的字节处都列出来。因为 cmp 预设仅会输出第一个发现的不同点。</p>\n<p><code>patch</code>  用 <code>diff -Naur</code>  的结果更新或还原文件.</p>\n<p><code>pr</code>  命令可以用来打印文本文档.</p>\n<hr>\n<p>下一篇：<a href=\"/2021/07/13/linuxA0713/\">Shell Scripts</a><br>\n 上一篇：<a href=\"/2021/07/05/linuxA0705/\">认识与学习 BASH</a></p>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>:lower: <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linuxA0705/",
            "url": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linuxA0705/",
            "title": "Linux学习 笔记#08 bash",
            "date_published": "2021-07-05T13:51:36.000Z",
            "content_html": "<p>这章是重点，圈起来 - - <span id=\"more\"></span></p>\n<h2 id=\"ch10-认识与学习-bash\"><a class=\"markdownIt-Anchor\" href=\"#ch10-认识与学习-bash\">#</a> Ch10 认识与学习 BASH</h2>\n<h3 id=\"bash-shell-的功能\"><a class=\"markdownIt-Anchor\" href=\"#bash-shell-的功能\">#</a> Bash shell 的功能</h3>\n<ol>\n<li>history ~/.bash_history 记录前一次登入以前所执行过的指令，可查询曾经做过的举动  <code>history n</code>  查 n 条， <code>-c</code>  清空， <code>-arw</code>  与文件读取历史中有关。  <code>!</code>  可以跟数字 n 表示执行第 n 条命令，也可以跟部分指令 s, 由最近的指令向前搜寻『指令串开头为 s』的指令，并执行</li>\n<li>alias 命令别名设定功能  <code>alias lm='ls -al'</code> . 取消则用 <code>unalias lm</code></li>\n<li>job control, foreground, background</li>\n<li>shell scripts</li>\n</ol>\n<h3 id=\"指令的下达与快速编辑按钮\"><a class=\"markdownIt-Anchor\" href=\"#指令的下达与快速编辑按钮\">#</a> 指令的下达与快速编辑按钮</h3>\n<ol>\n<li>\\ 换行输入</li>\n<li>[ctrl]+u 从光标处向前删除指令串</li>\n<li>[ctrl]+c 终止目前命令</li>\n<li>[ctrl]+z 暂停目前命令</li>\n</ol>\n<h3 id=\"变量\"><a class=\"markdownIt-Anchor\" href=\"#变量\">#</a> 变量</h3>\n<p>显示变量： <code>echo $var 或 echo $&#123;var&#125;</code>  量在被取用时，前面必须要加上 $<br>\n 定义修改： <code>var=sinki</code></p>\n<p>变量的设定规则:</p>\n<ol>\n<li>等号两边不能直接接空格符</li>\n<li>变量名称只能是英文字母与数字，但是开头字符不能是数字</li>\n<li>变量内容若有空格符可使用引号将变量内容结合起来，双引号内的特殊字符如 $ 等，可以保有原本的特性，单引号内的特殊字符则仅为一般字符 (纯文本)</li>\n<li>可用跳脱字符『 \\ 』将特殊符号 (如 [Enter], $, \\, 空格符，' 等) 变成一般字符</li>\n<li>在一串指令的执行中，还需要藉由其他额外的指令所提供的信息时，可以使用反单引号 ` 括住指令或 『$(指令)』</li>\n<li>若该变量为扩增变量内容时，则可用  <code>&quot;$变量名称&quot;</code>  或   <code>$&#123;变量&#125;</code>  累加内容：  <code>PATH=&quot;$PATH&quot;:/home/bin</code>  或 <code>PATH=$&#123;PATH&#125;:/home/bin</code></li>\n<li>若该变量需要在其他子程序执行，则需要以 export 来使变量变成环境变量：  <code>export PATH</code>  在目前这个 shell 的情况下，去启用另一个新的 shell ，新的 shell 就是子程序啦</li>\n<li>通常大写字符为系统默认变量，自行设定变量可以使用小写字符，方便判断</li>\n<li>取消变量的方法为使用 unset ： <code>unset var</code></li>\n</ol>\n<h3 id=\"环境变量\"><a class=\"markdownIt-Anchor\" href=\"#环境变量\">#</a> 环境变量</h3>\n<p>用  <code>env</code>  观察环境变量</p>\n<ul>\n<li>HOME 家目录</li>\n<li>SHELL 目前这个环境使用的 SHELL 是哪支程序</li>\n<li>PATH 就是执行文件搜寻的路径啦～目录与目录中间以冒号 (:) 分隔， 文件的搜寻是依序由 PATH 的变量内的目录来查询</li>\n<li>LANG 语系数据，修复乱码</li>\n<li>RANDOM 随机随机数。  <code>declare -i number=$RANDOM*10/32768 ; echo $number</code></li>\n</ul>\n<p>用  <code>set</code>  观察所有变量 (含环境变量与自定义变量)</p>\n<ul>\n<li>PS1：(提示字符的设定)，就是命令行开始的东西。 <code>man bash</code>  搜 PS1 可以看到详细替换变量。如 <code>PS1='[\\u@u@\\h h \\w w \\A #A #\\#]#]\\$ '</code></li>\n<li>$: 代表的是『目前这个 Shell 的线程代号』，亦即是所谓的 PID (Process ID)  <code>echo $$</code></li>\n<li>?: 上一个执行的指令所返回的值</li>\n</ul>\n<p><code>locale</code>  显示结果的语系变量<br>\n在 Linux 当中，通常说明仅设定 LANG 或 LC_ALL 这两个变量。如果发生一些乱码的问题，那么设定系统里面保有的语系编码， 例如： en_US 或 en_US.utf8 等等的设定，应该就 OK 的啦！</p>\n<pre><code> LANG=en_US.utf8; locale\n export LC_ALL=en_US.utf8; locale\n</code></pre>\n<h3 id=\"read-array-declare\"><a class=\"markdownIt-Anchor\" href=\"#read-array-declare\">#</a> read, array, declare</h3>\n<p><code>read [-pt] variable</code>  读取用户输入变量<br>\n - p: 接提示字符<br>\n - t: 接等待秒数<br>\n read -p &quot;Please keyin your name:&quot; -t 30 named</p>\n<p><code>declare [-aixr] variable</code>  声明变量类型<br>\n - a  ：数组 (array) 类型<br>\n - i  ：整数 (integer) 类型<br>\n - x  ：用法与 export 一样，就是将后面的 variable 变成环境变量；<br>\n-r  ：将变量设定成为 readonly 类型，该变量不可被更改内容，也不能 unset<br>\ndeclare -i sum=100+300+50<br>\n 默认为字符串，无浮点数.<br>\n <code>+x</code>  为取消动作。但如果不小心将变量设定为『只读』，通常得要注销再登入才能复原该变量的类型了！ @_@</p>\n<p>数组类型: var [index]=content. 读取建议以 <code>$&#123;var[1]&#125;</code>  形式读取.</p>\n<h3 id=\"变量内容的删除与取代\"><a class=\"markdownIt-Anchor\" href=\"#变量内容的删除与取代\">#</a> 变量内容的删除与取代</h3>\n<p><code>$&#123;variable#/*local/bin:&#125;</code>  # 代表『从变量内容的最前面开始向右删除』，且仅删除最短的那个. * 为通配符<br>\n <code>$&#123;path##/*:&#125;</code>  ## 变成『删除掉最长的那个数据』.<br>\n <code>$&#123;path%:*bin&#125;</code>  % 代表『从变量内容的最后面开始向左删除』, 且仅删除最短的那个.<br>\n <code>$&#123;path%%:*bin&#125;</code>  %%  变成『删除掉最长的那个数据』.<br>\n <code>$&#123;path/sbin/SBIN&#125;</code>  / 旧字符 / 新字符，只取代最开始符合的子串<br>\n <code>$&#123;path//sbin/SBIN&#125;</code>  取代所有子串<br>\n <code>new_var=$&#123;old_var-content&#125;</code>  old_var 存在则返回 old_var, 否则为 content.<br>\n <code>new_var=$&#123;old_var:-content&#125;</code>  加：把变量为空字符串视为变量不存在.<br>\n <code>new_var=$&#123;old_var=content&#125;</code>  old_var 存在则返回 old_var, 否则为 content, old_var 也赋值为 content.<br>\n <code>new_var=$&#123;old_var?content&#125;</code>  old_var 存在则返回 old_var, 否则 content 输出至 stderr.<br>\n <code>new_var=$&#123;old_var+content&#125;</code>  old_var 存在则返回 content, 否则为空字符串.</p>\n<h3 id=\"bash-的环境配置文件\"><a class=\"markdownIt-Anchor\" href=\"#bash-的环境配置文件\">#</a> bash 的环境配置文件</h3>\n<p>登入时系统会依次读取配置文件，首先是 <code>/etc/profile</code> , 系统整体设定一般不修改；然后是 <code>~/.bash_profile 或 ~/.bash_login 或 ~/.profile</code>  中的一个，前一个不存在才会读后一个。而这些文件又会读取 <code>.bashrc</code> , 将自己的偏好设定写入该文件即可。</p>\n<p><code>source 配置文件档名</code>  或  <code>. ~/.bashrc</code>  可以不注销登入直接重新读取配置文件.</p>\n<p><code>/etc/man_db.conf</code>  规范了使用 man 的时候， man page 的路径到哪里去寻找。如果以 tarball 的方式来安装数据，这个时候就得以手动的方式将路径  <code>/usr/local/softpackage/man</code>  加到  <code>/etc/man_db.conf</code>  里头</p>\n<p><code>~/.bash_logout</code>  记录了『注销 bash 后，系统再帮我做完什么动作后才离开』</p>\n<h3 id=\"通配符-wildcard-与特殊符号\"><a class=\"markdownIt-Anchor\" href=\"#通配符-wildcard-与特殊符号\">#</a> 通配符 wildcard 与特殊符号</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">通配符</th>\n<th style=\"text-align:left\">意义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">*</td>\n<td style=\"text-align:left\">代表『 0 个到无穷多个』任意字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">?</td>\n<td style=\"text-align:left\">代表『一定有一个』任意字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[ ]</td>\n<td style=\"text-align:left\">同样代表『一定有一个在括号内』的字符 (非任意字符)。例如 [abcd] 代表『一定有一个字符， 可能是 a, b, c, d 这四个任何一个』</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[ - ]</td>\n<td style=\"text-align:left\">若有减号在中括号内时，代表『在编码顺序内的所有字符』。例如 [0-9] 代表 0 到 9 之间的所有数字</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[^ ]</td>\n<td style=\"text-align:left\">若中括号内的第一个字符为 (^) ，那表示『反向选择』，例如 [^abc] 代表 一定有一个字符，只要是非 a, b, c 的其他字符就接受的意思。</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">特殊符</th>\n<th style=\"text-align:left\">意义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">#</td>\n<td style=\"text-align:left\">注释符号：这个最常被使用在 script 当中，在后的数据均不执行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\</td>\n<td style=\"text-align:left\">转义符号：将『特殊字符或通配符』还原成一般字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">丨</td>\n<td style=\"text-align:left\">管线 (pipe)：分隔两个管线命令的界定 (后两节介绍)；</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">;</td>\n<td style=\"text-align:left\">连续指令下达分隔符：连续性命令的界定 (注意！与管线命令并不相同)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">~</td>\n<td style=\"text-align:left\">用户的家目录</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$</td>\n<td style=\"text-align:left\">取用变数前导符：亦即是变量之前需要加的变量取代值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&amp;</td>\n<td style=\"text-align:left\">工作控制 (job control)：将指令变成背景下工作</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">!</td>\n<td style=\"text-align:left\">逻辑运算意义上的『非』</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">/</td>\n<td style=\"text-align:left\">目录符号：路径分隔的符号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&gt;, &gt;&gt;</td>\n<td style=\"text-align:left\">数据流重导向：输出导向，分别是『取代』与『累加』</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&lt;, &lt;&lt;</td>\n<td style=\"text-align:left\">数据流重导向：输入导向</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">’ ’</td>\n<td style=\"text-align:left\">单引号，不具有变量置换的功能 ($ 变为纯文本)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&quot; &quot;</td>\n<td style=\"text-align:left\">具有变量置换的功能！ ($ 可保留相关功能)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code> |两个『</code>  』中间为可以先执行的指令，亦可使用 $( )</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">( )</td>\n<td style=\"text-align:left\">在中间为子 shell 的起始与结束</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:left\">在中间为命令区块的组合！</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"数据流重导向\"><a class=\"markdownIt-Anchor\" href=\"#数据流重导向\">#</a> 数据流重导向</h3>\n<p>std output 和 std error output 默认都是输出到屏幕，但可以通过 <code>&gt;</code>  和 <code>2&gt;</code>  分别引流到其他文件中，如<br>\n <code>find /home -name .bashrc &gt; list_right 2&gt; list_error</code> <br>\n 若是 <code>&gt;&gt;</code>  则为追加输出.</p>\n<p>特殊的位置:  <code>/dev/null</code>  引流到这里则消失</p>\n<p>用 <code>&amp;&gt;</code>  或 <code>2&gt;&amp;1</code>  可以向屏幕那样混合输出，如<br>\n <code>find /home -name .bashrc &gt; list 2&gt;&amp;1; find /home -name .bashrc &amp;&gt; list</code> <br>\n 这是把错误输出混合到标准输出，同样可以 <code>1&gt;&amp;2</code>  把标准输出当作错误输出.</p>\n<p><code>&lt;</code>  则是将原本需要由键盘输入的数据，改由文件内容来取代。如<br>\n <code>cat &gt; catfile &lt; ~/.bashrc</code> <br>\n <code>&lt;&lt;</code>  代表的是『结束的输入字符』, 如<br>\n <code>cat &gt; catfile &lt;&lt; &quot;eof&quot;</code>  则当键盘输入 eof 时结束，相当于 [ctrl]+d.</p>\n<p>复制流:    <code>tee [-a] file</code>   -a  是以累加 (append) 的方式，将数据加入 file 当中<br>\n如:  <code>ls -l / | tee -a ~/homefile | more</code>  可以同时存一份，屏幕上输出一份</p>\n<h3 id=\"命令执行的判断依据\"><a class=\"markdownIt-Anchor\" href=\"#命令执行的判断依据\">#</a> 命令执行的判断依据： ; , &amp;&amp;, ||</h3>\n<p>在指令与指令中间利用分号 (😉 来隔开，这样一来，分号前的指令执行完后就会立刻接着执行后面的指令了。</p>\n<p>cmd1 &amp;&amp; cmd2 : 若 cmd1 执行完毕且正确执行 ($?=0)，则开始执行 cmd2。否则不执行.</p>\n<p>cmd1 || cmd2 : 若 cmd1 执行完毕且正确执行 ($?=0)，则 cmd2 不执行。否则执行。并不是或语句啊！</p>\n<p>例：不清楚 /tmp/abc 是否存在，但就是要建立 /tmp/abc/hehe 文件<br>\n <code>ls /tmp/abc || mkdir /tmp/abc &amp;&amp; touch /tmp/abc/hehe</code> <br>\nLinux 底下的指令都是由左往右执行的，$? 也是顺序变化的.<br>\n <code>ls /tmp/vbirding &amp;&amp; echo &quot;exist&quot; || echo &quot;not exist&quot;</code></p>\n<h3 id=\"管线\"><a class=\"markdownIt-Anchor\" href=\"#管线\">#</a> 管线</h3>\n<p>管线命令『 | 』仅能处理经由前面一个指令的 standard output 的信息，对于 stdandard error 并没有直接处理的能力。<br>\n管线命令必须要能够接受来自前一个指令的数据成为 standard input 继续处理才行。<br>\n如 <code>ls -al /etc | less</code></p>\n<ol>\n<li>cut<br>\n <code>cut -d '分隔字符' -f fields</code> , 用 -f 取出第几段的意思，如  <code>echo $&#123;PATH&#125; | cut -d ':' -f 3,5</code> <br>\n <code>cut -c c 字符区间</code> ，如 <code>export | cut -c 12-</code> .<br>\ncut 主要的用途在于将同一行里面的数据进行分解，对多空格不友好</li>\n<li>grep<br>\ngrep 是分析一行讯息， 若当中有我们所需要的信息，就将该行拿出来～<br>\ngrep [-acinv] [–color=auto] ‘搜寻字符串’ filename<br>\n-a ：将 binary 文件以 text 文件的方式搜寻数据<br>\n - c ：计算找到 ‘搜寻字符串’ 的次数<br>\n - i ：忽略大小写的不同，所以大小写视为相同<br>\n - n ：顺便输出行号<br>\n - v ：反向选择，亦即显示出没有 ‘搜寻字符串’ 内容的那一行！</li>\n</ol>\n<h3 id=\"排序\"><a class=\"markdownIt-Anchor\" href=\"#排序\">#</a> 排序</h3>\n<ol>\n<li>sort  [-fbMnrtuk] [file or stdin]<br>\n-f  ：忽略大小写的差异，例如 A 与 a 视为编码相同；<br>\n-b  ：忽略最前面的空格符部分；<br>\n-M  ：以月份的名字来排序，例如 JAN, DEC 等等的排序方法；<br>\n-n  ：使用『纯数字』进行排序 (默认是以文字型态来排序的)；<br>\n-r  ：反向排序；<br>\n-u  ：就是 uniq ，相同的数据中，仅出现一行代表；<br>\n-t  ：分隔符，预设是用 [tab] 键来分隔；<br>\n-k  ：以那个区间 (field) 来进行排序的意思<br>\n <code>/etc/passwd</code>  内容是以：来分隔的，以第三栏来排序则 <code>cat /etc/passwd | sort -t ':' -k 3 -n</code></li>\n<li>uniq<br>\n-i  ：忽略大小写字符的不同；<br>\n-c  ：进行计数<br>\n如 <code>last | cut -d ' ' -f1 | sort | uniq -c</code></li>\n<li>wc 统计信息 (厕所？<br>\n-l  ：仅列出行；<br>\n-w  ：仅列出多少字 (英文单字)；<br>\n-m  ：多少字符；</li>\n</ol>\n<h3 id=\"字符转换命令-tr-col-join-paste-expand\"><a class=\"markdownIt-Anchor\" href=\"#字符转换命令-tr-col-join-paste-expand\">#</a> 字符转换命令： tr, col, join, paste, expand</h3>\n<ol>\n<li><code>tr [-ds] SET1 ...</code> <br>\n-d  ：删除讯息当中的 SET1 这个字符串；<br>\n-s  ：取代掉重复的字符！</li>\n<li><code>col [-xb]</code> <br>\n-x  ：将 tab 键转换成对等的空格键</li>\n<li><code>join [-ti12] file1 file2</code>   两个文件当中，有 “相同 key” 的那一行加在一起<br>\n - t ‘:’ ：join 默认以空格符分隔数据，并且比对『第一个字段』的数据， 如果两个文件相同，则将两笔数据联成一行，且第一个字段放在第一个！<br>\n-i  ：忽略大小写的差异；<br>\n-1 n ：这个是数字的 1 ，代表『第一个文件要用那个字段来分析』的意思；<br>\n-2 m ：代表『第二个文件要用那个字段来分析』的意思。<br>\n在使用 join 之前，你所需要处理的文件应该要事先经过排序 (sort) 处理！</li>\n<li><code>paste [-d] file1 file2</code>  将两行贴在一起，且中间以 [tab] 键隔开<br>\n - d  ：后面可以接分隔字符。预设是以 [tab] 来分隔的！</li>\n</ol>\n<ul>\n<li>：如果 file 部分写成 - ，表示来自 standard input 的资料的意思。’-’ 可以替代 stdin 与 stdout</li>\n</ul>\n<ol start=\"5\">\n<li><code>expand [-t] file</code>  [tab] 按键转成空格键<br>\n - t  ：后面可以接数字。一般来说，一个 tab 按键可以用 8 个空格</li>\n</ol>\n<h3 id=\"切割文件\"><a class=\"markdownIt-Anchor\" href=\"#切割文件\">#</a> 切割文件</h3>\n<p><code>split  [-bl] file PREFIX</code>  将大文件分区成为小文件<br>\n - b  ：后面可接欲分区成的文件大小，可加单位，例如 b, k, m 等；<br>\n-l  ：以行数来进行分区。<br>\nPREFIX ：代表前导符的意思，可作为分区文件的前导文字。<br>\n合并则用  <code>cat PREFIX* file</code></p>\n<h3 id=\"参数代换-xargs\"><a class=\"markdownIt-Anchor\" href=\"#参数代换-xargs\">#</a> 参数代换： xargs</h3>\n<p><code>xargs [-0epn] command </code> <br>\n-0  ：如果输入的 stdin 含有特殊字符，例如 `, , 空格键等等字符时，这个 -0 参数<br>\n可以将他还原成一般字符。这个参数可以用于特殊状态喔！<br>\n-e  ：这个是 EOF (end of file) 的意思。后面可以接一个字符串，当 xargs 分析到这个字符串时，<br>\n就会停止继续工作！ -e’sync’ 是连在一起的，中间没有空格键。<br>\n-p  ：在执行每个指令的 argument 时，都会询问使用者的意思；<br>\n-n  ：后面接次数，每次 command 指令执行时，要使用几个参数的意思。<br>\n当 xargs 后面没有接任何的指令时，默认是以 echo 来进行输出喔！</p>\n<hr>\n<p>下一篇：<a href=\"/2021/07/03/linuxA0703/\">-</a><br>\n 上一篇：<a href=\"/2021/07/03/linuxA0703/\">文件与文件系统的压缩，打包与备份</a></p>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linuxA0703/",
            "url": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linuxA0703/",
            "title": "Linux学习 笔记#07 压缩，备份与Vim",
            "date_published": "2021-07-03T06:22:36.000Z",
            "content_html": "<p>在家逐渐颓废_〆(´Д｀) <span id=\"more\"></span></p>\n<h2 id=\"ch8-文件与文件系统的压缩打包与备份\"><a class=\"markdownIt-Anchor\" href=\"#ch8-文件与文件系统的压缩打包与备份\">#</a> Ch8 文件与文件系统的压缩，打包与备份</h2>\n<h3 id=\"linux-系统常见的压缩指令\"><a class=\"markdownIt-Anchor\" href=\"#linux-系统常见的压缩指令\">#</a> Linux 系统常见的压缩指令</h3>\n<p>几个常见的压缩文件案扩展名</p>\n<ul>\n<li>*.zip       zip 程序压缩的文件；</li>\n<li>*.gz        gzip 程序压缩的文件；</li>\n<li>*.bz2       bzip2 程序压缩的文件；</li>\n<li>*.xz        xz 程序压缩的文件；</li>\n<li>*.tar       tar 程序打包的数据，并没有压缩过；</li>\n<li>*.tar.gz    tar 程序打包的文件，其中并且经过 gzip 的压缩</li>\n<li>*.tar.bz2   tar 程序打包的文件，其中并且经过 bzip2 的压缩</li>\n<li>*.tar.xz    tar 程序打包的文件，其中并且经过 xz 的压缩</li>\n</ul>\n<ol>\n<li><code>gzip [-dtvk19] filename[.gz]</code> <br>\n <code>-k</code>  保留原始档， <code>-d</code>  解压缩。用 <code>zcat/zmore/zless/zgrep</code>  可以直接显示压缩档内容。</li>\n<li><code>bzip2 [-dkv19] filename[.bz2]</code> <br>\n 与 <code>gzip</code>  参数基本一致，压缩比更好，但大文件压缩较慢。同样有 <code>bzcat</code> 。</li>\n<li><code>xz [-dtvk19] filename[.xz]</code> <br>\n 压缩比更好，时间更久。同样有 <code>xzcat</code> 。</li>\n<li><code>tar</code> <br>\n 之前的命令是文件单独压缩，而 <code>tar</code>  是把目录中的文件打包为一个文件。</li>\n</ol>\n<ul>\n<li>压 缩： <code>tar -jcv -f filename.tar.bz2 要被压缩的文件或目录名称</code></li>\n<li>查 询： <code>tar -jtv -f filename.tar.bz2</code></li>\n<li>解压缩： <code>tar -jxv -f filename.tar.bz2 -C 欲解压缩的目录</code> <br>\n另外， <code>z</code>  为 <code>.gz</code> ， <code>J</code>  为 <code>.xz</code> ，可代替 <code>-j</code> 。 <code>v</code>  为显示处理的文件， <code>f</code>  可放在前面参数的最后。</li>\n</ul>\n<p>解开单独文件：</p>\n<ol>\n<li>找到文件： <code>tar -jtv -f /root/etc.tar.bz2 | grep 'shadow'</code></li>\n<li>解压缩：  <code>tar -jxv -f /root/etc.tar.bz2 etc/shadow</code></li>\n</ol>\n<p>排除一些不压缩的文件：<br>\n <code>tar -jcv -f /root/system.tar.bz2 --exclude=/root/etc* --exclude=/root/system.tar.bz2 /etc /root</code> <br>\n 只压缩较新的文件：（这个用来备份可以节省空间哦，因为不会重复备份某些文件啦<br>\n <code>tar -jcv jcv -f /root/etc.newer.tar.bz2 --newer-mtime=&quot;2021/06/17&quot; /etc/</code> <br>\n 特殊应用：利用管线命令与数据流</p>\n<pre><code>cd /tmp\ntar -cvf - /etc | tar -xvf xvf -\n</code></pre>\n<h3 id=\"xfs文件系统备份等\"><a class=\"markdownIt-Anchor\" href=\"#xfs文件系统备份等\">#</a> XFS 文件系统备份等</h3>\n<p>所用的 <code>xfsdump</code>  是累积备份的，不过 <code>WSL</code>  好像有点区别吧，pass<br>\n 光盘相关的也是 pass，家里早都莫得 CD 机了电脑也没驱动<br>\n <code>dd</code> ：直接读取扇区的复制，一模一样不用理会文件系统<br>\n <code>cpio</code> ：同样用于文件复制，可以备份任何东西。但感觉比较笨。</p>\n<p>不过说起来我现在用的备份都是直接复制粘贴的同步…… 根本没压缩啊！只有很少文件压缩了<br>\n一个很好用的同步软件：FreeFileSync</p>\n<h2 id=\"ch9-vim-程序编辑器\"><a class=\"markdownIt-Anchor\" href=\"#ch9-vim-程序编辑器\">#</a> Ch9 vim 程序编辑器</h2>\n<p>终于到这个随机字符串生成器了 - -</p>\n<h3 id=\"vi-的使用\"><a class=\"markdownIt-Anchor\" href=\"#vi-的使用\">#</a> vi 的使用</h3>\n<ul>\n<li>一般指令模式 (command mode)<br>\n 以 vi 打开一个文件就直接进入一般指令模式。可以使用『上下左右』按键来移动光标，『删除字符』或『删除整行』来处理文件内容， 也可以使用『复制、粘贴』。</li>\n<li>编辑模式 (insert mode)<br>\n 按下『i, I, o, O, a, A, r, R』等任何一个字母之后进入编辑模式。通常在 Linux 中，按下这些按键时，在画面的左下方会出现『 INSERT 或 REPLACE 』的字样要回到一般指令模式时， 则须按下『Esc』。</li>\n<li>指令行命令模式 (command-line mode)<br>\n 在一般模式当中，输入『 : / ? 』三个中的任何一个按钮，就可以将光标移动到最底下那一行。在这个模式当中， 可以提供你『搜寻资料』的动作，读取、存盘、大量取代字符、离开 vi 、显示行号等等的动作也是在此模式中达成。</li>\n</ul>\n<h4 id=\"startvi-filename\"><a class=\"markdownIt-Anchor\" href=\"#startvi-filename\">#</a> Start： <code>vi filename</code> ！</h4>\n<p>基础：按 <code>i</code>  输入文本， <code>esc</code>  退出， <code>:wq</code>  保存 / <code>:wq!</code>  强制保存。</p>\n<p>一般指令模式按键</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">按键</th>\n<th style=\"text-align:left\">操作</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">num 方向键</td>\n<td style=\"text-align:left\">光标移动，前面加数字可批量移动</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ctrl+f，b</td>\n<td style=\"text-align:left\">等于 Page Down，Up</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">num 空格</td>\n<td style=\"text-align:left\">光标后移 num 个</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0，Home</td>\n<td style=\"text-align:left\">行首</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$,End</td>\n<td style=\"text-align:left\">行尾</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">G</td>\n<td style=\"text-align:left\">最后一行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">gg</td>\n<td style=\"text-align:left\">首行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">numgg</td>\n<td style=\"text-align:left\">第 num 行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">num 回车</td>\n<td style=\"text-align:left\">光标下移 num 行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">/string</td>\n<td style=\"text-align:left\">向光标之下寻找一个名称为 string 的字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">？string</td>\n<td style=\"text-align:left\">向光标之上寻找一个字符串名称为 string 的字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">n</td>\n<td style=\"text-align:left\">重复上一个搜寻动作</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:left\">反向重复上一个搜寻动作</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">:n1,n2s/word1/word2/g</td>\n<td style=\"text-align:left\">在第 n1 与 n2 行之间寻找 word1 这个字符串，并将该字符串取代为 word2 ！举例『:100,200s/vbird/VBIRD/g』。n2 为 $ 则是最后一行，加 c 则取代时确认</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dd</td>\n<td style=\"text-align:left\">删除一整行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">num dd</td>\n<td style=\"text-align:left\">删除光标向下 num 行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">yy</td>\n<td style=\"text-align:left\">复制一整行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">num yy</td>\n<td style=\"text-align:left\">复制光标向下 num 行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">p</td>\n<td style=\"text-align:left\">将已复制的数据在光标下一行贴上</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">u</td>\n<td style=\"text-align:left\">撤销操作</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">CTRL+r</td>\n<td style=\"text-align:left\">恢复撤销</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">.</td>\n<td style=\"text-align:left\">重复前一个动作</td>\n</tr>\n</tbody>\n</table>\n<p>一般指令模式切换到指令列模式的可用按钮说明</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">按键</th>\n<th style=\"text-align:left\">操作</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">:wq</td>\n<td style=\"text-align:left\">储存后离开，若为 :wq! 则为强制储存后离开</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ZZ</td>\n<td style=\"text-align:left\">若文件没有更动，则不储存离开，若文件已经被更动过，则储存后离开！</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">:w [filename]</td>\n<td style=\"text-align:left\">另存为</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">:q!</td>\n<td style=\"text-align:left\">强制离开不储存文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">:set nu</td>\n<td style=\"text-align:left\">显示行号，nonu 为取消</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"区块选择visual-block\"><a class=\"markdownIt-Anchor\" href=\"#区块选择visual-block\">#</a> 区块选择 (Visual Block)</h4>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">按键</th>\n<th style=\"text-align:left\">操作</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">v</td>\n<td style=\"text-align:left\">字符选择，会将光标经过的地方反白选择！</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">V</td>\n<td style=\"text-align:left\">列选择，会将光标经过的列反白选择！</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[Ctrl]+v</td>\n<td style=\"text-align:left\">区块选择，可以方向键移动光标，用长方形的方式选择资料</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">y</td>\n<td style=\"text-align:left\">将反白的地方复制起来</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">d</td>\n<td style=\"text-align:left\">将反白的地方删除掉</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">p</td>\n<td style=\"text-align:left\">将刚刚复制的区块，在游标所在处贴上！</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"多文件编辑\"><a class=\"markdownIt-Anchor\" href=\"#多文件编辑\">#</a> 多文件编辑</h4>\n<p><code>vim hosts /etc/hosts</code>  一次开启多个文件</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">按键</th>\n<th style=\"text-align:left\">操作</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">:n</td>\n<td style=\"text-align:left\">编辑下一个文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">:N</td>\n<td style=\"text-align:left\">编辑上一个文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">:files</td>\n<td style=\"text-align:left\">列出目前这个 vim 的开启的所有文件</td>\n</tr>\n</tbody>\n</table>\n<p>这样可以跨文件复制粘贴！</p>\n<h4 id=\"多窗口\"><a class=\"markdownIt-Anchor\" href=\"#多窗口\">#</a> 多窗口</h4>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">按键</th>\n<th style=\"text-align:left\">操作</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">:sp [filename]</td>\n<td style=\"text-align:left\">开启一个新窗口，如果有加 filename，表示在新窗口开启一个新文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[ctrl]+w+↓</td>\n<td style=\"text-align:left\">[ctrl]+w 可与下拆开，光标移动到下方的窗口。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[ctrl]+w+↑</td>\n<td style=\"text-align:left\">同上，不过光标移动到上面的窗口。</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"补全\"><a class=\"markdownIt-Anchor\" href=\"#补全\">#</a> 补全</h4>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">组合按钮</th>\n<th style=\"text-align:left\">补齐的内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">[ctrl]+x -&gt; [ctrl]+n</td>\n<td style=\"text-align:left\">透过目前正在编辑的这个『文件的内容文字』作为关键词，予以补齐</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[ctrl]+x -&gt; [ctrl]+f</td>\n<td style=\"text-align:left\">以当前目录内的『文件名』作为关键词，予以补齐</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[ctrl]+x -&gt; [ctrl]+o</td>\n<td style=\"text-align:left\">以扩展名作为语法补充，以 vim 内建的关键词，予以补齐</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"vim-环境设定与记录-~vimrc-~viminfo编码\"><a class=\"markdownIt-Anchor\" href=\"#vim-环境设定与记录-~vimrc-~viminfo编码\">#</a> vim 环境设定与记录： ~/.vimrc, ~/.viminfo，编码</h4>\n<p>pass</p>\n<hr>\n<p>下一篇：<a href=\"/2021/07/05/linuxA0705/\">bash</a><br>\n 上一篇：<a href=\"/2021/05/25/linuxA0525/\">磁盘与文件系统管理</a></p>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linuxA0525/",
            "url": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linuxA0525/",
            "title": "Linux学习 笔记#06 磁盘与文件系统管理",
            "date_published": "2021-05-25T06:17:42.000Z",
            "content_html": "<p>摸了好久🐟 <span id=\"more\"></span></p>\n<h2 id=\"ch7-linux-磁盘与文件系统管理\"><a class=\"markdownIt-Anchor\" href=\"#ch7-linux-磁盘与文件系统管理\">#</a> Ch7 Linux 磁盘与文件系统管理</h2>\n<p>该篇主要讲 Linux 的文件系统 ext，然而用的 WSL 貌似不是 ext 系统，不能用 <code>blkid</code>  和 <code>dumpe2fs</code>  查到相关信息。<br>\nWSL2 可以挂载 Linux 文件系统物理磁盘。<br>\n看完后大概知道为什么不同文件系统支持的文件大小不一样啦，比如之前往 U 盘拷东西时文件超过几个 G 就提示文件太大，还得压缩成分卷。</p>\n<p>使用命令 <code>df -T /</code>  查看文件系统的 superblock 纪录</p>\n<pre><code>Filesystem     Type  1K-blocks     Used Available Use% Mounted on\nrootfs         wslfs 104857596 75166740  29690856  72% /\n</code></pre>\n<p>哦，原来是自己单独搞了个系统格式啊。</p>\n<h3 id=\"文件系统的简单操作\"><a class=\"markdownIt-Anchor\" href=\"#文件系统的简单操作\">#</a> 文件系统的简单操作</h3>\n<p><code>df [-ahikHTm] [目录或文件名] </code></p>\n<ul>\n<li>-a  ：列出所有的文件系统，包括系统特有的 /proc 等文件系统；</li>\n<li>-k  ：以 KBytes 的容量显示各文件系统；</li>\n<li>-m  ：以 MBytes 的容量显示各文件系统；</li>\n<li>-h  ：以人们较易阅读的 GBytes, MBytes, KBytes 等格式自行显示；</li>\n<li>-H  ：以 M=1000K 取代 M=1024K 的进位方式；</li>\n<li>-T  ：连同该 partition 的 filesystem 名称 (例如 xfs) 也列出；</li>\n<li>-i  ：不用磁盘容量，而以 inode 的数量来显示</li>\n</ul>\n<p>在 df 后面加上目录或者是文件时， df 会自动的分析该目录或文件所在的 partition ，并将该 partition 的容量显示出来，<br>\n这样就可以知道某个目录底下还有多少容量可以使用了！</p>\n<p><code>du [-ahskm] 文件或目录名称 </code></p>\n<ul>\n<li>-a  ：列出所有的文件与目录容量，因为默认仅统计目录底下的文件量而已。</li>\n<li>-h  ：以人们较易读的容量格式 (G/M) 显示；</li>\n<li>-s  ：列出总量而已，而不列出每个各别的目录占用容量；</li>\n<li>-S  ：不包括子目录下的总计，与 -s 有点差别。</li>\n<li>-k  ：以 KBytes 列出容量显示；</li>\n<li>-m  ：以 MBytes 列出容量显示；</li>\n</ul>\n<p>检查根目录底下每个目录所占用的容量:  <code>du -sm /*</code> <br>\n 当前文件夹下各个文件大小（屏蔽报错信息） <code>du -h --max-depth=1 2&gt;/dev/null</code></p>\n<p><code>ln [-sf] 来源文件 目标文件文件 </code></p>\n<ul>\n<li>-s  ：如果不加任何参数就进行连结，那就是 hard link，至于 -s 就是 symbolic link</li>\n<li>-f  ：如果 目标文件 存在时，就主动的将目标文件直接移除后再建立！</li>\n</ul>\n<p>简单说，硬链接就是新指向文件内存的指针，软链接是快捷方式到目录……</p>\n<p>磁盘分配和格式化就先跳过啦，偶尔需要的话查一下就行了。</p>\n<p>还有文件系统的挂载，还有建立空文件格式化为系统当磁盘挂载的骚操作啊！</p>\n<hr>\n<p>下一篇：<a href=\"/2021/07/03/linuxA0703/\">压缩，备份与 Vim</a><br>\n 上一篇：<a href=\"/2021/03/22/linuxA0322/\">文件与目录管理</a></p>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/sunway02/",
            "url": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/sunway02/",
            "title": "超算 - 使用指南",
            "date_published": "2021-03-29T08:13:44.000Z",
            "content_html": "<h2 id=\"参考资料\"><a class=\"markdownIt-Anchor\" href=\"#参考资料\">#</a> 参考资料</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5uc2Njd3guY246MTMzNy91cGxvYWRzL2YwZjRiYWY0YjNiYjRiYmQ4OTI3MDBlNDIxZjc2Njc5LnBkZg==\">神威・太湖之光 并行程序设计与优化</span></li>\n</ul>\n<h2 id=\"帮助\"><a class=\"markdownIt-Anchor\" href=\"#帮助\">#</a> 帮助</h2>\n<p><code>sunway --help</code>  查看说明。</p>\n<h2 id=\"作业管理\"><a class=\"markdownIt-Anchor\" href=\"#作业管理\">#</a> 作业管理</h2>\n<ol>\n<li>查看队列： <code>bqueues</code> ， <code>qload -w</code></li>\n<li>提交作业： <code>bsub -q q_x86_expr -n 1 -o runlog ./a.out para1 para2</code> ， <code>-q</code>  后跟提交队列，尽量选任务数少的； <code>-n</code>  后是使用节点个数； <code>-o</code>  是后台运行输出；最后是要运行的 <code>csh</code> 。每道作业有唯一的作业 ID，提交后返回。</li>\n<li>交互： <code>bsub</code>  跟 <code>-I</code>  参数，可终端窗口交互。短线重连使用 <code>bonline jobID</code> 。</li>\n<li>查询作业： <code>bjobs jobID</code> ，  <code>bjobs</code>  查询用户所有作业。</li>\n</ol>\n<h2 id=\"节点说明\"><a class=\"markdownIt-Anchor\" href=\"#节点说明\">#</a> 节点说明</h2>\n<p><code>psn00x</code>  为主节点，仅登录。 <code>psn01x</code>  为支节点，可运行小型作业。大型作业使用 <code>bsub</code>  提交。<br>\n节点跳转： <code>ssh psn011</code> <br>\n <code>GFPS8p</code>  是辅助计算存储系统，辅助 x86 队列可以访问，可成功提交 csh 作业，神威队列不能访问。<br>\n <code>online3</code>  面向神威队列。</p>\n<h2 id=\"csh脚本\"><a class=\"markdownIt-Anchor\" href=\"#csh脚本\">#</a> csh 脚本</h2>\n<ol>\n<li>matlab 使用： <code>matlab -nodisplay -nosplash -nodesktop -r &quot;run('/.../script.m');exit;&quot;</code> ， <code>-nodisplay</code>  是不显示图形输出， <code>-nodesktop</code>  是命令行模式。</li>\n</ol>\n<h2 id=\"其他\"><a class=\"markdownIt-Anchor\" href=\"#其他\">#</a> 其他</h2>\n<ol>\n<li>查看图片： <code>eog file.png</code>  比较卡。</li>\n</ol>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linuxA0322/",
            "url": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linuxA0322/",
            "title": "Linux学习 笔记#05 文件与目录管理",
            "date_published": "2021-03-22T07:26:07.000Z",
            "content_html": "<p>继续学习。 <span id=\"more\"></span><br>\n装了 VScode 和 WSL Ubuntu 18.04 LTS 继续学习 Linux ！之前的虚拟机就不用了。</p>\n<h3 id=\"插曲win-10-wsl-换源\"><a class=\"markdownIt-Anchor\" href=\"#插曲win-10-wsl-换源\">#</a> 插曲：Win 10 WSL 换源</h3>\n<ol>\n<li>备份原始文件，便于出错后恢复<br>\n <code>cp /etc/apt/sources.list /etc/apt/sources.list.bak</code></li>\n<li>修改服务器地址，把 <code>/etc/apt/sources.list</code>  中的内容改为<br>\n deb <span class=\"exturl\" data-url=\"aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS91YnVudHUv\">http://mirrors.aliyun.com/ubuntu/</span> bionic main restricted universe multiverse<br>\ndeb <span class=\"exturl\" data-url=\"aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS91YnVudHUv\">http://mirrors.aliyun.com/ubuntu/</span> bionic-security main restricted universe multiverse<br>\ndeb <span class=\"exturl\" data-url=\"aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS91YnVudHUv\">http://mirrors.aliyun.com/ubuntu/</span> bionic-updates main restricted universe multiverse<br>\ndeb <span class=\"exturl\" data-url=\"aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS91YnVudHUv\">http://mirrors.aliyun.com/ubuntu/</span> bionic-proposed main restricted universe multiverse<br>\ndeb <span class=\"exturl\" data-url=\"aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS91YnVudHUv\">http://mirrors.aliyun.com/ubuntu/</span> bionic-backports main restricted universe multiverse<br>\ndeb-src <span class=\"exturl\" data-url=\"aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS91YnVudHUv\">http://mirrors.aliyun.com/ubuntu/</span> bionic main restricted universe multiverse<br>\ndeb-src <span class=\"exturl\" data-url=\"aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS91YnVudHUv\">http://mirrors.aliyun.com/ubuntu/</span> bionic-security main restricted universe multiverse<br>\ndeb-src <span class=\"exturl\" data-url=\"aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS91YnVudHUv\">http://mirrors.aliyun.com/ubuntu/</span> bionic-updates main restricted universe multiverse<br>\ndeb-src <span class=\"exturl\" data-url=\"aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS91YnVudHUv\">http://mirrors.aliyun.com/ubuntu/</span> bionic-proposed main restricted universe multiverse<br>\ndeb-src <span class=\"exturl\" data-url=\"aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS91YnVudHUv\">http://mirrors.aliyun.com/ubuntu/</span> bionic-backports main restricted universe multiverse</li>\n<li>更新 <code>sudo apt update</code></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0NTEyMjQ0L2FydGljbGUvZGV0YWlscy8xMDc1MTY2Mjg=\">参考博客</span></li>\n</ol>\n<h2 id=\"ch6-linux-文件与目录管理\"><a class=\"markdownIt-Anchor\" href=\"#ch6-linux-文件与目录管理\">#</a> Ch6 Linux 文件与目录管理</h2>\n<h3 id=\"常见处理目录命令\"><a class=\"markdownIt-Anchor\" href=\"#常见处理目录命令\">#</a> 常见处理目录命令</h3>\n<ul>\n<li><code>cd dirname</code>  变换目录， <code>cd == cd ~</code>  都是回到家目录， <code>cd -</code>  是回到刚才的目录。</li>\n<li><code>pwd</code>  显示当前目录， <code>-P</code>  可以显示无链接的实际路径。</li>\n<li><code>mkdir newdir</code>  建立新目录， <code>-p d1/d2/d3</code>  建立多层目录， <code>-m 711</code>  设定权限。</li>\n<li><code>rmdir olddir</code>  删除目录， <code>-p</code>  删除多层空目录。</li>\n<li><code>ls</code>  查看目录文件，一般 <code>ll == ls -al</code>  为所有文件及信息， <code>-h</code>  显示可读文件大小。</li>\n</ul>\n<p>另外， <code>.</code>  或 <code>./</code>  代表当前目录， <code>..</code>  是上一层哦。</p>\n<h3 id=\"复制文件\"><a class=\"markdownIt-Anchor\" href=\"#复制文件\">#</a> 复制文件</h3>\n<p><code>cp</code>  （是 copy 不是 couple</p>\n<ul>\n<li><code>-a</code>  ==  <code>-d</code>  +  <code>-r</code>  +  <code>--preserve=all</code>  == link 复制链接 + 递归复制 + 保持属性复制</li>\n<li><code>-s</code>  创建快捷方式（符号链接）</li>\n<li><code>-i</code>  询问是否覆盖</li>\n<li><code>-l</code>  硬式链接</li>\n<li><code>-u</code>  update，时间更新才复制</li>\n<li><code>-f</code>  强制复制，若目标已存在且无法开启，则移除后再试一次</li>\n<li><code>cp source1 source2 ... dir</code>  多个文件复制，只能复制到目录下</li>\n</ul>\n<h3 id=\"删除文件\"><a class=\"markdownIt-Anchor\" href=\"#删除文件\">#</a> 删除文件</h3>\n<p><code>rm</code>  remove</p>\n<ul>\n<li><code>-i</code>  询问是否删除，root 默认</li>\n<li><code>-r</code>  递归删除</li>\n<li><code>-f</code>  强制删除，不询问<br>\n使用通配符 <code>*</code>  来批量删除，如 <code>rm *.txt</code> <br>\n 使用 <code>\\rm</code>  来忽略 <code>alias</code>  的指定选项。</li>\n</ul>\n<h3 id=\"移动文件\"><a class=\"markdownIt-Anchor\" href=\"#移动文件\">#</a> 移动文件</h3>\n<p><code>mv -fiu</code>  与复制的选项一致。也可以多文件一起移动到某个目录下。</p>\n<h3 id=\"取得文件名和路径\"><a class=\"markdownIt-Anchor\" href=\"#取得文件名和路径\">#</a> 取得文件名和路径</h3>\n<p>对于绝对路径，使用 <code>basename</code>  和 <code>dirname</code>  分别取得文件名和文件路径。</p>\n<h3 id=\"查看文件内容\"><a class=\"markdownIt-Anchor\" href=\"#查看文件内容\">#</a> 查看文件内容</h3>\n<ul>\n<li><code>cat</code>   由第一行开始显示文件内容  <code>-n</code>  显示行号， <code>-T</code>  用 ^T 显示 Tab 键， <code>-v</code>  列出看不见的特殊字符， <code>-E</code>  显示结尾的断行字符 $， <code>-A</code> == <code>-vET</code></li>\n<li><code>tac</code>   从最后一行倒着显示（还是 cat 的倒着写</li>\n<li><code>nl</code>    显示的时候输出行号！</li>\n<li><code>less</code>  与 more 类似，但是比 more 更好的是，他可以往前翻页！</li>\n<li><code>head</code>  只看头几行</li>\n<li><code>tail</code>  只看尾巴几行</li>\n<li><code>od</code>    以二进制的方式读取文件内容</li>\n</ul>\n<h3 id=\"创建文件与修改文件时间\"><a class=\"markdownIt-Anchor\" href=\"#创建文件与修改文件时间\">#</a> 创建文件与修改文件时间</h3>\n<p><code>touch</code>  后接不存在的文件 == 创建该文件，存在文件则修改 access time 和 modification time 为当前。</p>\n<h3 id=\"预设权限隐藏属性与特殊的文件权限\"><a class=\"markdownIt-Anchor\" href=\"#预设权限隐藏属性与特殊的文件权限\">#</a> 预设权限，隐藏属性与特殊的文件权限</h3>\n<p>与 umask，chattr，S*ID 有关，先略过。</p>\n<h3 id=\"观察文件类型\"><a class=\"markdownIt-Anchor\" href=\"#观察文件类型\">#</a> 观察文件类型</h3>\n<p><code>file</code>  可以简单的先判断这个文件的格式为何，比如 ASCII text，data 等等。</p>\n<h3 id=\"查找指令与文件\"><a class=\"markdownIt-Anchor\" href=\"#查找指令与文件\">#</a> 查找指令与文件</h3>\n<p><code>which [-a] command</code>   <code>-a</code>  显示所有由 PATH 目录中可以找到的指令<br>\n <code>whereis [-bmsu] 文件或目或目录名</code></p>\n<ul>\n<li><code>-l</code>     : 列出 whereis 会去查询的几个主要目录</li>\n<li><code>-b</code>     : 只找 binary 格式的文件</li>\n<li><code>-m</code>     : 只找在说明文件 manual 路径下的文件</li>\n<li><code>-s</code>     : 只找 source 来源文件</li>\n<li><code>-u</code>     : 搜寻不在上述三个项目当中的其他特殊文件</li>\n</ul>\n<p><code>locate [-ir] keyword</code></p>\n<ul>\n<li><code>-i</code>   ：忽略大小写的差异；</li>\n<li><code>-c</code>   ：不输出档名，仅计算找到的文件数量</li>\n<li><code>-l</code>   ：仅输出几行的意思，例如输出五行则是  <code>-l 5</code></li>\n<li><code>-S</code>   ：输出 locate 所使用的数据库文件的相关信息，包括该数据库纪录的文件 / 目录数量等</li>\n<li><code>-r</code>   ：后面可接正规表示法的显示方式</li>\n</ul>\n<p><code>find [PATH] [option] [action]</code></p>\n<ol>\n<li>与时间有关的选项：共有 -atime, -ctime 与 -mtime ，以 -mtime 说明</li>\n</ol>\n<ul>\n<li><code>-mtime  n</code>  ：n 为数字，意义为在 n 天之前的 &quot;一天之内&quot; 被更动过内容的文件；</li>\n<li><code>-mtime +n</code>  ：列出在 n 天之前 (不含 n 天本身) 被更动过内容的文件档名；</li>\n<li><code>-mtime -n</code>  ：列出在 n 天之内 (含 n 天本身) 被更动过内容的文件档名。</li>\n<li><code>-newer file</code>  ：file 为一个存在的文件，列出比 file 还要新的文件档名</li>\n</ul>\n<ol start=\"2\">\n<li>与使用者或组名有关的参数：</li>\n</ol>\n<ul>\n<li><code>-uid n</code>  ：n 为数字，这个数字是用户的账号 ID，亦即 UID ，这个 UID 是记录在  <code>/etc/passwd</code>  里面与账号名称对应的数字。</li>\n<li><code>-gid n</code>  ：n 为数字，这个数字是组名的 ID，亦即 GID，这个 GID 记录在  <code>/etc/group</code></li>\n<li><code>-user name</code>  ：name 为使用者账号名称喔！例如 sinki  ；</li>\n<li><code>-group name</code> ：name 为组名喔，例如 users ；</li>\n<li><code>-nouser</code>     ：寻找文件的拥有者不存在  <code>/etc/passwd</code>  的文件。</li>\n<li><code>-nogroup</code>    ：寻找文件的拥有群组不存在于  <code>/etc/group</code>  的文件。当自行安装软件时，很可能该软件的属性当中并没有文件拥有者，在这个时候，就可以使用  <code>-nouser </code> 与  <code>-nogroup</code>  搜寻。</li>\n</ul>\n<ol start=\"3\">\n<li>其他</li>\n</ol>\n<ul>\n<li><code>-name filename</code> ：搜寻文件名为 filename 的文件，可以使用通配符 *；</li>\n<li><code>-size [+-]SIZE</code> ：搜寻比 SIZE 还要大 (+) 或小 (-) 的文件。这个 SIZE 的规格有： c: 代表 byte， k: 代表 1024bytes。</li>\n<li><code>-type TYPE</code>     ：搜寻文件的类型为 TYPE 的，类型主要有：一般正规文件 (f), 装置文件 (b, c), 目录 (d), 连结档 (l), socket (s), 及 FIFO § 等属性。</li>\n<li><code>-exec command</code>  ：command 为其他指令， <code>-exec</code>  后面可再接额外的指令来处理搜寻到的结果，比如 <code>ls -l</code> ，但不能用别名 <code>ll</code> 。</li>\n</ul>\n<hr>\n<p>下一篇：<a href=\"/2021/05/25/linuxA0525/\">磁盘与文件系统管理</a><br>\n上一篇：<a href=\"/2020/12/24/linux1224/\">文件权限与目录配置</a></p>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/sunway01/",
            "url": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/sunway01/",
            "title": "超算远程访问",
            "date_published": "2021-03-16T03:01:16.000Z",
            "content_html": "<p>#登录账号成功<br>\n #正在建立远程安全连接…<br>\n# 连接成功<br>\n #访问服务器…<br>\n# 访问成功<span id=\"more\"></span></p>\n<hr>\n<p>毕设要正式开始了，昨天问师姐要了账户信息，很快就成功访问了机器……</p>\n<h2 id=\"访问步骤\"><a class=\"markdownIt-Anchor\" href=\"#访问步骤\">#</a> 访问步骤</h2>\n<ol>\n<li>访问<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5uc2Njd3guY24=\">超算中心官网</span>，选择教育网登录。</li>\n<li>下载安装 Hillstone secure connect，并按<span class=\"exturl\" data-url=\"aHR0cDovL25zY2N3eC5jbjoxMzM3L3VwbG9hZHMvMGI2MDhkMGI4ZjlmNGI0NTljZjQzYTI5ZDY3MTU1YjIucGRm\">手册</span>登录。</li>\n<li>连接成功后，使用集群内部账户进行登录。这里我使用的是 Xshell 5，SSH 隧道启用 X11 转移，选择 X DISPLAY。</li>\n<li>登入成功。</li>\n</ol>\n<img style=\"display: inline-block; width: 70%; max-width: 70%; height: auto;\" data-src=\"connect.png\" />\n<h2 id=\"信息查看与图形化界面\"><a class=\"markdownIt-Anchor\" href=\"#信息查看与图形化界面\">#</a> 信息查看与图形化界面</h2>\n<p>执行命令 <code>sunway --help</code>  可以查看帮助，执行 <code>sunway hardware</code>  可以查看超算硬件信息。（Sunway 就是神威吧<br>\n<img style=\"display: inline-block; width: 70%; max-width: 70%; height: auto;\" data-src=\"connect2.png\" /></p>\n<p>查看了下系统信息，登入服务器是 Linux Redhat，已启用 SSH 的 X 转发。</p>\n<p>安装 Xming，在快捷方式中配置目标 <code>D:\\Softwares\\Messager\\Xming\\Xming.exe -multiwindow</code> ，以多窗口模式启动。<br>\n执行 <code>nautilus</code> ，在家目录中打开资源管理器。<br>\n<img style=\"display: inline-block; width: 70%; max-width: 70%; height: auto;\" data-src=\"桌面.png\" /><br>\n执行 <code>nautilus --no-desktop .</code> ，在当前工作路径下打开资源管理器，且不显示桌面。</p>\n<h2 id=\"w゚д゚w\"><a class=\"markdownIt-Anchor\" href=\"#w゚д゚w\">#</a> w(ﾟДﾟ)w</h2>\n<p>登入成功后官网接入地图上就增加了我所在的地理位置欸欸欸！！<br>\n一个参数化的模式结果快要有 1T 了！！！<br>\n这真的是我可以访问的资源嘛嘛嘛！！<br>\n作为一个小白啥命令都不敢用万一把数据搞坏了怎么办！！<br>\n激动中，可不可以在全球最快的超算<sub>之一</sub>上玩玩游戏什么的（打死</p>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linux1224/",
            "url": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linux1224/",
            "title": "Linux学习 笔记#04 文件权限与目录配置",
            "date_published": "2020-12-24T07:07:18.000Z",
            "content_html": "<p><code>chmod 000 filename</code>  <span id=\"more\"></span></p>\n<h2 id=\"ch5-linux的文件权限与目录配置\"><a class=\"markdownIt-Anchor\" href=\"#ch5-linux的文件权限与目录配置\">#</a> Ch5 Linux 的文件权限与目录配置</h2>\n<h3 id=\"使用者与群组\"><a class=\"markdownIt-Anchor\" href=\"#使用者与群组\">#</a> 使用者与群组</h3>\n<p>Linux 一般将文件可存取的身份分为三个类别，分别是 owner/group/others，且三种身份各有<br>\n read/write/execute 等权限。而 root 可以访问所有文件。</p>\n<h3 id=\"文件权限\"><a class=\"markdownIt-Anchor\" href=\"#文件权限\">#</a> 文件权限</h3>\n<p><code>ls -al</code> ：查看当前目录下文件（夹）的详细的权限与属性 （包含隐藏文件）</p>\n<img style=\"display: inline-block; width: 70%; max-width: 70%; height: auto;\" data-src=\"1.png\" />\n<p>字段含义：</p>\n<img style=\"display: inline-block; width: 70%; max-width: 70%; height: auto;\" data-src=\"2.png\" />\n<img style=\"display: inline-block; width: 40%; max-width: 70%; height: auto;\" data-src=\"3.png\" />\n<p>档案类型为 <code>d</code>  时表示文件夹， <code>-</code>  表示文件， <code>l</code>  表示为连结档（link file）， <code>b</code>  表示装置文件里面的可供储存的接口设备（可随机存取装置）， <code>c</code>  表示装置文件里面的串行端口设备，例如键盘、鼠标（一次性读取装置）。</p>\n<p>对文件而言：</p>\n<ul>\n<li>可读 (r) 代表读取文件内容</li>\n<li>可执行 (x) 表示是否具有执行的能力</li>\n<li>可写 (w) 权限代表具有写入 / 编辑 / 新增 / 修改文件的内容的权限，但并不具备有删除该文件本身的权限</li>\n</ul>\n<p>对目录而言：</p>\n<ul>\n<li>可读 (r) 代表读取目录结构列表，可以 <code>ls</code>  查询该目录下的文件名数据</li>\n<li>可执行 (x) 表示用户能否进入该目录成为工作目录，即 <code>cd</code>  进入</li>\n<li>可写 (w) 权限代表具有异动该目录结构列表的权限，即\n<ul>\n<li>建立新的文件与目录</li>\n<li>删除已经存在的文件与目录 (不论该文件的权限为何！)</li>\n<li>将已存在的文件或目录进行更名</li>\n<li>搬移该目录内的文件、目录位置<br>\n开放目录给任何人浏览时，应该至少也要给予 r 及 x 的权限，但 w 权限不可随便给！</li>\n</ul>\n</li>\n</ul>\n<p>案例：<br>\n假设两个档名，分别是 <code>/dir1/file1</code>  和 <code>/dir2</code> 。现在在系统使用 riolu 这个账号，那么这个账号针对  <code>/dir1</code> ,  <code>/dir1/file1</code> ,  <code>/dir2</code>  这三个档名来说，分别需要哪些最小的权限才能达成各项任务？</p>\n<img style=\"display: inline-block; width: 90%; max-width: 90%; height: auto;\" data-src=\"4.png\" />\n<p>实际上没有 r 权限时，只要知道目录下的文件名就可以操作！只是，没有 r 的话，使用  <code>tab</code>  时，他就无法自动帮你补齐档名了！</p>\n<h3 id=\"修改权限\"><a class=\"markdownIt-Anchor\" href=\"#修改权限\">#</a> 修改权限</h3>\n<h4 id=\"群组-chgrp\"><a class=\"markdownIt-Anchor\" href=\"#群组-chgrp\">#</a> 群组  <code>chgrp</code></h4>\n<p>记得使用 root 权限修改哦。<br>\n要被改变的组名必须要在 /etc/group 文件内存在。<br>\n用法： <code>chgrp [-R] grpname dir/filename</code>  。grp 是 group 的缩写， <code>-R</code>  表示目录下所有文件递归（recursive）修改。</p>\n<h4 id=\"拥有者-chown\"><a class=\"markdownIt-Anchor\" href=\"#拥有者-chown\">#</a> 拥有者  <code>chown</code></h4>\n<p>用法：<br>\n <code>chown [-R] usrname dir/filename</code> <br>\n <code>chown [-R] usrname:grpname dir/filename</code> <br>\n <code>chown [-R] usrname.grpname dir/filename</code> <br>\n <code>chown [-R] .grpname dir/filename</code></p>\n<h4 id=\"权限-chmod\"><a class=\"markdownIt-Anchor\" href=\"#权限-chmod\">#</a> 权限  <code>chmod</code></h4>\n<p>一种是用数字修改，但我觉得符号改比较人性化～</p>\n<p>用法：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">chmod</th>\n<th style=\"text-align:center\">u g o a(all)</th>\n<th style=\"text-align:center\">+(加入) -(除去) =(设定)</th>\n<th style=\"text-align:center\">r w x</th>\n<th style=\"text-align:center\">文件或目录</th>\n</tr>\n</thead>\n</table>\n<p>如： <code>chmod u=rwx,go+rx .bashrc</code></p>\n<h3 id=\"文件名规则\"><a class=\"markdownIt-Anchor\" href=\"#文件名规则\">#</a> 文件名规则</h3>\n<ol>\n<li>前面加 <code>.</code>  是隐藏文件</li>\n<li>权限组开头为 <code>l</code>  的是链接档，类似于快捷方式</li>\n<li>最好不要含 <code>* ? &gt; &lt; ; &amp; ! [ ] | \\ ' &quot;  \\( \\) \\&#123; \\&#125; -</code>  ` 等符号</li>\n</ol>\n<h3 id=\"目录配置\"><a class=\"markdownIt-Anchor\" href=\"#目录配置\">#</a> 目录配置</h3>\n<p>一般 Linux 下有这样的目录约定：</p>\n<ol>\n<li><code>/</code>   根目录</li>\n<li><code>/usr(unix software resource)</code>  软件放置处</li>\n<li><code>/var(variable)</code>  与系统运作过程有关</li>\n<li><code>/opt</code>  第三方软件，以前也在 <code>/usr/local</code>  下</li>\n<li><code>/etc</code>  配置文件</li>\n<li><code>lost+found</code>  并不是回收处，而是当文件系统发生错误时，将一些遗失的片段放置到这个目录下。</li>\n</ol>\n<p>更多的可以去搜 Filesystem Hierarchy Standard (FHS)。</p>\n<hr>\n<p>下一篇：<a href=\"/2021/03/22/linuxA0322/\">文件与目录管理</a><br>\n上一篇：<a href=\"/2020/11/12/linux1112/\">登入系统</a></p>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/hpc1206/",
            "url": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/hpc1206/",
            "title": "高性能计算#04 HPL测试GPU",
            "date_published": "2020-12-06T08:44:18.000Z",
            "content_html": "<p>- HPL 测试 MKL+MPICH - <span id=\"more\"></span></p>\n<h2 id=\"环境搭建\"><a class=\"markdownIt-Anchor\" href=\"#环境搭建\">#</a> 环境搭建</h2>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdV9mZW5nX3ppXy9hcnRpY2xlL2RldGFpbHMvMTA3MjMyMjUy\">GPU 驱动</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdV9mZW5nX3ppXy9hcnRpY2xlL2RldGFpbHMvMTA3MjM0Mjcx\">CUDA</span><br>\n<s>3. <a href=\"/2020/12/04/hpc1204/#%E5%AE%89%E8%A3%85OpenBLAS\">OpenBLAS</a></s><br>\n<s>4. <a href=\"/2020/12/04/hpc1204/#%E5%AE%89%E8%A3%85openMPI\">OpenMPI</a></s></li>\n<li>编译器：系统自带的 GNU 编译器</li>\n</ol>\n<p><em>可惜集群上的 CUDA 是 9.0 的，不支持 MPI-3.0，想着下一个 Intel mpi，结果这玩意不能单独下，要下一个 OneAPI，压缩包和 CUDA 11.0 一样超大。</em></p>\n<h3 id=\"mpich2\"><a class=\"markdownIt-Anchor\" href=\"#mpich2\">#</a> MPICH2</h3>\n<ol>\n<li>官方下载：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5tcGljaC5vcmcvc3RhdGljL2Rvd25sb2Fkcy8zLjIuMS9tcGljaC0zLjIuMS50YXIuZ3o=\">mpich-3.2.1.tar.gz</span>，可以用 <code>wget</code> 。</li>\n<li>解压，新建文件夹 <code>mpich</code>  作为安装文件夹</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> mpich-3.2.1/</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>./configure --prefix<span class=\"token operator\">=</span>/home/riolu/HPL/mpich <span class=\"token assign-left variable\">CFLAGS</span><span class=\"token operator\">=</span><span class=\"token string\">\"-fPIC\"</span> <span class=\"token assign-left variable\">CXXFLAGS</span><span class=\"token operator\">=</span><span class=\"token string\">\"-fPIC\"</span> --enable-shared --enable-sharedlibs<span class=\"token operator\">=</span>gcc --with-cuda<span class=\"token operator\">=</span>/usr/local/cuda-10.0/ --with-cuda-include<span class=\"token operator\">=</span>/usr/local/cuda-10.0/include --with-cuda-libpath<span class=\"token operator\">=</span>/usr/local/cuda-10.0/lib64</pre></td></tr></table></figure><p>如果不加这些参数会报错：</p>\n<pre><code>libmpich.a(allreduce.o): relocation R_X86_64_32 against `.rodata.str1.8' can not be used when making a shared object; recompile with -fPIC\n</code></pre>\n<ol start=\"3\">\n<li>接下来</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">make</span> clean</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">make</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">make</span> <span class=\"token function\">install</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>gedit ~/.bashrc</pre></td></tr></table></figure><p>在后面加上</p>\n<pre><code>export PATH=/home/riolu/HPL/mpich/bin:$PATH\nexport MANPATH=/home/riolu/HPL/mpich/man:$MANPATH\nexport LD_LIBRARY_PATH=/home/riolu/HPL/mpich/lib:$LD_LIBRARY_PATH //不知要不要\n</code></pre>\n<p>保存后</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">source</span> ~/.bashrc</pre></td></tr></table></figure><h3 id=\"intel-mkl\"><a class=\"markdownIt-Anchor\" href=\"#intel-mkl\">#</a> Intel MKL</h3>\n<ol>\n<li>下载单独安装包：<span class=\"exturl\" data-url=\"aHR0cDovL3JlZ2lzdHJhdGlvbmNlbnRlci1kb3dubG9hZC5pbnRlbC5jb20vYWtkbG0vaXJjX25hcy90ZWMvMTU4MTYvbF9ta2xfMjAxOS41LjI4MS50Z3o=\">l_mkl_2019.5.281.tgz</span></li>\n<li>解压后进入，执行 <code>sh install.sh</code> ，按提示进行。</li>\n<li>配置 <code>.bashrc</code> ，添加</li>\n</ol>\n<pre><code># added for intel\nexport LD_LIBRARY_PATH=/home/riolu/intel/mkl/lib/intel64:$LD_LIBRARY_PATH\n</code></pre>\n<p>执行 <code>source ~/.bashrc</code> 。<br>\n如果报错找不到共享库的话可能是因为没有加这个路径。</p>\n<h2 id=\"hpl\"><a class=\"markdownIt-Anchor\" href=\"#hpl\">#</a> HPL</h2>\n<ol>\n<li>官方下载网站下载：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIubnZpZGlhLmNvbS9jb21wdXRld29ya3MtZGV2ZWxvcGVyLWV4Y2x1c2l2ZS1kb3dubG9hZHM=\">hpl-2.0_FERMI_v15.tgz</span><br>\n 需要注册一下。</li>\n<li>进入解压后的文件夹，修改 Make.CUDA 的参数</li>\n</ol>\n<pre><code>TOPdir = $(HOME)/HPL/hpl-2.0_FERMI_v15 #hpl所在的路径目录\n..............................................................\nMPdir  = $(HOME)/HPL/mpich\nMPinc = -I$(MPdir)/include          \nMPlib = -L$(MPdir)/lib\n..............................................................    \nLAdir   =$(HOME)/intel/mkl/lib/intel64\nLAMP5dir    = $(HOME)/intel/compilers_and_libraries/linux/lib/intel64\nLAinc        = -I$(HOME)/intel/mkl/include\nLAlib        = -L $(TOPdir)/src/cuda  -ldgemm -L/usr/local/cuda-10.0/lib64 -lcuda -lcudart -lcublas -L$(LAdir) -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -liomp5\n\nHPL_INCLUDES = -I$(INCdir) -I$(INCdir)/$(ARCH) $(LAinc) $(MPinc) -I/usr/local/cuda-10.0/include\n..............................................................\nCC   =$(MPdir)/bin/mpicc\n\n..............................................................\n</code></pre>\n<ol start=\"3\">\n<li>修改 <code>src/cuda/Makefile</code>  为里的 <code>cuda</code>  路径为 <code>cuda-10.0</code></li>\n<li>编译</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">make</span> <span class=\"token assign-left variable\">arch</span><span class=\"token operator\">=</span>CUDA clean_arch_all</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">make</span> <span class=\"token assign-left variable\">arch</span><span class=\"token operator\">=</span>CUDA</pre></td></tr></table></figure><p>若报错 <code>/usr/bin/ld: 找不到 -liomp5</code>  则可以做一个软链接，执行</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ln</span> -s /home/intel/lib/intel64/libiomp5.so /home/intel/mkl/lib/intel64/libiomp5.so</pre></td></tr></table></figure><ol start=\"5\">\n<li><code>/bin/CUDA</code>  目录下生成两个文件：HPL.dat 和 xhpl。在该目录新建一个 <code>test.sh</code>  文件，内容为</li>\n</ol>\n<pre><code>export HPL_DIR=/home/riolu/HPL/hpl-2.0_FERMI_v15\nexport MKL_NUM_THREADS=6\nexport OMP_NUM_THREADS=2\nexport MKL_DYNAMIC=FALSE\nexport CUDA_DGEMM_SPLIT=0.954\nexport CUDA_DTRSM_SPLIT=0.946\nexport LD_LIBRARY_PATH=$HPL_DIR/src/cuda:$LD_LIBRARY_PATH\n$HPL_DIR/bin/CUDA/xhpl\n</code></pre>\n<p>其中</p>\n<ul>\n<li>MKL_NUM_THREADS：每个进程使用的 CPU 核的数量</li>\n<li>OMP_NUM_THREADS：每个 GPU 使用的 CPU 核的数量<br>\n例如：2 个 GPU 和 8 个 CPU，则 OMP_NUM_THREADS=4</li>\n<li>CUDA_DGEMM_SPLIT：发送给 GPU 的 DGEMM 占总的百分比，大致等于 (GPU GFLOPS)/(GPU GFLOPS + CPU GFLOPS)，或者 350  / ( 350 + 每个 GPU 的 CPU 数量 * 4 * CPU 基本频率 )</li>\n<li>CUDA_DTRSM_SPLIT：发送给 GPU 的 DTRSM 占总的百分比，通常比 DGEMM 低 0.05-0.10</li>\n<li>HPL_DIR：文件的路径</li>\n</ul>\n<ol start=\"6\">\n<li>单节点执行： <code>./run_linpack.sh</code> <br>\n 多节点执行（没有测试过，仅供参考）： <code>mpiexec.hydra -np 7 ./test.sh</code></li>\n</ol>\n<h2 id=\"初步结果\"><a class=\"markdownIt-Anchor\" href=\"#初步结果\">#</a> 初步结果</h2>\n<pre><code>\t================================================================================\n\tHPLinpack 2.0  --  High-Performance Linpack benchmark  --   September 10, 2008\n\tWritten by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK\n\tModified by Piotr Luszczek, Innovative Computing Laboratory, UTK\n\tModified by Julien Langou, University of Colorado Denver\n\t================================================================================\n\n\tAn explanation of the input/output parameters follows:\n\tT/V    : Wall time / encoded variant.\n\tN      : The order of the coefficient matrix A.\n\tNB     : The partitioning blocking factor.\n\tP      : The number of process rows.\n\tQ      : The number of process columns.\n\tTime   : Time in seconds to solve the linear system.\n\tGflops : Rate of execution for solving the linear system.\n\n\tThe following parameter values will be used:\n\n\tN      :   25000\n\tNB     :     768\n\tPMAP   : Row-major process mapping\n\tP      :       1\n\tQ      :       1\n\tPFACT  :    Left\n\tNBMIN  :       2\n\tNDIV   :       2\n\tRFACT  :    Left\n\tBCAST  :   1ring\n\tDEPTH  :       1\n\tSWAP   : Spread-roll (long)\n\tL1     : no-transposed form\n\tU      : no-transposed form\n\tEQUIL  : yes\n\tALIGN  : 8 double precision words\n\n\t--------------------------------------------------------------------------------\n\n\t- The matrix A is randomly generated for each test.\n\t- The following scaled residual check will be computed:\n\t\t  ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )\n\t- The relative machine precision (eps) is taken to be               1.110223e-16\n\t- Computational tests pass if scaled residuals are less than                16.0\n\n\t================================================================================\n\tT/V                N    NB     P     Q               Time                 Gflops\n\t--------------------------------------------------------------------------------\n\tWR10L2L2       25000   768     1     1              10.58              9.843e+02\n\t--------------------------------------------------------------------------------\n\t||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=        0.0044272 ...... PASSED\n\t================================================================================\n\n\tFinished      1 tests with the following results:\n\t\t\t\t  1 tests completed and passed residual checks,\n\t\t\t\t  0 tests completed and failed residual checks,\n\t\t\t\t  0 tests skipped because of illegal input values.\n\t--------------------------------------------------------------------------------\n\n\tEnd of Tests.\n\t================================================================================\n</code></pre>\n<p>速度是 CPU 的 3 倍……</p>\n<h3 id=\"gpu信息获取\"><a class=\"markdownIt-Anchor\" href=\"#gpu信息获取\">#</a> GPU 信息获取</h3>\n<ol>\n<li>查看 nvidia GPU 型号<br>\n <code>lspci | grep -i nvidia</code></li>\n<li>查看 Nvidia 显卡信息及使用情况<br>\n <code>nvidia-smi</code></li>\n</ol>\n<pre><code>Wed Dec  9 02:23:00 2020\n\t\t+-----------------------------------------------------------------------------+\n\t\t| NVIDIA-SMI 410.129      Driver Version: 410.129      CUDA Version: 10.0     |\n\t\t|-------------------------------+----------------------+----------------------+\n\t\t| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n\t\t| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n\t\t|===============================+======================+======================|\n\t\t|   0  Tesla P100-PCIE...  Off  | 00000000:05:00.0 Off |                    0 |\n\t\t| N/A   34C    P0    36W / 250W |   2391MiB / 16280MiB |      0%      Default |\n\t\t+-------------------------------+----------------------+----------------------+\n\t\t|   1  Tesla P100-PCIE...  Off  | 00000000:08:00.0 Off |                    0 |\n\t\t| N/A   40C    P0    40W / 250W |   2391MiB / 16280MiB |      0%      Default |\n\t\t+-------------------------------+----------------------+----------------------+\n\t\t|   2  Tesla P100-PCIE...  Off  | 00000000:09:00.0 Off |                    0 |\n\t\t| N/A   46C    P0   194W / 250W |   2391MiB / 16280MiB |    100%      Default |\n\t\t+-------------------------------+----------------------+----------------------+\n\t\t|   3  Tesla P100-PCIE...  Off  | 00000000:84:00.0 Off |                    0 |\n\t\t| N/A   40C    P0    39W / 250W |   2391MiB / 16280MiB |      0%      Default |\n\t\t+-------------------------------+----------------------+----------------------+\n\t\t|   4  Tesla P100-PCIE...  Off  | 00000000:88:00.0 Off |                    0 |\n\t\t| N/A   36C    P0    36W / 250W |   2391MiB / 16280MiB |    100%      Default |\n\t\t+-------------------------------+----------------------+----------------------+\n\t\t|   5  Tesla P100-PCIE...  Off  | 00000000:89:00.0 Off |                    0 |\n\t\t| N/A   42C    P0   185W / 250W |   2391MiB / 16280MiB |    100%      Default |\n\t\t+-------------------------------+----------------------+----------------------+\n\n\t\t+-----------------------------------------------------------------------------+\n\t\t| Processes:                                                       GPU Memory |\n\t\t|  GPU       PID   Type   Process name                             Usage      |\n\t\t|=============================================================================|\n\t\t|    0      3451      C   ...wei/HPL/hpl-2.0_FERMI_v15/bin/CUDA/xhpl  2363MiB |\n\t\t|    1      3455      C   ...wei/HPL/hpl-2.0_FERMI_v15/bin/CUDA/xhpl  2363MiB |\n\t\t|    2      3452      C   ...wei/HPL/hpl-2.0_FERMI_v15/bin/CUDA/xhpl  2363MiB |\n\t\t|    3      3456      C   ...wei/HPL/hpl-2.0_FERMI_v15/bin/CUDA/xhpl  2363MiB |\n\t\t|    4      3453      C   ...wei/HPL/hpl-2.0_FERMI_v15/bin/CUDA/xhpl  2363MiB |\n\t\t|    5      3457      C   ...wei/HPL/hpl-2.0_FERMI_v15/bin/CUDA/xhpl  2363MiB |\n\t\t+-----------------------------------------------------------------------------+\n</code></pre>\n<p>表头释义：<br>\n+ Fan：显示风扇转速，数值在 0 到 100% 之间，是计算机的期望转速，如果不是通过风扇冷却或者风扇坏了，显示出来就是 N/A；<br>\n+ Temp：显卡内部的温度，单位是摄氏度；<br>\n+ Perf：表征性能状态，从 P0 到 P12，P0 表示最大性能，P12 表示状态最小性能；<br>\n+ Pwr：能耗表示；<br>\n+ Bus-Id：涉及 GPU 总线的相关信息；<br>\n+ Disp.A：是 Display Active 的意思，表示 GPU 的显示是否初始化；<br>\n+ Memory Usage：显存的使用率；<br>\n+ Volatile GPU-Util：浮动的 GPU 利用率；<br>\n+ Compute M：计算模式；<br>\n+ Processes 显示每块 GPU 上每个进程所使用的显存情况。<br>\n3. 周期性输出显卡的使用情况<br>\n <code>watch -n 10 nvidia-smi</code> <br>\n 命令行参数 - n 后边跟的是执行命令的周期，以 s 为单位。<br>\n3. 查看 GPU 名称<br>\n <code>nvidia-smi -L</code></p>\n<pre><code>GPU 0: Tesla P100-PCIE-16GB (UUID: GPU-1f613914-b422-06ad-cd7d-d2649435f480)\nGPU 1: Tesla P100-PCIE-16GB (UUID: GPU-d8f026e7-9714-39f6-af4a-f8328cbdb3c9)\nGPU 2: Tesla P100-PCIE-16GB (UUID: GPU-fb22db8b-9de3-691e-53da-d34aec4b6abb)\nGPU 3: Tesla P100-PCIE-16GB (UUID: GPU-ddf0cbc8-3c92-0b3d-5496-b65361fe18a0)\nGPU 4: Tesla P100-PCIE-16GB (UUID: GPU-7a94ce44-3e66-d05d-3d58-d625930a2aad)\nGPU 5: Tesla P100-PCIE-16GB (UUID: GPU-16423caf-0037-6742-2977-ba03f4937b9b)\n</code></pre>\n<hr>\n<p><em>修改日期：2020 年 12 月 7 日</em></p>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linux1206/",
            "url": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linux1206/",
            "title": "Linux学习 笔记#03 指令集",
            "date_published": "2020-12-06T06:27:18.000Z",
            "content_html": "<p>单开一篇整理常用指令。 <span id=\"more\"></span></p>\n<h2 id=\"查找\"><a class=\"markdownIt-Anchor\" href=\"#查找\">#</a> 查找</h2>\n<p><code>grep -rl &quot;string&quot; /path</code> <br>\n <code>-r</code>  为递归查找， <code>-l</code>  为只显示文件名加快速度。</p>\n<h2 id=\"文件操作\"><a class=\"markdownIt-Anchor\" href=\"#文件操作\">#</a> 文件操作</h2>\n<ol>\n<li>\n<p>创建文件<br>\n <code>touch new.txt</code></p>\n</li>\n<li>\n<p>修改文件名 / 移动文件<br>\n <code>mv old.txt new.txt</code></p>\n</li>\n<li>\n<p>删除文件（夹）<br>\n <code>rm filename</code> <br>\n <code>rm -r dirname</code></p>\n</li>\n<li>\n<p>修改权限<br>\n <code>chmod [-R] 777|700 filename|dirname</code> <br>\n 其中加 <code>-R</code>  是递归修改，777 是完全权限。参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZseV93dC9hcnRpY2xlL2RldGFpbHMvODI5ODY1MDQ=\">某博客</span></p>\n</li>\n<li>\n<p>节点间转移文件<br>\n <code>scp filename usrname@copytonodename:/home/usrname</code></p>\n</li>\n<li>\n<p>解压<br>\n <code>tar -zxvf file.tar.gz -C dirname</code></p>\n</li>\n<li>\n<p>压缩<br>\n <code>tar -zcvf file.tar.gz file</code></p>\n</li>\n</ol>\n<h2 id=\"查看信息\"><a class=\"markdownIt-Anchor\" href=\"#查看信息\">#</a> 查看信息</h2>\n<h3 id=\"空间\"><a class=\"markdownIt-Anchor\" href=\"#空间\">#</a> 空间</h3>\n<ol>\n<li>\n<p>硬盘空间<br>\n <code>df -hl</code></p>\n</li>\n<li>\n<p>当前文件夹下各个文件大小（屏蔽报错信息）<br>\n <code>du -h --max-depth=1 2&gt;/dev/null</code></p>\n</li>\n</ol>\n<h3 id=\"内存\"><a class=\"markdownIt-Anchor\" href=\"#内存\">#</a> 内存</h3>\n<ol start=\"3\">\n<li>\n<p>内存<br>\n <code>cat /proc/meminfo</code> <br>\n 或<br>\n <code>free -h</code></p>\n</li>\n<li>\n<p>查看当前进程<br>\n <code>top</code> <br>\n <code>1</code> ： 查看各逻辑 cpu 情况。<br>\n <code>F</code> - <code>方向键选择P=Last Used Cpu</code> - <code>空格</code> ：显示进程在哪个 CPU 上运行。<br>\n <code>q</code> ： 退出。</p>\n</li>\n</ol>\n<h3 id=\"系统信息\"><a class=\"markdownIt-Anchor\" href=\"#系统信息\">#</a> 系统信息</h3>\n<ol start=\"2\">\n<li>操作系统发行版信息<br>\n <code>cat /etc/issue</code></li>\n<li>网卡信息<br>\n <code>dmesg | grep -i eth</code></li>\n<li>查看节点 / 主机名称<br>\n <code>cat /etc/hosts</code></li>\n</ol>\n<h3 id=\"cpu\"><a class=\"markdownIt-Anchor\" href=\"#cpu\">#</a> CPU</h3>\n<ol>\n<li>\n<p>逻辑 CPU 个数与 CPU 型号<br>\n <code>cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c</code></p>\n</li>\n<li>\n<p>物理 CPU 个数<br>\n <code>grep &quot;physical id&quot; /proc/cpuinfo|sort -u</code></p>\n</li>\n<li>\n<p>每个物理 CPU 内核个数<br>\n <code>grep &quot;cpu cores&quot; /proc/cpuinfo|uniq</code></p>\n</li>\n<li>\n<p>每个物理 CPU 上逻辑 CPU 个数<br>\n <code>grep &quot;siblings&quot; /proc/cpuinfo|uniq</code> <br>\n 逻辑 CPU 个数是物理个数的两倍，说明开启了超线程。</p>\n</li>\n<li>\n<p>每个逻辑 CPU 对应的物理位置<br>\n <code>cat /proc/cpuinfo | grep -E &quot;physical id|processor&quot;</code></p>\n</li>\n</ol>\n<h2 id=\"编译\"><a class=\"markdownIt-Anchor\" href=\"#编译\">#</a> 编译</h2>\n<h3 id=\"使用-openmpi-的-mpicc-编译mpi程序并运行\"><a class=\"markdownIt-Anchor\" href=\"#使用-openmpi-的-mpicc-编译mpi程序并运行\">#</a> 使用 OpenMPI 的 mpicc 编译 MPI 程序并运行</h3>\n<pre><code>mpicc -show   //查看指令封装内容\nmpicc -o hello hello_mpi.c\nldd hello     //查看链接库\nmpirun -np 8 ./hello\n</code></pre>\n<p>设置运行节点：</p>\n<pre><code>mpirun -np 16 -machinefile nodelist ./cpi\n</code></pre>\n<p>或</p>\n<pre><code>mpirun -p4pg pgfile ./cpi\n</code></pre>\n<p>超线程（不建议使用）：</p>\n<pre><code>mpirun -oversubscribe -np 32 -machinefile nodelist ./cpi\n</code></pre>\n<p>nodelist 写法：</p>\n<pre><code>node0 slots=2 max_slots=20\nnode1 slots=2 max_slots=20\n</code></pre>\n<p>参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3Blbi1tcGkub3JnL2ZhcS8/Y2F0ZWdvcnk9cnVubmluZyNtcGlydW4tc2NoZWR1bGluZw==\">How do I control how my processes are scheduled across nodes</span></p>\n<hr>\n<p><em>创建日期：2020 年 12 月 6 日</em></p>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/hpc1205/",
            "url": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/hpc1205/",
            "title": "高性能计算#03 HPCG搭建",
            "date_published": "2020-12-05T08:13:18.000Z",
            "content_html": "<p>- HPCG 测试 OPENBLAS+OPENMPI - <span id=\"more\"></span></p>\n<h2 id=\"环境搭建\"><a class=\"markdownIt-Anchor\" href=\"#环境搭建\">#</a> 环境搭建</h2>\n<p>前几篇中已经配置好了<a href=\"/2020/12/02/hpc1202/#%E5%AE%89%E8%A3%85MPICH\"> c++ 编译器</a>，以及<a href=\"/2020/12/04/hpc1204/#%E5%AE%89%E8%A3%85openMPI\"> openmpi 并行环境</a>。</p>\n<p>#TODO 若是在 Intel 处理器上建议用 Intel 自家的编译器、mpi、hpcg 执行文件……</p>\n<h2 id=\"hpcg安装与编译\"><a class=\"markdownIt-Anchor\" href=\"#hpcg安装与编译\">#</a> HPCG 安装与编译</h2>\n<ol>\n<li>\n<p>官方下载网站下载：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hwY2ctYmVuY2htYXJrL2hwY2c=\">hpcg-master</span></p>\n</li>\n<li>\n<p>进入 <code>setup</code>  文件夹下，修改 <code>Make.Linux_MPI</code> ，另存为 <code>Make.Linux</code> 。<br>\nMPdir        = <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>H</mi><mi>O</mi><mi>M</mi><mi>E</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mi>H</mi><mi>P</mi><mi>L</mi><mi mathvariant=\"normal\">/</mi><mi>o</mi><mi>p</mi><mi>e</mi><mi>n</mi><mi>m</mi><mi>p</mi><mi>i</mi><mi>M</mi><mi>P</mi><mi>i</mi><mi>n</mi><mi>c</mi><mo>=</mo><mo>−</mo><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">(HOME)/HPL/openmpi\n     MPinc        = -I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mclose\">)</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\">L</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span>(MPdir)/include<br>\nMPlib        = -L$(MPdir)/lib</p>\n<pre><code> CXX          = $(MPdir)/bin/mpicxx\n</code></pre>\n</li>\n<li>\n<p>设置安装环境：到安装目录下， <code>mkdir hpcg</code> ,  <code>cd hpcg</code> ,  <code>~/HPL/hpcg-master/configure Linux</code></p>\n</li>\n<li>\n<p>安装测试： <code>make</code> ， <code>cd bin</code> ， <code>mpirun -np 16 ./xhpcg</code> 。<br>\n <code>hpcg.dat</code>  很简单，第三行是执行的问题的规模，第四行是执行的时间（秒）。<br>\nHPCG 测试很快（整机仅需几分钟），测试时需要不断调节 n 值，以获得一个较好的测试结果。<br>\nn 值不能设置太小，否则测试完全在缓存中进行，测试需要保证内存占用 &gt; 25%。<br>\n官方规定运行时间必须要 1800s 才能得到一个正式的结果。但 t 较小时得到的结果相差不大。</p>\n</li>\n<li>\n<p>测试结束后在 bin 文件夹中得到一个 HPCG-Benchmark 文件，这个文件详细记录了运行结果，运行的问题规模占用内存的量，以及各个主要的函数所占运行时间。</p>\n<p>Ns = 256 256 128<br>\nt = 1800</p>\n<p>Benchmark Time Summary::Total=1890.2<br>\nFinal Summary=<br>\nFinal Summary::HPCG result is VALID with a GFLOP/s rating of=8.03429<br>\nFinal Summary::HPCG 2.4 rating for historical reasons is=8.61255<br>\nFinal Summary::Reference version of ComputeDotProduct used=Performance results are most likely suboptimal<br>\nFinal Summary::Reference version of ComputeSPMV used=Performance results are most likely suboptimal<br>\nFinal Summary::Reference version of ComputeMG used=Performance results are most likely suboptimal<br>\nFinal Summary::Reference version of ComputeWAXPBY used=Performance results are most likely suboptimal<br>\nFinal Summary::Please upload results from the YAML file contents to=http://hpcg-benchmark.org</p>\n</li>\n</ol>\n<hr>\n<pre><code>Ns = 256 256 128\nt = 60\n\nBenchmark Time Summary::Total=144.725\nFinal Summary=\nFinal Summary::HPCG result is VALID with a GFLOP/s rating of=8.01359\nFinal Summary::HPCG 2.4 rating for historical reasons is=8.65271\nFinal Summary::Reference version of ComputeDotProduct used=Performance results are most likely suboptimal\nFinal Summary::Reference version of ComputeSPMV used=Performance results are most likely suboptimal\nFinal Summary::Reference version of ComputeMG used=Performance results are most likely suboptimal\nFinal Summary::Reference version of ComputeWAXPBY used=Performance results are most likely suboptimal\nFinal Summary::Results are valid but execution time (sec) is=144.725\nFinal Summary::Official results execution time (sec) must be at least=1800\n</code></pre>\n<h2 id=\"系统信息获取\"><a class=\"markdownIt-Anchor\" href=\"#系统信息获取\">#</a> 系统信息获取</h2>\n<h3 id=\"cpu\"><a class=\"markdownIt-Anchor\" href=\"#cpu\">#</a> CPU</h3>\n<ol>\n<li>逻辑 CPU 个数与 CPU 型号<br>\n <code>cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c</code> <br>\n32  Intel® Xeon® CPU E5-2620 v4 @ 2.10GHz<br>\n 网上查到 TDP 为 85W，睿频 3.0 GHz。</li>\n<li>物理 CPU 个数<br>\n <code>grep &quot;physical id&quot; /proc/cpuinfo|sort -u</code> <br>\nphysical id     : 0<br>\nphysical id     : 1</li>\n<li>每个物理 CPU 内核个数<br>\n <code>grep &quot;cpu cores&quot; /proc/cpuinfo|uniq</code> <br>\ncpu cores       : 8</li>\n<li>每个物理 CPU 上逻辑 CPU 个数<br>\n <code>grep &quot;siblings&quot; /proc/cpuinfo|uniq</code> <br>\nsiblings        : 16<br>\n 逻辑 CPU 个数是物理个数的两倍，说明开启了超线程。</li>\n<li>每个逻辑 CPU 对应的物理位置<br>\n <code>cat /proc/cpuinfo | grep -E &quot;physical id|processor&quot;</code></li>\n</ol>\n<h3 id=\"linux\"><a class=\"markdownIt-Anchor\" href=\"#linux\">#</a> Linux</h3>\n<ol>\n<li>\n<p>操作系统信息<br>\n <code>uname -a</code> <br>\nLinux amax 4.2.0-42-generic #49~14.04.1-Ubuntu SMP Wed Jun 29 20:22:11 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux</p>\n</li>\n<li>\n<p>操作系统发行版信息<br>\n <code>cat /etc/issue</code> <br>\nUbuntu 14.04.6 LTS</p>\n</li>\n<li>\n<p>内存<br>\n <code>cat /proc/meminfo</code> <br>\n 或<br>\n <code>free -h</code> <br>\n 集群共有 251.8G 内存，猜测是 64G×4。</p>\n</li>\n<li>\n<p>内存设备<br>\n <code>dmidecode |grep -A16 &quot;Memory Device$&quot;</code> <br>\n 或<br>\n <code>dmidecode -t memory</code> <br>\n 无权限……</p>\n</li>\n<li>\n<p>硬盘空间<br>\n <code>df -hl</code> <br>\nFilesystem      Size  Used Avail Use% Mounted on<br>\nudev            126G   12K  126G   1% /dev<br>\ntmpfs            26G  2.1M   26G   1% /run<br>\n/dev/sda6       188G   37G  142G  21% /<br>\nnone            4.0K     0  4.0K   0% /sys/fs/cgroup<br>\nnone            5.0M     0  5.0M   0% /run/lock<br>\nnone            126G  1.3M  126G   1% /run/shm<br>\nnone            100M  188K  100M   1% /run/user<br>\n/dev/sda1       453M   73M  353M  17% /boot<br>\n/dev/sda7       274G  258G  1.8G 100% /home<br>\n/dev/sdc1       1.8T  167G  1.6T  10% /data1<br>\n/dev/sdb1       1.8T   33G  1.7T   2% /data0</p>\n</li>\n<li>\n<p>硬盘设备<br>\n <code>fdisk -l</code> <br>\n 无信息？需要管理员？</p>\n</li>\n<li>\n<p>网卡信息<br>\n <code>dmesg | grep -i eth</code></p>\n</li>\n<li>\n<p>设备接口信息<br>\n <code>lspci</code> <br>\n <code>-v</code>     ：显示更多的 PCI 接口装置的详细信息<br>\n <code>-vv</code>     ：比 -v 还要更详细的信息<br>\n <code>-n</code>      ：直接观察 PCI 的 ID 而不是厂商名称<br>\n <code>-s 00:01.0</code>  ：查看地址 00:01.0 的信息</p>\n</li>\n<li>\n<p>查看节点 / 主机名称<br>\n <code>cat /etc/hosts</code> <br>\n127.0.0.1       localhost<br>\n127.0.1.1       amax</p>\n<pre><code> # The following lines are desirable for IPv6 capable hosts\n ::1     ip6-localhost ip6-loopback\n fe00::0 ip6-localnet\n ff00::0 ip6-mcastprefix\n ff02::1 ip6-allnodes\n ff02::2 ip6-allrouters\n</code></pre>\n</li>\n</ol>\n<p>经测试集群应该是在 amax 节点下布置了两块 Intel Xeon CPU，localhost 指向 amax。<br>\n即单节点双路 8 核？<br>\n@amax:~/HPL<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mi>p</mi><mi>i</mi><mi>r</mi><mi>u</mi><mi>n</mi><mo>−</mo><mi>n</mi><mi>p</mi><mn>16.</mn><mi mathvariant=\"normal\">/</mi><mi>c</mi><mi>p</mi><mi>i</mi><mi>P</mi><mi>r</mi><mi>o</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>s</mi><mn>5</mn><mi>o</mi><mi>f</mi><mn>16</mn><mi>i</mi><mi>s</mi><mi>o</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>a</mi><mi>x</mi><mi>P</mi><mi>r</mi><mi>o</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>s</mi><mn>7</mn><mi>o</mi><mi>f</mi><mn>16</mn><mi>i</mi><mi>s</mi><mi>o</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>a</mi><mi>x</mi><mi>P</mi><mi>r</mi><mi>o</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>s</mi><mn>8</mn><mi>o</mi><mi>f</mi><mn>16</mn><mi>i</mi><mi>s</mi><mi>o</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>a</mi><mi>x</mi><mi>P</mi><mi>r</mi><mi>o</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>s</mi><mn>9</mn><mi>o</mi><mi>f</mi><mn>16</mn><mi>i</mi><mi>s</mi><mi>o</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>a</mi><mi>x</mi><mi>P</mi><mi>r</mi><mi>o</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>s</mi><mn>10</mn><mi>o</mi><mi>f</mi><mn>16</mn><mi>i</mi><mi>s</mi><mi>o</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>a</mi><mi>x</mi><mi>P</mi><mi>r</mi><mi>o</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>s</mi><mn>12</mn><mi>o</mi><mi>f</mi><mn>16</mn><mi>i</mi><mi>s</mi><mi>o</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>a</mi><mi>x</mi><mi>P</mi><mi>r</mi><mi>o</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>s</mi><mn>14</mn><mi>o</mi><mi>f</mi><mn>16</mn><mi>i</mi><mi>s</mi><mi>o</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>a</mi><mi>x</mi><mi>P</mi><mi>r</mi><mi>o</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>s</mi><mn>0</mn><mi>o</mi><mi>f</mi><mn>16</mn><mi>i</mi><mi>s</mi><mi>o</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>a</mi><mi>x</mi><mi>P</mi><mi>r</mi><mi>o</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>s</mi><mn>1</mn><mi>o</mi><mi>f</mi><mn>16</mn><mi>i</mi><mi>s</mi><mi>o</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>a</mi><mi>x</mi><mi>P</mi><mi>r</mi><mi>o</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>s</mi><mn>2</mn><mi>o</mi><mi>f</mi><mn>16</mn><mi>i</mi><mi>s</mi><mi>o</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>a</mi><mi>x</mi><mi>P</mi><mi>r</mi><mi>o</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>s</mi><mn>3</mn><mi>o</mi><mi>f</mi><mn>16</mn><mi>i</mi><mi>s</mi><mi>o</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>a</mi><mi>x</mi><mi>P</mi><mi>r</mi><mi>o</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>s</mi><mn>4</mn><mi>o</mi><mi>f</mi><mn>16</mn><mi>i</mi><mi>s</mi><mi>o</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>a</mi><mi>x</mi><mi>P</mi><mi>r</mi><mi>o</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>s</mi><mn>11</mn><mi>o</mi><mi>f</mi><mn>16</mn><mi>i</mi><mi>s</mi><mi>o</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>a</mi><mi>x</mi><mi>P</mi><mi>r</mi><mi>o</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>s</mi><mn>13</mn><mi>o</mi><mi>f</mi><mn>16</mn><mi>i</mi><mi>s</mi><mi>o</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>a</mi><mi>x</mi><mi>P</mi><mi>r</mi><mi>o</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>s</mi><mn>15</mn><mi>o</mi><mi>f</mi><mn>16</mn><mi>i</mi><mi>s</mi><mi>o</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>a</mi><mi>x</mi><mi>P</mi><mi>r</mi><mi>o</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>s</mi><mn>6</mn><mi>o</mi><mi>f</mi><mn>16</mn><mi>i</mi><mi>s</mi><mi>o</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>a</mi><mi>x</mi><mi>p</mi><mi>i</mi><mi>i</mi><mi>s</mi><mi>a</mi><mi>p</mi><mi>p</mi><mi>r</mi><mi>o</mi><mi>x</mi><mi>i</mi><mi>m</mi><mi>a</mi><mi>t</mi><mi>e</mi><mi>l</mi><mi>y</mi><mn>3.1415926544231274</mn><mo separator=\"true\">,</mo><mi>E</mi><mi>r</mi><mi>r</mi><mi>o</mi><mi>r</mi><mi>i</mi><mi>s</mi><mn>0.0000000008333343</mn><mi>w</mi><mi>a</mi><mi>l</mi><mi>l</mi><mi>c</mi><mi>l</mi><mi>o</mi><mi>c</mi><mi>k</mi><mi>t</mi><mi>i</mi><mi>m</mi><mi>e</mi><mo>=</mo><mn>0.004565</mn><mi mathvariant=\"normal\">@</mi><mi>a</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo>:</mo><mtext> </mtext><mi mathvariant=\"normal\">/</mi><mi>H</mi><mi>P</mi><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">mpirun -np 16 ./cpi\n        Process 5 of 16 is on amax\n        Process 7 of 16 is on amax\n        Process 8 of 16 is on amax\n        Process 9 of 16 is on amax\n        Process 10 of 16 is on amax\n        Process 12 of 16 is on amax\n        Process 14 of 16 is on amax\n        Process 0 of 16 is on amax\n        Process 1 of 16 is on amax\n        Process 2 of 16 is on amax\n        Process 3 of 16 is on amax\n        Process 4 of 16 is on amax\n        Process 11 of 16 is on amax\n        Process 13 of 16 is on amax\n        Process 15 of 16 is on amax\n        Process 6 of 16 is on amax\n        pi is approximately 3.1415926544231274, Error is 0.0000000008333343\n        wall clock time = 0.004565\n        @amax:~/HPL</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">p</span><span class=\"mord\">1</span><span class=\"mord\">6</span><span class=\"mord\">.</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">5</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\">1</span><span class=\"mord\">6</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">7</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\">1</span><span class=\"mord\">6</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">8</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\">1</span><span class=\"mord\">6</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">9</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\">1</span><span class=\"mord\">6</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\">1</span><span class=\"mord\">6</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">1</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\">1</span><span class=\"mord\">6</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">1</span><span class=\"mord\">4</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\">1</span><span class=\"mord\">6</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">0</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\">1</span><span class=\"mord\">6</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">1</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\">1</span><span class=\"mord\">6</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\">1</span><span class=\"mord\">6</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">3</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\">1</span><span class=\"mord\">6</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">4</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\">1</span><span class=\"mord\">6</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\">1</span><span class=\"mord\">6</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">1</span><span class=\"mord\">3</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\">1</span><span class=\"mord\">6</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">1</span><span class=\"mord\">5</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\">1</span><span class=\"mord\">6</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">6</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\">1</span><span class=\"mord\">6</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">3</span><span class=\"mord\">.</span><span class=\"mord\">1</span><span class=\"mord\">4</span><span class=\"mord\">1</span><span class=\"mord\">5</span><span class=\"mord\">9</span><span class=\"mord\">2</span><span class=\"mord\">6</span><span class=\"mord\">5</span><span class=\"mord\">4</span><span class=\"mord\">4</span><span class=\"mord\">2</span><span class=\"mord\">3</span><span class=\"mord\">1</span><span class=\"mord\">2</span><span class=\"mord\">7</span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">8</span><span class=\"mord\">3</span><span class=\"mord\">3</span><span class=\"mord\">3</span><span class=\"mord\">3</span><span class=\"mord\">4</span><span class=\"mord\">3</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">e</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">4</span><span class=\"mord\">5</span><span class=\"mord\">6</span><span class=\"mord\">5</span><span class=\"mord\">@</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace nobreak\"> </span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\">L</span></span></span></span> mpirun -np 16 -nolocal ./cpi<br>\n--------------------------------------------------------------------------<br>\nAll nodes which are allocated for this job are already filled.<br>\n--------------------------------------------------------------------------</p>\n<ol start=\"8\">\n<li>\n<p>查看当前进程<br>\n <code>top</code> <br>\ntop - 15:32:47 up 148 days,  5:36,  6 users,  load average: 107.26, 100.88, 63.62<br>\nTasks: 933 total,  17 running, 916 sleeping,   0 stopped,   0 zombie<br>\n%Cpu(s): 81.9 us, 13.4 sy,  0.0 ni,  4.8 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st<br>\nKiB Mem:  26404217+total, 17041590+used, 93626272 free,  3731332 buffers<br>\nKiB Swap:  7999484 total,  1274312 used,  6725172 free. 88929968 cached Mem</p>\n<pre><code>   PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND                                               P\n  5173 riolu     20   0 5448340 2.788g   8492 R 429.5  1.1  24:00.06 xhpl                                                 30 1\n  5033 riolu     20   0 5450740 2.788g   8404 R 428.5  1.1  23:58.68 xhpl                                                 13 1\n</code></pre>\n</li>\n</ol>\n<p><code>1</code> ： 查看各逻辑 cpu 情况。<br>\n <code>F</code> - <code>方向键选择P=Last Used Cpu</code> - <code>空格</code> ：显示进程在哪个 CPU 上运行。<br>\n <code>q</code> ： 退出。<br>\n参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbWVuZ2NodW5jaGVuL3AvOTY2OTcwNC5odG1s\">Linux 查看 CPU 和内存使用情况</span></p>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/hpc1204/",
            "url": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/hpc1204/",
            "title": "高性能计算#02 HPL再次搭建",
            "date_published": "2020-12-04T10:57:06.000Z",
            "content_html": "<p>- Linpack 测试 OPENBLAS+OPENMPI+HPL -<span id=\"more\"></span></p>\n<h2 id=\"环境搭建\"><a class=\"markdownIt-Anchor\" href=\"#环境搭建\">#</a> 环境搭建</h2>\n<h3 id=\"安装openblas\"><a class=\"markdownIt-Anchor\" href=\"#安装openblas\">#</a> 安装 OpenBLAS</h3>\n<ol>\n<li>\n<p>官方下载<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3BlbmJsYXMubmV0Lw==\"> OpenBLAS-0.3.10.tar.gz</span></p>\n</li>\n<li>\n<p>解压后，在解压目录中执行 <code>make</code> ，<br>\nOpenBLAS build complete. (BLAS CBLAS LAPACK LAPACKE)</p>\n<pre><code>   OS               ... Linux\n   Architecture     ... x86_64\n   BINARY           ... 64bit\n   C compiler       ... GCC  (cmd &amp; version : cc (Ubuntu 4.8.4-2ubuntu1~14.04.4) 4.8.4)\n   Fortran compiler ... GFORTRAN  (cmd &amp; version : GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.4) 4.8.4)\n   Library Name     ... libopenblas_haswellp-r0.3.10.a (Multi-threading; Max num-threads is 32)\n\n To install the library, you can run &quot;make PREFIX=/path/to/your/installation install&quot;.\n</code></pre>\n</li>\n<li>\n<p>执行 <code>make PREFIX=/home/riolu/HPL/openblas install</code></p>\n</li>\n</ol>\n<h3 id=\"安装openmpi\"><a class=\"markdownIt-Anchor\" href=\"#安装openmpi\">#</a> 安装 openMPI</h3>\n<ol>\n<li>\n<p>官方下载<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3Blbi1tcGkub3JnL3NvZnR3YXJlL29tcGkvdjQuMC8=\"> openmpi-4.0.5.tar.gz</span></p>\n</li>\n<li>\n<p>解压后，在解压目录中执行 <code>./configure --prefix=/home/riolu/HPL/openmpi</code> <br>\nResource Managers<br>\n-----------------------<br>\nCray Alps: no<br>\nGrid Engine: no<br>\nLSF: no<br>\nMoab: no<br>\nSlurm: yes<br>\nssh/rsh: yes<br>\nTorque: no</p>\n<pre><code> OMPIO File Systems\n -----------------------\n Generic Unix FS: yes\n Lustre: no\n PVFS2/OrangeFS: no\n</code></pre>\n</li>\n<li>\n<p><code>make</code> ,  <code>make install</code></p>\n</li>\n<li>\n<p>修改 <code>~/.bashrc</code> ，在后面加上<br>\n export PATH=/home/riolu/HPL/openmpi/bin:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mi>A</mi><mi>T</mi><mi>H</mi><mi>e</mi><mi>x</mi><mi>p</mi><mi>o</mi><mi>r</mi><mi>t</mi><mi>I</mi><mi>N</mi><mi>C</mi><mi>L</mi><mi>U</mi><mi>D</mi><mi>E</mi><mo>=</mo><mi mathvariant=\"normal\">/</mi><mi>h</mi><mi>o</mi><mi>m</mi><mi>e</mi><mi mathvariant=\"normal\">/</mi><mi>r</mi><mi>i</mi><mi>o</mi><mi>l</mi><mi>u</mi><mi mathvariant=\"normal\">/</mi><mi>H</mi><mi>P</mi><mi>L</mi><mi mathvariant=\"normal\">/</mi><mi>o</mi><mi>p</mi><mi>e</mi><mi>n</mi><mi>m</mi><mi>p</mi><mi>i</mi><mi mathvariant=\"normal\">/</mi><mi>i</mi><mi>n</mi><mi>c</mi><mi>l</mi><mi>u</mi><mi>d</mi><mi>e</mi><mo>:</mo></mrow><annotation encoding=\"application/x-tex\">PATH\n     export INCLUDE=/home/riolu/HPL/openmpi/include:</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">/</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">e</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">u</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\">L</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">i</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span></span></span></span>INCLUDE<br>\nexport LD_LIBRARY_PATH=/home/riolu/HPL/openmpi/lib:$LD_LIBRARY_PATH<br>\n 保存后<br>\n source ~/.bashrc<br>\n（恶心的 libreOffice 保存会改编码，还是在 Windows 上改完传过去或者在 jupyter 上改，我 tm</p>\n</li>\n</ol>\n<h2 id=\"hpl安装与编译\"><a class=\"markdownIt-Anchor\" href=\"#hpl安装与编译\">#</a> HPL 安装与编译</h2>\n<ol>\n<li>\n<p>官方下载网站下载：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmV0bGliLm9yZy9iZW5jaG1hcmsvaHBs\">hpl.tar.gz</span></p>\n</li>\n<li>\n<p>进入安装文件夹下的 setup，在 setup 中中找到 <code>Make.Linux_PII_CBLAS</code> ，将其放置到上层目录并且命名为 <code>Make.Linux</code></p>\n</li>\n<li>\n<p>修改 <code>Make.Linux</code> <br>\nARCH         = Linux<br>\nTOPdir       = $(HOME)/HPL/hpl-2.3 /<em> 改为 hpl 解压后产生文件夹</em> /<br>\nMPdir        = <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>H</mi><mi>O</mi><mi>M</mi><mi>E</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mi>H</mi><mi>P</mi><mi>L</mi><mi mathvariant=\"normal\">/</mi><mi>o</mi><mi>p</mi><mi>e</mi><mi>n</mi><mi>m</mi><mi>p</mi><mi>i</mi><mi mathvariant=\"normal\">/</mi><mo>∗</mo><mtext>改为</mtext><mi>m</mi><mi>p</mi><mi>i</mi><mi>c</mi><mi>h</mi><mtext>安装文件夹</mtext><mo>∗</mo><mi mathvariant=\"normal\">/</mi><mi>M</mi><mi>P</mi><mi>i</mi><mi>n</mi><mi>c</mi><mo>=</mo><mo>−</mo><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">(HOME)/HPL/openmpi /*改为mpich安装文件夹*/\n     MPinc        = -I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mclose\">)</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\">L</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">i</span><span class=\"mord\">/</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord cjk_fallback\">改</span><span class=\"mord cjk_fallback\">为</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">h</span><span class=\"mord cjk_fallback\">安</span><span class=\"mord cjk_fallback\">装</span><span class=\"mord cjk_fallback\">文</span><span class=\"mord cjk_fallback\">件</span><span class=\"mord cjk_fallback\">夹</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span>(MPdir)/include<br>\nMPlib        = -L$(MPdir)/lib<br>\nLAdir        = <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>H</mi><mi>O</mi><mi>M</mi><mi>E</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mi>H</mi><mi>P</mi><mi>L</mi><mi mathvariant=\"normal\">/</mi><mi>o</mi><mi>p</mi><mi>e</mi><mi>n</mi><mi>b</mi><mi>l</mi><mi>a</mi><mi>s</mi><mi>L</mi><mi>A</mi><mi>i</mi><mi>n</mi><mi>c</mi><mo>=</mo><mo>−</mo><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">(HOME)/HPL/openblas\n     LAinc        = -I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mclose\">)</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\">L</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span>(LAdir)/include<br>\nLAlib        = $(LAdir)/lib/libopenblas_haswellp-r0.3.10.a<br>\nHPL_OPTS     = -DHPL_CALL_CBLAS<br>\nCC           = $(MPdir)/bin/mpicc<br>\nCCFLAGS      = $(HPL_DEFS) -fomit-frame-pointer -fopenmp -O3 -funroll-loops<br>\nLINKER       = $(MPdir)/bin/mpif77<br>\nLINKFLAGS = $(CCFLAGS)<br>\n 执行<br>\n make arch=Linux</p>\n</li>\n<li>\n<p>此时查看安装文件夹下 bin，会看到有 <code>Linux</code>  文件夹，里面有 <code>HPL.dat</code> ， <code>xhpl</code> ，安装完成。</p>\n</li>\n<li>\n<p>执行 <code>mpirun -np 4 ./xhpl</code> ，得到正确结果！</p>\n</li>\n</ol>\n<p>（OHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH</p>\n<h2 id=\"测试优化\"><a class=\"markdownIt-Anchor\" href=\"#测试优化\">#</a> 测试优化</h2>\n<ol>\n<li>查看内存：<br>\n$ free -h<br>\ntotal       used       free     shared    buffers     cached<br>\nMem:          251G       138G       113G        14M       4.9G       104G<br>\n-/+ buffers/cache:        29G       222G<br>\nSwap:         7.6G       1.2G       6.4G</li>\n</ol>\n<p>使用 50G，1 个节点，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo>=</mo><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mn>50</mn><mo stretchy=\"false\">)</mo><mo>∗</mo><mn>10000</mn><mo>=</mo><mo>&gt;</mo><mn>70000</mn></mrow><annotation encoding=\"application/x-tex\">N=sqrt(50)*10000=&gt;70000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord\">5</span><span class=\"mord\">0</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">7</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>，最大<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo>=</mo><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mn>120</mn><mo stretchy=\"false\">)</mo><mo>∗</mo><mn>10000</mn><mo>=</mo><mo>&gt;</mo><mn>110000</mn></mrow><annotation encoding=\"application/x-tex\">N=sqrt(120)*10000=&gt;110000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mord\">2</span><span class=\"mord\">0</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span></p>\n<ol start=\"2\">\n<li>\n<p>测试运行：<br>\n~/HPL/hpl-2.3/bin/Linux$ mpirun -np 8 ./xhpl<br>\n================================================================================<br>\nHPLinpack 2.3  –  High-Performance Linpack benchmark  –   December 2, 2018<br>\nWritten by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK<br>\nModified by Piotr Luszczek, Innovative Computing Laboratory, UTK<br>\nModified by Julien Langou, University of Colorado Denver<br>\n================================================================================</p>\n<pre><code>An explanation of the input/output parameters follows:\nT/V    : Wall time / encoded variant.\nN      : The order of the coefficient matrix A.\nNB     : The partitioning blocking factor.\nP      : The number of process rows.\nQ      : The number of process columns.\nTime   : Time in seconds to solve the linear system.\nGflops : Rate of execution for solving the linear system.\n\nThe following parameter values will be used:\n\nN      :   70000\nNB     :     256      192\nPMAP   : Row-major process mapping\nP      :       2\nQ      :       4\nPFACT  :    Left\nNBMIN  :       2\nNDIV   :       2\nRFACT  :    Left\nBCAST  :   1ring\nDEPTH  :       0\nSWAP   : Mix (threshold = 64)\nL1     : transposed form\nU      : transposed form\nEQUIL  : yes\nALIGN  : 8 double precision words\n\n--------------------------------------------------------------------------------\n\n+ The matrix A is randomly generated for each test.\n+ The following scaled residual check will be computed:\n      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )\n+ The relative machine precision (eps) is taken to be               1.110223e-16\n+ Computational tests pass if scaled residuals are less than                16.0\n\n================================================================================\nT/V                N    NB     P     Q               Time                 Gflops\n--------------------------------------------------------------------------------\nWR00L2L2       70000   256     2     4             894.95             2.5551e+02\nHPL_pdgesv() start time Fri Dec  4 22:56:34 2020\n\nHPL_pdgesv() end time   Fri Dec  4 23:11:29 2020\n\n--------------------------------------------------------------------------------\n||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   1.51800829e-03 ...... PASSED\n================================================================================\nT/V                N    NB     P     Q               Time                 Gflops\n--------------------------------------------------------------------------------\nWR00L2L2       70000   192     2     4             927.80             2.4647e+02\nHPL_pdgesv() start time Fri Dec  4 23:12:17 2020\n\nHPL_pdgesv() end time   Fri Dec  4 23:27:45 2020\n\n--------------------------------------------------------------------------------\n||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   1.48198443e-03 ...... PASSED\n================================================================================\n\nFinished      2 tests with the following results:\n              2 tests completed and passed residual checks,\n              0 tests completed and failed residual checks,\n              0 tests skipped because of illegal input values.\n--------------------------------------------------------------------------------\n\nEnd of Tests.\n================================================================================\n</code></pre>\n</li>\n<li>\n<p>结果整合：</p>\n<pre><code> ================================================================================\n T/V                N    NB     P     Q               Time                 Gflops\n --------------------------------------------------------------------------------\n WR00L2L2       70000   192     2     4             927.80             2.4647e+02\n WR00L2L2       70000   256     2     4             910.19             2.5124e+02\n WR00L2L2       70000   256     2     4             894.95             2.5551e+02\n WR00L2L2       70000   256     2     4             902.53             2.5337e+02\n WR00L2L2       70000   336     2     4             877.33             2.6065e+02\n WR00L2L2       70000   336     2     4             894.92             2.5553e+02\n WR00L2L2       70000   384     2     4             862.82             2.6503e+02\n ================================================================================\n</code></pre>\n</li>\n</ol>\n<p>看起来选 <code>NB=384</code>  比较好呢，实测浮点峰值为 265.03Gflops＝2.6503 千亿次 / 秒。</p>\n<h2 id=\"绑定进程\"><a class=\"markdownIt-Anchor\" href=\"#绑定进程\">#</a> 绑定进程</h2>\n<p><code>~/HPL/openmpi/bin/mpirun -np 16 --bind-to core --map-by core --report-bindings ./xhpl</code></p>\n<pre><code> mpirun -np 16 --bind-to core --map-by core --report-bindings ./xhpl\n[amax:18074] MCW rank 0 bound to socket 0[core 0[hwt 0-1]]: [BB/../../../../../../..][../../../../../../../..]\n[amax:18074] MCW rank 1 bound to socket 0[core 1[hwt 0-1]]: [../BB/../../../../../..][../../../../../../../..]\n[amax:18074] MCW rank 2 bound to socket 0[core 2[hwt 0-1]]: [../../BB/../../../../..][../../../../../../../..]\n[amax:18074] MCW rank 3 bound to socket 0[core 3[hwt 0-1]]: [../../../BB/../../../..][../../../../../../../..]\n[amax:18074] MCW rank 4 bound to socket 0[core 4[hwt 0-1]]: [../../../../BB/../../..][../../../../../../../..]\n[amax:18074] MCW rank 5 bound to socket 0[core 5[hwt 0-1]]: [../../../../../BB/../..][../../../../../../../..]\n[amax:18074] MCW rank 6 bound to socket 0[core 6[hwt 0-1]]: [../../../../../../BB/..][../../../../../../../..]\n[amax:18074] MCW rank 7 bound to socket 0[core 7[hwt 0-1]]: [../../../../../../../BB][../../../../../../../..]\n[amax:18074] MCW rank 8 bound to socket 1[core 8[hwt 0-1]]: [../../../../../../../..][BB/../../../../../../..]\n[amax:18074] MCW rank 9 bound to socket 1[core 9[hwt 0-1]]: [../../../../../../../..][../BB/../../../../../..]\n[amax:18074] MCW rank 10 bound to socket 1[core 10[hwt 0-1]]: [../../../../../../../..][../../BB/../../../../..]\n[amax:18074] MCW rank 11 bound to socket 1[core 11[hwt 0-1]]: [../../../../../../../..][../../../BB/../../../..]\n[amax:18074] MCW rank 12 bound to socket 1[core 12[hwt 0-1]]: [../../../../../../../..][../../../../BB/../../..]\n[amax:18074] MCW rank 13 bound to socket 1[core 13[hwt 0-1]]: [../../../../../../../..][../../../../../BB/../..]\n[amax:18074] MCW rank 14 bound to socket 1[core 14[hwt 0-1]]: [../../../../../../../..][../../../../../../BB/..]\n[amax:18074] MCW rank 15 bound to socket 1[core 15[hwt 0-1]]: [../../../../../../../..][../../../../../../../BB]\n</code></pre>\n<hr>\n<p><em>修改日期：2020 年 12 月 6 日</em></p>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/hpc1202/",
            "url": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/hpc1202/",
            "title": "高性能计算#01 HPL搭建",
            "date_published": "2020-12-02T08:50:40.000Z",
            "content_html": "<p>- Linpack 测试 GOTOBLAS+MPICH+HPL -<span id=\"more\"></span></p>\n<h2 id=\"环境搭建\"><a class=\"markdownIt-Anchor\" href=\"#环境搭建\">#</a> 环境搭建</h2>\n<h3 id=\"安装goto库\"><a class=\"markdownIt-Anchor\" href=\"#安装goto库\">#</a> 安装 GOTO 库</h3>\n<ol>\n<li>官方下载网站下载：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGFjYy51dGV4YXMuZWR1L3Jlc2VhcmNoLWRldmVsb3BtZW50L3RhY2Mtc29mdHdhcmUvZ290b2JsYXMy\">GotoBLAS2-1.13.tar.gz</span></li>\n<li>在 Linux 中解压，执行 <code>make CC=gcc BINARY=64 TARGET=NEHALEM</code>  失败</li>\n</ol>\n<pre><code>../libgoto2_nehalem-r1.13.a(ssymv_U.o): error adding symbols: 错误的值\ncollect2: error: ld returned 1 exit status\n</code></pre>\n<p>继续执行</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gedit  f_check</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 298 行改为如下：</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># print MAKEFILE \"FEXTRALIB=$linker_L -lgfortran -lm -lquadmath -lm $linker_a\\n\";</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">make</span> clean</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">make</span> <span class=\"token assign-left variable\">CC</span><span class=\"token operator\">=</span>gcc <span class=\"token assign-left variable\">BINARY</span><span class=\"token operator\">=</span><span class=\"token number\">64</span> <span class=\"token assign-left variable\">TARGET</span><span class=\"token operator\">=</span>NEHALEM <span class=\"token assign-left variable\">USE_OPENMP</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token assign-left variable\">INTERFACE64</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr></table></figure><p>成功！</p>\n<pre><code>  GotoBLAS build complete.\n\n    OS               ... Linux             \n    Architecture     ... x86_64               \n    BINARY           ... 64bit                 \n    C compiler       ... GCC  (command line : gcc)\n    Fortran compiler ... G77  (command line : g77)\n    Library Name     ... libgoto2_nehalem-r1.13.a (Single threaded)  \n</code></pre>\n<h3 id=\"安装mpich\"><a class=\"markdownIt-Anchor\" href=\"#安装mpich\">#</a> 安装 MPICH</h3>\n<ol>\n<li>官方下载网站下载：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubXBpY2gub3JnL2Rvd25sb2Fkcy8=\">mpich-3.3.2.tar.gz</span></li>\n<li>解压，新建文件夹 <code>mpich</code>  作为安装文件夹</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> mpich-3.3.2/</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>./configure --prefix<span class=\"token operator\">=</span>/home/riolu/HPL/mpich</pre></td></tr></table></figure><p>提示无 Fortran 77 compiler，切换至管理员安装</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> gfortran</pre></td></tr></table></figure><p>提示无 C++ compiler，再切换至管理员安装……</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> g++</pre></td></tr></table></figure><ol start=\"3\">\n<li>好了，接下来</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">make</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">make</span> <span class=\"token function\">install</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>gedit ~/.bashrc</pre></td></tr></table></figure><p>在后面加上</p>\n<pre><code>export PATH=/home/riolu/HPL/mpich/bin:$PATH\nexport MANPATH=/home/riolu/HPL/mpich/man:$MANPATH\nexport LD_LIBRARY_PATH=/home/riolu/HPL/mpich/lib:$LD_LIBRARY_PATH //不知要不要\n</code></pre>\n<p>保存后</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">source</span> ~/.bashrc</pre></td></tr></table></figure><p>看下 $PATH</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token builtin class-name\">echo</span> <span class=\"token environment constant\">$PATH</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>/home/riolu/HPL/mpich/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games</pre></td></tr></table></figure><ol start=\"4\">\n<li>测试</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>riolu@sinki-virtual-machine:~/HPL/mpich-3.3.2$ mpirun -np <span class=\"token number\">10</span> ./examples/cpi</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Process <span class=\"token number\">4</span> of <span class=\"token number\">10</span> is on sinki-virtual-machine</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Process <span class=\"token number\">1</span> of <span class=\"token number\">10</span> is on sinki-virtual-machine</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Process <span class=\"token number\">8</span> of <span class=\"token number\">10</span> is on sinki-virtual-machine</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Process <span class=\"token number\">2</span> of <span class=\"token number\">10</span> is on sinki-virtual-machine</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Process <span class=\"token number\">3</span> of <span class=\"token number\">10</span> is on sinki-virtual-machine</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Process <span class=\"token number\">0</span> of <span class=\"token number\">10</span> is on sinki-virtual-machine</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Process <span class=\"token number\">5</span> of <span class=\"token number\">10</span> is on sinki-virtual-machine</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Process <span class=\"token number\">7</span> of <span class=\"token number\">10</span> is on sinki-virtual-machine</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Process <span class=\"token number\">6</span> of <span class=\"token number\">10</span> is on sinki-virtual-machine</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Process <span class=\"token number\">9</span> of <span class=\"token number\">10</span> is on sinki-virtual-machine</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>pi is approximately <span class=\"token number\">3.1415926544231256</span>, Error is <span class=\"token number\">0.0000000008333325</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>wall clock <span class=\"token function\">time</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.134519</span></pre></td></tr></table></figure><p>成功！</p>\n<h2 id=\"hpl安装与编译\"><a class=\"markdownIt-Anchor\" href=\"#hpl安装与编译\">#</a> HPL 安装与编译</h2>\n<ol>\n<li>官方下载网站下载：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmV0bGliLm9yZy9iZW5jaG1hcmsvaHBs\">hpl.tar.gz</span></li>\n<li>进入安装文件夹下的 setup，在 setup 中中找到 <code>Make.Linux_PII_FBLAS</code> ，<span class=\"exturl\" data-url=\"aHR0cDovL3huLS1NYWtlLXo5NGY1YjJvbjB2M3ZibXlpZzlhaXo3Y253YWozdnRvZHQ1N2FveDJlODc1YS5teQ==\">将其放置到上层目录并且命名为 Make.my</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3huLS1NYWtlLTQ4NmZ4MTRpLm15\">修改 Make.my</span></li>\n</ol>\n<pre><code>        ARCH         = my\n        TOPdir       = $(HOME)/HPL/hpl-2.3 /*改为hpl解压后产生文件夹*/\n        MPdir        = $(HOME)/HPL/mpich /*改为mpich安装文件夹*/\n        MPlib        = $(MPdir)/lib\n        LAdir        = $(HOME)/HPL/GotoBLAS2 /*GotoBLAS2解压文件夹*/\n        LAinc        =\n        LAlib        = $(LAdir)/libgoto2_nehalemp-r1.13.a\n        HPL_OPTS     = -DHPL_CALL_CBLAS\n        CC           = $(HOME)/HPL/mpich/bin/mpicc\n        CCFLAGS      = $(HPL_DEFS) -fomit-frame-pointer -fopenmp -O3 -funroll-loops\n        LINKER       = $(HOME)/HPL/mpich/bin/mpif77\n        LINKFLAGS = $(CCFLAGS)\n</code></pre>\n<p>执行</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">make</span> <span class=\"token assign-left variable\">arch</span><span class=\"token operator\">=</span>my</pre></td></tr></table></figure><ol start=\"4\">\n<li>此时查看安装文件夹下 bin，会看到有 my 文件夹，里面有 <code>HPL.dat</code> ， <code>xhpl</code> ，安装完成。</li>\n</ol>\n<p>结果运行 <code>mpirun -np 2  ./xhpl</code>  得到报错信息？？</p>\n<pre><code>    ** On entry to DTRSM  parameter number  9 had an illegal value\n</code></pre>\n<p>死了。失败，重新编译前加入 <code>make arch=my clean_arch_all</code></p>\n<h2 id=\"集群同步设置\"><a class=\"markdownIt-Anchor\" href=\"#集群同步设置\">#</a> 集群同步设置</h2>\n<h3 id=\"psftp传文件\"><a class=\"markdownIt-Anchor\" href=\"#psftp传文件\">#</a> psftp 传文件</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>psftp<span class=\"token operator\">></span> <span class=\"token function\">open</span> sinki@10.201.0.6</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Using username <span class=\"token string\">\"sinki\"</span><span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>sinki@10.201.0.6's password:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Remote working directory is /home/sinki</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>psftp<span class=\"token operator\">></span>put F:<span class=\"token punctuation\">\\</span>Share<span class=\"token punctuation\">\\</span>GotoBLAS2-1.13.tar.gz</pre></td></tr></table></figure><p>其他用法参考:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ranNvbG8ud29yZHByZXNzLmNvbS8yMDEwLzAzLzA4L3BzZnRwJUU3JTk0JUE4JUU2JUIzJTk1Lw==\">PSFTP 用法</span></p>\n<h3 id=\"xming图形界面和jupyter挂起\"><a class=\"markdownIt-Anchor\" href=\"#xming图形界面和jupyter挂起\">#</a> Xming 图形界面和 jupyter 挂起</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nautilus</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">nohup</span> jupyter notebook --allow-root <span class=\"token operator\">></span> jupyter.log <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token file-descriptor important\">&amp;1</span> <span class=\"token operator\">&amp;</span></pre></td></tr></table></figure><hr>\n<p><em>修改日期：2020 年 12 月 4 日</em></p>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linux1112/",
            "url": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linux1112/",
            "title": "Linux学习 笔记#02",
            "date_published": "2020-11-12T12:31:58.000Z",
            "content_html": "<p>- 登入系统 - <span id=\"more\"></span></p>\n<p>接下来就用 Ubuntu14 进行实验啦，先设置一下桌面配置，建个普通用户，密码 wodemima！</p>\n<p>关闭桌面动画：</p>\n<pre><code>$ gsettings set org.gnome.desktop.interface enable-animations false\n</code></pre>\n<img style=\"display: inline-block; width: 70%; max-width: 70%; height: auto;\" data-src=\"1.png\" />\n<p>用普通用户可以防止手残（ctrl+alt+prScrn 截图保存到主机桌面</p>\n<h2 id=\"ch4-登入与帮助\"><a class=\"markdownIt-Anchor\" href=\"#ch4-登入与帮助\">#</a> Ch4 登入与帮助</h2>\n<p>ctrl+alt+F1~6 切换终端， ctrl+alt+F7 图形界面。终端界面登入后是这样：</p>\n<img style=\"display: inline-block; width: 70%; max-width: 70%; height: auto;\" data-src=\"2.png\" />\n<p>注销指令： <code>exit</code></p>\n<p>更改为英文语系：</p>\n<pre><code>$ LANG=en_US.utf8           //输出讯息改为英文\n$ LANGUAGE=en_US.utf8\n$ export LC_ALL=en_US.utf8  //其他信息\n</code></pre>\n<p>注意 <code>LANG=en_US.utf8</code>  是连续输入的，等号两边并没有空格符喔！ 这样一来，就能够在『这次的登入』察看英文讯息啰！如果注销 Linux 后，刚刚下达的指令就没有用啦！可以用 <code>locale</code>  查看。<br>\n所以要怎样才能永久生效呢？</p>\n<p>如果想要让系统默认的语系变成英文的话，那么可以修改系统配置文件 <code>/etc/locale.conf</code> ，使 LANG 这个变量成为上述的内容即可。</p>\n<h3 id=\"命令输入\"><a class=\"markdownIt-Anchor\" href=\"#命令输入\">#</a> 命令输入：</h3>\n<p>一般格式为 command [-options] parameter1 parameter1 …<br>\n\\ 后敲回车表示换行接着输入命令<br>\n选项设定（如帮助） -h 缩写， --help 完整名称。<br>\n某些情况选项也用 + 引导。</p>\n<p>举例：</p>\n<pre><code>$ date +%Y/%m/%d        //查看日期\n$ cal [month] [year]    //查看日历\n$ bc                    //计算器 scale=num设置小数点位数，quit退出\n</code></pre>\n<p>快捷键：</p>\n<ul>\n<li>Tab 键： 输入部分命令连按两次 Tab，可以文件补齐或命令补全或参数 / 选项补齐。</li>\n<li>ctrl+c： 终止正在运行的程序</li>\n<li>ctrl+d： 键盘输入结束（End Of File, EOF 或 End Of Input），可以取代 <code>exit</code> 。</li>\n<li>shift+Page UP/Page Down： 翻页</li>\n</ul>\n<h3 id=\"manual\"><a class=\"markdownIt-Anchor\" href=\"#manual\">#</a> manual</h3>\n<p>使用命令 <code>man xxx</code>  可以查看 <code>xxx</code>  的用户手册，查看更详细的说明。<br>\n第一行命令右面的数字代号代表含义，比较重要的是</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">代号</th>\n<th style=\"text-align:left\">代表内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:left\">用户在 shell 环境中可以操作的指令或可执行文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:left\">配置文件或者是某些文件的格式</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:left\">系统管理员可用的管理指令</td>\n</tr>\n</tbody>\n</table>\n<p>另外可以套娃使用命令 <code>man man</code>  查看更多……</p>\n<p>man page 常用的按键</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">按键</th>\n<th style=\"text-align:left\">进行工作</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">空格键</td>\n<td style=\"text-align:left\">向下翻一页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[Page Down]</td>\n<td style=\"text-align:left\">向下翻一页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[Page Up]</td>\n<td style=\"text-align:left\">向上翻一页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[Home]</td>\n<td style=\"text-align:left\">去到第一页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[End]</td>\n<td style=\"text-align:left\">去到最后一页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">/string</td>\n<td style=\"text-align:left\">向下搜寻 string 这个字符串，如果要搜寻 vbird 的话，就输入 /vbird</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">?string</td>\n<td style=\"text-align:left\">向上搜寻 string 这个字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">n, N</td>\n<td style=\"text-align:left\">利用 / 或？来搜寻字符串时，可以用 n 来继续下一个搜寻 (不论是 / 或？) ，可以利用 N 来进行『反向』搜寻。<br>举例来说，我以 /vbird 搜寻 vbird 字符串， 那么可以 n 继续往下查询，用 N 往上查询。若以？vbird 向上查询 vbird 字符串， 那我可以用 n 继续『向上』查询，用 N 反向查询。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">q</td>\n<td style=\"text-align:left\">结束这次的 man page</td>\n</tr>\n</tbody>\n</table>\n<p>man page 的数据放在 <code>/usr/share/man</code>  这个目录里头，修改 <code>/etc/manpath.conf</code>  可以改变搜寻路径。</p>\n<p><code>man -f xxx</code>  查找指令 (或文件) 的简易说明，括号里的是代号。<br>\n <code>man 代号 xxx</code>  显示对应代号指令 (或文件) 的手册，没有代号时显示查找到的第一个。<br>\n <code>man -k xx</code>  查找信息中含有 <code>xx</code>  的所有指令说明。</p>\n<p>另外，root 模式下执行 <code>mandb</code>  可以建立 whatis 数据库，这样就能用<br>\n <code>whatis xxx</code>  替代 <code>man -f xxx</code> ，<br>\n <code>apropos xxx</code>  替代 <code>man -k xxx</code> 。</p>\n<h3 id=\"info\"><a class=\"markdownIt-Anchor\" href=\"#info\">#</a> info</h3>\n<p>info 与 man 的用途差不多，但是 info page 将文件数据拆成一个一个的段落，每个段落用自己的页面来撰写，并且在各个页面中还有类似网页的 “超链接” 来跳到各不同的页面中。支持 info 指令的文件默认是放置在 <code>/usr/share/info/</code>  这个目录当中的。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">按键</th>\n<th style=\"text-align:left\">进行工作</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">空格键</td>\n<td style=\"text-align:left\">向下翻一页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[Page Down]</td>\n<td style=\"text-align:left\">向下翻一页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[Page Up]</td>\n<td style=\"text-align:left\">向上翻一页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[tab]</td>\n<td style=\"text-align:left\">在 node 之间移动，有 node 的地方，通常会以 * 显示。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[Enter]</td>\n<td style=\"text-align:left\">当光标在 node 上面时，按下 Enter 可以进入该 node 。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">n</td>\n<td style=\"text-align:left\">前往下一个 node 处</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">p</td>\n<td style=\"text-align:left\">前往上一个 node 处</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">u</td>\n<td style=\"text-align:left\">向上移动一层</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">s(/)</td>\n<td style=\"text-align:left\">在 info page 当中进行搜寻</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">h, ?</td>\n<td style=\"text-align:left\">显示求助选单</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">q</td>\n<td style=\"text-align:left\">结束这次的 info page</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"doc\"><a class=\"markdownIt-Anchor\" href=\"#doc\">#</a> doc</h3>\n<p>有相当多的说明需要额外的文件（How-To）在 <code>/usr/share/doc</code>  这个目录里。</p>\n<h3 id=\"nano\"><a class=\"markdownIt-Anchor\" href=\"#nano\">#</a> nano</h3>\n<p>启用： <code>nano filename</code> <br>\n 下面两行为帮助。 <code>^</code>  代表 <code>Ctrl</code>  组合键， <code>M</code>  代表 <code>Alt</code>  组合键。回车键确认。</p>\n<h3 id=\"关机相关\"><a class=\"markdownIt-Anchor\" href=\"#关机相关\">#</a> 关机相关</h3>\n<p><code>who</code> ：查看当前在线用户。<br>\n <code>sync</code> ：将数据同步写入硬盘。在关机指令前手动下达可以加层保障。<br>\n <code>su -</code> ：转为 root。不过我失败了。</p>\n<p><code>shutdown</code> ：关机。用法： <code>sudo shutdown \\[-krhc\\] \\[时间\\] \\[警告讯息\\]</code> <br>\n 选项与参数：</p>\n<ul>\n<li><code>-k</code>      ： 不要真的关机，只是发送警告讯息出去吓唬人。</li>\n<li><code>-r </code>     ： 在将系统的服务停掉之后就重新启动 (常用)</li>\n<li><code>-h </code>     ： 将系统的服务停掉后，立即关机。 (常用)</li>\n<li><code>-c</code>      ： 取消已经在进行的 shutdown 指令内容。</li>\n<li>时间   ： 指定系统关机的时间，无参数则默认 1 分钟后自动进行。可以为 <code>now</code> （立即关机，相当于 0）， <code>HH:MM</code> （当天时间，若已过去则为隔天）， <code>+整数X</code> （X 分钟后关机）。</li>\n</ul>\n<img style=\"display: inline-block; width: 70%; max-width: 70%; height: auto;\" data-src=\"4.png\" />\n<img style=\"display: inline-block; width: 70%; max-width: 70%; height: auto;\" data-src=\"3.png\" />\n<p><code>reboot</code> ：重启。<br>\n <code>poweroff</code> ：关机，切断电源。<br>\n <code>halt</code> ：系统停止，屏幕可能会保留停止信息。<br>\n <code>systemctl suspend</code> ：休眠模式。</p>\n<hr>\n<p>下一篇：<a href=\"/2020/12/24/linux1224/\">文件权限与目录配置</a><br>\n上一篇：<a href=\"/2020/11/11/linux1111/\">反复入门 Linux</a></p>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linux1111/",
            "url": "https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linux1111/",
            "title": "Linux学习 笔记#01",
            "date_published": "2020-11-11T03:17:58.000Z",
            "content_html": "<p>- 反复入门 Linux- <span id=\"more\"></span></p>\n<p>高中打比赛时简单用过 Ubuntu 系统，到现在都忘得一干二净，于是再次入门一遍。首先当然是要安装 Linux Ubuntu。</p>\n<h2 id=\"安装\"><a class=\"markdownIt-Anchor\" href=\"#安装\">#</a> 安装</h2>\n<p>为了方便就不装双系统了，准备用虚拟机。然而也没少花时间折腾这玩意……</p>\n<h3 id=\"配置\"><a class=\"markdownIt-Anchor\" href=\"#配置\">#</a> 配置</h3>\n<p>实验室的机子是 Win10 系统，8G 内存，Core i5-6500 CPU @3.20GHz。于是给虚拟机分了 2G 内存，40G 硬盘。这里用的是典型安装，直接安装程序光盘映像文件。<br>\n生成虚拟机时需要用户名和密码，咱随便设一个 1234。输完这个其他全部自动默认安装了。<br>\n由于本机没有 CD 驱动，设置里取消连接 CD。<br>\n装上 VM Tools，然后参考 - 自动调整大小 - 自动适应客户机，这样分辨率就能自动调整了。<br>\n首选项启用虚拟打印机以连接打印机。<br>\n系统只有英文，在设置里把中文装一下。先在语言支持里安装，然后在输入法里添加拼音。</p>\n<h3 id=\"坑一\"><a class=\"markdownIt-Anchor\" href=\"#坑一\">#</a> 坑一</h3>\n<p>用 VMware 15 连鼠标都不显示，装 Ubuntu20 和 14 都是这样，而且稍微设置一下马上无响应，无法结束进程只能重启电脑，网上也没有解决办法，一气之下卸了装 VMware 12，这下可以正常安装 Ubuntu20，但 14 卡了很久在 Copying files 上，想选挂起结束，好嘛，又无响应 + 结束不了进程只能重启。至于网上说进不去虚拟机就取消设置里显示器的 3D 加速图形勾选，不知有没有用。</p>\n<p>—— 使用 VM12。</p>\n<h3 id=\"坑二\"><a class=\"markdownIt-Anchor\" href=\"#坑二\">#</a> 坑二</h3>\n<p>在虚拟机运行的时候调整虚拟机设置必卡死无响应，调任务管理器强制结束后不能再开虚拟机，因为 VMware 的进程还在后台跑着而且 Access DENIED。 搜解决方法无果，只能重启电脑。好嘛我光重启电脑都几十回了，烦。用 VM 的修复功能不但不能结束进程还得重启电脑，还不如不用。</p>\n<p>—— 在虚拟机运行时不更改任何 VM 设置。</p>\n<h3 id=\"坑三\"><a class=\"markdownIt-Anchor\" href=\"#坑三\">#</a> 坑三</h3>\n<p>声卡报错。 <code>A device ID has been used that is out of range for your system. 声音将中断。</code></p>\n<p>—— 解决办法是声音设置 - 声音控制面板 - 录制 - 启用 Stereo Mix。然后回到 VM 连接声音即可！</p>\n<h3 id=\"坑四\"><a class=\"markdownIt-Anchor\" href=\"#坑四\">#</a> 坑四</h3>\n<p>VM12 在 WIN10 上的复制文件功能可能会崩溃，小文件还行十几兆的就直接卡死。还是设置一下共享文件夹比较稳妥，目录在  <code>/mnt/hgfs/</code> 。 另外还要运行一句话挂载文件夹</p>\n<pre><code>$ sudo vmhgfs-fuse .host:/ /mnt/hgfs -o subtype=vmhgfs-fuse,allow_other\n</code></pre>\n<p>—— 不要使用复制粘贴 / 拖拽功能，使用文件共享。</p>\n<h3 id=\"警一\"><a class=\"markdownIt-Anchor\" href=\"#警一\">#</a> 警一</h3>\n<p>虚拟机开机提示</p>\n<pre><code>Failed to initialize policy for cpu: 0\n</code></pre>\n<p>不知道咋回事，目前没影响。</p>\n<h3 id=\"最终\"><a class=\"markdownIt-Anchor\" href=\"#最终\">#</a> 最终</h3>\n<p>大功告成！先玩一把麻将连连看。</p>\n<img style=\"display: inline-block; width: 70%; max-width: 70%; height: auto;\" data-src=\"linux.jpg\" />\n<h2 id=\"ch3-手动安装\"><a class=\"markdownIt-Anchor\" href=\"#ch3-手动安装\">#</a> Ch3 手动安装</h2>\n<p>Ubuntu20 自动分配的磁盘，这次手动分配一下。还记得之前没装上的 Ubuntu14，正好拿来练手。<br>\nVM 创建空磁盘，挂载 CD 为 Ubuntu14 镜像，进入到系统安装界面。直接选择安装。<br>\n<img style=\"display: inline-block; width: 70%; max-width: 70%; height: auto;\" data-src=\"1.png\" /></p>\n<p>然后选择自己调整分区。<br>\n<img style=\"display: inline-block; width: 70%; max-width: 70%; height: auto;\" data-src=\"2.png\" /></p>\n<p>我倒是没在 Ubuntu 上看到哪里能选 LVM 和 GPT 咋设置的，鸟哥上剩余 9G 也不知道是咋回事。<br>\n<img style=\"display: inline-block; width: 70%; max-width: 70%; height: auto;\" data-src=\"3.png\" /></p>\n<p>总之是装完了，这次没有卡在 Copying files 上但下载语言包依旧很慢。所以不用 VM 的自动安装会好一些咯？这里居然不用再设置共享文件夹直接就能看到了。</p>\n<img style=\"display: inline-block; width: 70%; max-width: 70%; height: auto;\" data-src=\"4.png\" />\n<p>啊，梦回高二。当时还分不清 Linux 和 Ubuntu 有啥区别，只能开着网易云听歌打代码呐……</p>\n<h2 id=\"今日趣事\"><a class=\"markdownIt-Anchor\" href=\"#今日趣事\">#</a> 今日趣事</h2>\n<ol>\n<li>11.11 单身节，恰好咱的 ptt 维持在 11.11——<br>\n<img style=\"display: inline-block; width: 70%; max-width: 70%; height: auto;\" data-src=\"ptt.jpg\" /></li>\n<li>耳机线断了之后修了半天只把左耳机线连上了 —— 单边耳机。</li>\n<li>折磨我很久的保暖衣上的刺（头发渣）终于找到并拔掉啦！</li>\n</ol>\n<hr>\n<p>下一篇：<a href=\"/2020/11/12/linux1112/\">登入系统</a></p>\n",
            "tags": [
                "Linux"
            ]
        }
    ]
}