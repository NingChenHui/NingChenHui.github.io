<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://ningchenhui.github.io</id>
    <title>一切都会好起来的哟 • Posts by &#34;linux&#34; tag</title>
    <link href="https://ningchenhui.github.io" />
    <updated>2021-07-13T07:20:36.000Z</updated>
    <category term="模式" />
    <category term="课程资料" />
    <category term="Linux" />
    <category term="地球科学" />
    <entry>
        <id>https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linuxA0713/</id>
        <title>Linux学习 笔记#10 Shell Scripts</title>
        <link rel="alternate" href="https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linuxA0713/"/>
        <content type="html">&lt;p&gt;使用脚本！ &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;ch12-学习-shell-scripts&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ch12-学习-shell-scripts&#34;&gt;#&lt;/a&gt; Ch12 学习 Shell Scripts&lt;/h2&gt;
&lt;p&gt;tips:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;指令、选项与参数间的多个空白都会被忽略掉；&lt;/li&gt;
&lt;li&gt;可以使用『 \[Enter] 』来延伸至下一行；&lt;/li&gt;
&lt;li&gt;『 # 』可做为批注！&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;脚本样例&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#脚本样例&#34;&gt;#&lt;/a&gt; 脚本样例&lt;/h3&gt;
&lt;h4 id=&#34;hello-world&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hello-world&#34;&gt;#&lt;/a&gt; Hello World！&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash
# Program:
#       This program shows &amp;quot;Hello World!&amp;quot; in your screen.
# History:
# 2021/07/13 Sinki First release
echo &amp;quot;Hello World! \a \n&amp;quot;
exit 0
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;show-name&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#show-name&#34;&gt;#&lt;/a&gt; Show name&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash
# Program:
# User inputs his first name and last name.  Program shows his full name.
# History:
# 2021/07/13 Sinki First release

read -p &amp;quot;Please input your first name: &amp;quot; firstname      # 提示使用者输入

read -p &amp;quot;Please input your last name:  &amp;quot; lastname       # 提示使用者输入
echo &amp;quot;\nYour full name is: $&amp;#123;firstname&amp;#125; $&amp;#123;lastname&amp;#125;&amp;quot; # 结果由屏幕输出
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;create-files&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#create-files&#34;&gt;#&lt;/a&gt; Create files&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash
# Program:
# Program creates three files, which named by user&#39;s input and date command.
# History:
# 2021/07/13 Sinki First release

# 1. 让使用者输入文件名，并取得 fileuser 这个变量；
echo &amp;quot;I will use &#39;touch&#39; command to create 3 files.&amp;quot; # 纯粹显示信息
read -p &amp;quot;Please input your filename: &amp;quot; fileuser         # 提示使用者输入

# 2. 为了避免使用者随意按 Enter ，利用变量功能分析档名是否有设定？
filename=$&amp;#123;fileuser:-&amp;quot;filename&amp;quot;&amp;#125;           # 开始判断有否配置文件名

# 3. 开始利用 date 指令来取得所需要的档名了；
date1=$(date --date=&#39;2 days ago&#39; +%Y%m%d)  # 前两天的日期
date2=$(date --date=&#39;1 days ago&#39; +%Y%m%d)  # 前一天的日期
date3=$(date +%Y%m%d)                      # 今天的日期
file1=$&amp;#123;filename&amp;#125;$&amp;#123;date1&amp;#125;                  # 底下三行在配置文件名
file2=$&amp;#123;filename&amp;#125;$&amp;#123;date2&amp;#125;
file3=$&amp;#123;filename&amp;#125;$&amp;#123;date3&amp;#125;

# 4. 将档名建立吧！
touch &amp;quot;$&amp;#123;file1&amp;#125;&amp;quot;                           # 底下三行在建立文件
touch &amp;quot;$&amp;#123;file2&amp;#125;&amp;quot;
touch &amp;quot;$&amp;#123;file3&amp;#125;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;整数运算-计算式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#整数运算-计算式&#34;&gt;#&lt;/a&gt; 整数运算 $((计算式))&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;total=$(($&amp;#123;firstnu&amp;#125;*$&amp;#123;secnu&amp;#125;))
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;浮点运算-bc&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#浮点运算-bc&#34;&gt;#&lt;/a&gt; 浮点运算 bc&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;time echo &amp;quot;scale=$&amp;#123;num&amp;#125;; 4*a(1)&amp;quot; | bc -lq
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;指令执行&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#指令执行&#34;&gt;#&lt;/a&gt; 指令执行&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;直接指令下达： &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3NoZWxsLnNo&#34;&gt;shell.sh&lt;/span&gt; 文件必须要具备 (rx) 权限，使用绝对路径，相对路径或在 PATH 中.&lt;/li&gt;
&lt;li&gt;以 bash 程序来执行：透过『 bash &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3NoZWxsLnNo&#34;&gt;shell.sh&lt;/span&gt; 』或『 sh &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3NoZWxsLnNo&#34;&gt;shell.sh&lt;/span&gt; 』来执行&lt;/li&gt;
&lt;li&gt;source &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3NoZWxsLnNo&#34;&gt;shell.sh&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;前两种是子 shell, 变量不保留。而 source 是在当前的环境中执行.&lt;/p&gt;
&lt;h3 id=&#34;判断式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#判断式&#34;&gt;#&lt;/a&gt; 判断式&lt;/h3&gt;
&lt;h4 id=&#34;test&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#test&#34;&gt;#&lt;/a&gt; test&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;关于某个档名的『文件类型』判断，如  &lt;code&gt;test -e filename&lt;/code&gt;  表示存在否&lt;br&gt;
 - e 该『档名』是否存在？(常用)&lt;br&gt;
-f 该『档名』是否存在且为文件 (file)？(常用)&lt;br&gt;
-d 该『文件名』是否存在且为目录 (directory)？(常用)&lt;/li&gt;
&lt;li&gt;关于文件的权限侦测，如  &lt;code&gt;test -r filename&lt;/code&gt;  表示可读否 (但 root 权限常有例外)&lt;br&gt;
-r 侦测该档名是否存在且具有『可读』的权限？&lt;br&gt;
-w 侦测该档名是否存在且具有『可写』的权限？&lt;br&gt;
-x 侦测该档名是否存在且具有『可执行』的权限？&lt;/li&gt;
&lt;li&gt;两个文件之间的比较，如：  &lt;code&gt;test file1 -nt file2 &lt;/code&gt; &lt;br&gt;
-nt (newer than) 判断 file1 是否比 file2 新&lt;br&gt;
 - ot (older than) 判断 file1 是否比 file2 旧&lt;br&gt;
 - ef 判断 file1 与 file2 是否为同一文件，可用在判断 hard link 的判定上。 主要意义在判定，两个文件是否均指向同一个 inode 哩！&lt;/li&gt;
&lt;li&gt;关于两个整数之间的判定，例如  &lt;code&gt;test n1 -eq n2 &lt;/code&gt; &lt;br&gt;
-eq 两数值相等 (equal)&lt;br&gt;
-ne 两数值不等 (not equal)&lt;br&gt;
-gt n1 大于 n2 (greater than)&lt;br&gt;
-lt n1 小于 n2 (less than)&lt;br&gt;
-ge n1 大于等于 n2 (greater than or equal)&lt;br&gt;
-le n1 小于等于 n2 (less than or equal)&lt;/li&gt;
&lt;li&gt;判定字符串的数据&lt;br&gt;
 &lt;code&gt;test -z string&lt;/code&gt;  判定字符串是否为 0 ？若 string 为空字符串，则为 true&lt;br&gt;
 &lt;code&gt;test -n string&lt;/code&gt;  判定字符串是否非为 0 ？若 string 为空字符串，则为 false。 注： -n 亦可省略&lt;br&gt;
 &lt;code&gt;test str1 == str2&lt;/code&gt;  判定 str1 是否等于 str2 ，若相等，则回传 true&lt;br&gt;
 &lt;code&gt;test str1 != str2&lt;/code&gt;  判定 str1 是否不等于 str2 ，若相等，则回传 false&lt;/li&gt;
&lt;li&gt;多重条件判定，例如：  &lt;code&gt;test -r filename -a -x filename &lt;/code&gt; &lt;br&gt;
-a (and) 两状况同时成立！例如 test -r file -a -x file，则 file 同时具有 r 与 x 权限时，才回传 true。&lt;br&gt;
-o (or) 两状况任何一个成立！例如 test -r file -o -x file，则 file 具有 r 或 x 权限时，就可回传 true。&lt;br&gt;
! 反相状态，如  &lt;code&gt;test ! -x file&lt;/code&gt;  ，当 file 不具有 x 时，回传 true&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#&#34;&gt;#&lt;/a&gt; [ ]&lt;/h4&gt;
&lt;p&gt;tips:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在中括号 [] 内的每个组件都需要有空格键来分隔；&lt;/li&gt;
&lt;li&gt;在中括号内的变数，最好都以双引号括号起来；&lt;/li&gt;
&lt;li&gt;在中括号内的常数，最好都以单或双引号括号起来。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;参数与 test 一致。例如 &lt;code&gt;[ $&amp;#123;name&amp;#125; == &amp;quot;Sinki&amp;quot; ]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;这就是为啥 sh 脚本判断句里奇怪字母的原因吗，为啥不用大于小于号啊喂. ncl 里也是这种反人类语法啊&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;参数-num&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#参数-num&#34;&gt;#&lt;/a&gt; 参数 $num&lt;/h3&gt;
&lt;p&gt;script 针对参数已经有设定好一些变量名称了！&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/path/to/scriptname  opt1  opt2  opt3  opt4  
      $0             $1    $2    $3    $4
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;$#&lt;/code&gt;  ：代表后接的参数『个数』，以上表为例这里显示为『 4 』；&lt;br&gt;
 &lt;code&gt;$@&lt;/code&gt;  ：代表  &lt;code&gt;&amp;quot;$1&amp;quot; &amp;quot;$2&amp;quot; &amp;quot;$3&amp;quot; &amp;quot;$4&amp;quot;&lt;/code&gt; ，每个变量是独立的 (用双引号括起来)；&lt;br&gt;
 &lt;code&gt;$*&lt;/code&gt;  ：代表  &lt;code&gt;&amp;quot;$1c$2c$3c$4&amp;quot;&lt;/code&gt;  ，其中 c 为分隔字符，默认为空格键， 所以本例中代表  &lt;code&gt;&amp;quot;$1 $2 $3 $4&amp;quot;&lt;/code&gt; 。一般用 &lt;code&gt;$@&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;shift：造成参数变量号码偏移&lt;br&gt;
对于 &lt;code&gt;sh shift_paras.sh one two three four five six&lt;/code&gt; &lt;br&gt;
 执行 &lt;code&gt;shift&lt;/code&gt;  后 &lt;code&gt;$@&lt;/code&gt; 变成 &lt;sub&gt;one&lt;/sub&gt; two three four five six, 再执行 &lt;code&gt;shift 3&lt;/code&gt;  后就是～one two three four~ five six&lt;/p&gt;
&lt;h3 id=&#34;语句&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#语句&#34;&gt;#&lt;/a&gt; 语句&lt;/h3&gt;
&lt;h4 id=&#34;if-then&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#if-then&#34;&gt;#&lt;/a&gt; if then&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;单层、简单条件判断式&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if [ 条件判断式 ]; then
  当条件判断式成立时，可以进行的指令工作内容；
fi
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;条件判断式中的 -a 和 -o 可以拆了，比如把&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[ &amp;quot;$&amp;#123;yn&amp;#125;&amp;quot; == &amp;quot;Y&amp;quot; -o &amp;quot;$&amp;#123;yn&amp;#125;&amp;quot; == &amp;quot;y&amp;quot; ]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;改成&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[ &amp;quot;$&amp;#123;yn&amp;#125;&amp;quot; == &amp;quot;Y&amp;quot; ] || [ &amp;quot;$&amp;#123;yn&amp;#125;&amp;quot; == &amp;quot;y&amp;quot; ]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;另外 &amp;amp;&amp;amp; 是且。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;多重、复杂条件判断式&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if [ 条件判断式 ]; then
  当条件判断式成立时，可以进行的指令工作内容；
else
  当条件判断式不成立时，可以进行的指令工作内容；
fi

if [ 条件判断式一 ]; then
  当条件判断式一成立时，可以进行的指令工作内容；
elif [ 条件判断式二 ]; then
  当条件判断式二成立时，可以进行的指令工作内容；
else
  当条件判断式一与二均不成立时，可以进行的指令工作内容；
fi
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;case-esac&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#case-esac&#34;&gt;#&lt;/a&gt; case esac&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;case  $变量名称 in   &amp;lt;==关键词为 case ，还有变数前有钱字号
  &amp;quot;第一个变量内容&amp;quot;)   &amp;lt;==每个变量内容建议用双引号括起来，关键词则为小括号 )
    程序段
    ;;           &amp;lt;==每个类别结尾使用两个连续的分号来处理！
  &amp;quot;第二个变量内容&amp;quot;)
    程序段
    ;;
  *)                  &amp;lt;==最后一个变量内容都会用 * 来代表所有其他值
    不包含第一个变量内容与第二个变量内容的其他程序执行段
    exit 1
    ;;
esac
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;function&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#function&#34;&gt;#&lt;/a&gt; function&lt;/h4&gt;
&lt;p&gt;在 shell script 当中的 function 的设定一定要在程序的最前面，这样才能够在执行时被找到可用的程序段&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function printit()&amp;#123;
  echo -n &amp;quot;Your choice is &amp;quot;     # 加上 -n 可以不断行继续在同一行显示
&amp;#125;
printit; echo $&amp;#123;1&amp;#125; | tr &#39;a-z&#39; &#39;A-Z&#39;  # 将参数做大小写转换！
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;function 也是拥有内建变量的～他的内建变量与 shell script 很类似， 函数名称代表示 $0 ，而后续接的变量也是以 $1, $2… 来取代的～&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function printit()&amp;#123;
  echo &amp;quot;Your choice is $&amp;#123;1&amp;#125;&amp;quot;   # 这个 $1 必须要参考底下指令的下达
&amp;#125;
printit 1  # 请注意， printit 指令后面还有接参数！
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;while-do-done-until-do-done-不定循环&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#while-do-done-until-do-done-不定循环&#34;&gt;#&lt;/a&gt; while do done, until do done (不定循环)&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;while [ condition ]    &amp;lt;==中括号内的状态就是判断式
do            &amp;lt;==do 是循环的开始！
  程序段落
done          &amp;lt;==done 是循环的结束
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;另一种&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;until [ condition ]    &amp;lt;==中括号内的状态就是判断式
do            &amp;lt;==do 是循环的开始！
  程序段落
done          &amp;lt;==done 是循环的结束
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;与 while 相反，真的好懂.&lt;/p&gt;
&lt;h4 id=&#34;fordodone-固定循环&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#fordodone-固定循环&#34;&gt;#&lt;/a&gt; for…do…done (固定循环)&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;for var in con1 con2 con3 ...
do
  程序段
done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个 $var 的变量内容在循环工作时：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第一次循环时， $var 的内容为 con1 ；&lt;/li&gt;
&lt;li&gt;第二次循环时， $var 的内容为 con2 ；&lt;/li&gt;
&lt;li&gt;第三次循环时， $var 的内容为 con3 ；&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;for 后面还可以跟这些:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;users=$(cut -d &#39;:&#39; -f1 /etc/passwd)    # 撷取账号名称
for username in $&amp;#123;users&amp;#125;
...
for sitenu in $(seq 1 100)       # seq 为 sequence(连续) 的缩写之意
...
for sitenu in &amp;#123;1..100&amp;#125;
...
for a in &amp;#123;a..z&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;fordodone-的数值处理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#fordodone-的数值处理&#34;&gt;#&lt;/a&gt; for…do…done 的数值处理&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;for (( 初始值; 限制值; 执行步阶 ))
do
  程序段
done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如  &lt;code&gt;for (( i=1; i&amp;lt;=$&amp;#123;nu&amp;#125;; i=i+1 ))&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;shell-script-的追踪与-debug&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#shell-script-的追踪与-debug&#34;&gt;#&lt;/a&gt; shell script 的追踪与 debug&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sh [-nvx] scripts.sh &lt;/code&gt; &lt;br&gt;
-n  ：不要执行 script，仅查询语法的问题；&lt;br&gt;
-v  ：再执行 sccript 前，先将 scripts 的内容输出到屏幕上；&lt;br&gt;
-x  ：将使用到的 script 内容显示到屏幕上，这是很有用的参数！&lt;/p&gt;
&lt;p&gt;在输出的讯息中，在加号后面的数据其实都是指令串，由于 sh -x 的方式来将指令执行过程也显示出来， 如此用户可以判断程序代码执行到哪一段时会出现相关的信息！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;下一篇：&lt;a href=&#34;/2021/07/14/linuxA0714/&#34;&gt;-&lt;/a&gt;&lt;br&gt;
 上一篇：&lt;a href=&#34;/2021/07/08/linuxA0708/&#34;&gt;正规表示法与文件格式化处理&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="Linux" />
        <updated>2021-07-13T07:20:36.000Z</updated>
    </entry>
    <entry>
        <id>https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linuxA0708/</id>
        <title>Linux学习 笔记#09 正规表示法与文件格式化处理</title>
        <link rel="alternate" href="https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linuxA0708/"/>
        <content type="html">&lt;p&gt;像乱码一样的正则表达式！ &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;ch11-正规表示法与文件格式化处理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ch11-正规表示法与文件格式化处理&#34;&gt;#&lt;/a&gt; Ch11 正规表示法与文件格式化处理&lt;/h2&gt;
&lt;h3 id=&#34;基础正规表示法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#基础正规表示法&#34;&gt;#&lt;/a&gt; 基础正规表示法&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;使用正规表示法时，需要特别留意当时环境的语系，练习使用 LANG=C&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;为了避免编码所造成的英文与数字的撷取问题，有些特殊的符号得要了解一下，粗体比较重要:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;特殊字段&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;意义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;[:alnum:]&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;代表英文大小写字符及数字，亦即 0-9, A-Z, a-z&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;[:alpha:]&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;代表任何英文大小写字符，亦即 A-Z, a-z&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;[:blank:]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;代表空格键与 [Tab] 按键两者&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;[:cntrl:]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;代表键盘上面的控制按键，亦即包括 CR, LF, Tab, Del… 等等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;[:digit:]&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;代表数字而已，亦即 0-9&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;[:graph:]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;除了空格符 (空格键与 [Tab] 按键) 外的其他所有按键&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;[:lower:]&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;代表小写字符，亦即 a-z&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;[:print:]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;代表任何可以被打印出来的字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;[:punct:]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;代表标点符号 (punctuation symbol)，亦即：&amp;quot; ’ ? ! ; : # $…&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;[:upper:]&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;代表大写字符，亦即 A-Z&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;[:space:]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;任何会产生空白的字符，包括空格键，[Tab], CR 等等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;[:xdigit:]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;代表 16 进位的数字类型，因此包括： 0-9, A-F, a-f 的数字与字符&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;grep [-vin] [-A] [-B] [--color=auto] &#39;搜寻字符串&#39; filename &lt;/code&gt; &lt;br&gt;
选项与参数：&lt;br&gt;
-A ：后面可加数字，为 after 的意思，除了列出该行外，后续的 n 行也列出来；&lt;br&gt;
-B ：后面可加数字，为 befer 的意思，除了列出该行外，前面的 n 行也列出来；&lt;br&gt;
-n : 加行号&lt;br&gt;
 - v : 反向选择&lt;br&gt;
 - i : 忽略大小写&lt;br&gt;
–color=auto 可将正确的那个撷取数据列出颜色&lt;/p&gt;
&lt;p&gt;grep 在数据中查寻一个字符串时，是以 “整行” 为单位来进行数据的撷取的.&lt;/p&gt;
&lt;h4 id=&#34;利用中括号-来搜寻集合字符&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#利用中括号-来搜寻集合字符&#34;&gt;#&lt;/a&gt; 利用中括号 [] 来搜寻集合字符&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;[] 里面不论有几个字符，他都仅代表某『一个』字符，如 ‘t [ae] st’ 可以匹配到 tast 和 test&lt;/li&gt;
&lt;li&gt;集合字符里的 ^ 表示反向选择，如 ‘[^g] oo’ 就排除了 goo&lt;/li&gt;
&lt;li&gt;对于连续字符，如 [a-z] [A-Z] [0-9] 分别代表小写字母，大写字母，数字。同样 [^a-z] 表示排除小写字母&lt;/li&gt;
&lt;li&gt;~&lt;em&gt;A to Z！A to Z！天下を，A to Z！A to Z！取ります！&lt;/em&gt;~&lt;/li&gt;
&lt;li&gt;[&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn1&#34; id=&#34;fnref1&#34;&gt;[1]&lt;/a&gt;&lt;/sup&gt;] 等价于 [^a-z]&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;行首与行尾字符&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#行首与行尾字符&#34;&gt;#&lt;/a&gt; 行首与行尾字符 ^ $&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;‘^the’ 表示只匹配行首为 the 的行. ‘&lt;sup&gt;[&lt;/sup&gt;a-zA-Z]’ 则表示只匹配行首不是字母的行.&lt;/li&gt;
&lt;li&gt;行尾的话就可以 ‘\.$’.&lt;/li&gt;
&lt;li&gt;但要注意 win 下会有断行符 ^M$&lt;/li&gt;
&lt;li&gt;空行的话就是 ‘^$’&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;任意一个字符-与重复字符&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#任意一个字符-与重复字符&#34;&gt;#&lt;/a&gt; 任意一个字符。与重复字符 *&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;. 代表『一定有一个任意字符』&lt;/li&gt;
&lt;li&gt;* 代表『重复前一个字符， 0 到无穷多次』的意思，为组合形态&lt;br&gt;
因此 『o*』代表的是：『拥有空字符或一个 o 以上的字符』, ‘o*’ 就是有没有字符都可以的意思&lt;br&gt;
‘goo*g’ 就是 gog, goog, gooog… 等等&lt;/li&gt;
&lt;li&gt;.* 就代表零个或多个任意字符&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;限定连续-re-字符范围&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#限定连续-re-字符范围&#34;&gt;#&lt;/a&gt; 限定连续 RE 字符范围 {}&lt;/h4&gt;
&lt;p&gt;因为 {与} 的符号在 shell 是有特殊意义的，因此， 我们必须要使用跳脱字符 \ 来让他失去特殊意义才行&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;‘o {2,}’ 代表 2 个及以上 o&lt;/li&gt;
&lt;li&gt;‘o {2,5}’ 代表 2 到 5 个 o&lt;/li&gt;
&lt;li&gt;‘o {2}’ 代表 2 个 o&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;sed-工具&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sed-工具&#34;&gt;#&lt;/a&gt; sed 工具&lt;/h3&gt;
&lt;p&gt;sed 本身也是一个管线命令，可以分析 standard input 的啦！ 而且 sed 还可以将数据进行取代、删除、新增、撷取特定行等等的功能呢！&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sed [-nefr] [动作] &lt;/code&gt; &lt;br&gt;
-n  ：使用安静 (silent) 模式。在一般 sed 的用法中，所有来自 STDIN 的数据一般都会被列出到屏幕上。 但如果加上 -n 参数后，则只有经过 sed 特殊处理的那一行 (或者动作) 才会被列出来。&lt;br&gt;
-e  ：直接在指令行模式上进行 sed 的动作编辑；&lt;br&gt;
-f  ：直接将 sed 的动作写在一个文件内， -f filename 则可以执行 filename 内的 sed 动作；&lt;br&gt;
-r  ：sed 的动作支持的是延伸型正规表示法的语法。(预设是基础正规表示法语法)&lt;br&gt;
-i  ：直接修改读取的文件内容，而不是由屏幕输出。&lt;/p&gt;
&lt;p&gt;动作说明：  [n1 [,n2]] function&lt;br&gt;
n1, n2 ：不见得会存在，一般代表『选择进行动作的行数』，举例来说，如果我的动作是需要在 10 到 20 行之间进行的，则『 10,20 [动作行为] 』&lt;/p&gt;
&lt;p&gt;function 有底下这些咚咚：&lt;br&gt;
a   ：新增， a 的后面可以接字符串，而这些字符串会在新的一行出现 (目前的下一行)～&lt;br&gt;
c   ：取代， c 的后面可以接字符串，这些字符串可以取代 n1,n2 之间的行！&lt;br&gt;
d   ：删除，因为是删除啊，所以 d 后面通常不接任何咚咚；&lt;br&gt;
i   ：插入， i 的后面可以接字符串，而这些字符串会在新的一行出现 (目前的上一行)；&lt;br&gt;
p   ：打印，亦即将某个选择的数据印出。通常 p 会与参数 sed -n 一起运作～&lt;br&gt;
s   ：取代，可以直接进行取代的工作！通常这个 s 的动作可以搭配正规表示法！ 例如 1,20s/old/new/g 就是啦！&lt;/p&gt;
&lt;p&gt;举例:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;nl /etc/passwd | sed &#39;2,5d&#39; &lt;/code&gt;  删除 2 到 5 行。动作要用单引号括住&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nl /etc/passwd | sed &#39;2,$d&#39; &lt;/code&gt;  删除 2 到最后一行.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nl /etc/passwd | sed &#39;2a drink tea&#39;&lt;/code&gt;  在第二行后面加一行 drink tea. 两行以上的话要用 \&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nl /etc/passwd | sed -n &#39;5,7p&#39;&lt;/code&gt;  取出 5 到 7 行.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/sbin/ifconfig eth0 | grep &#39;inet &#39; | sed &#39;s/^.*inet //g&#39; | sed &#39;s/ *netmask.*$//g&#39;&lt;/code&gt;  删除 ip 的首尾&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cat /etc/man_db.conf | grep &#39;MAN&#39;| sed &#39;s/#.*$//g&#39; | sed &#39;/^$/d&#39;&lt;/code&gt;  删除含有注释的和空白行&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;sed 后面如果要接超过两个以上的动作时，每个动作前面得加 -e 才行&lt;/p&gt;
&lt;h3 id=&#34;延伸正规表示法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#延伸正规表示法&#34;&gt;#&lt;/a&gt; 延伸正规表示法&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;grep -E&lt;/code&gt;  或  &lt;code&gt;egrep&lt;/code&gt;  来支持延伸正规表示法！&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;RE 字符&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;意义与范例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;+&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;意义：重复『一个或一个以上』的前一个 RE 字符 &lt;br&gt;范例：搜寻 (god) (good) (goood)… 等等的字符串。  &lt;br&gt; &lt;code&gt;egrep -n &#39;go+d&#39; regular_express.txt &lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;?&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;意义：『零个或一个』的前一个 RE 字符 &lt;br&gt;范例：搜寻 (gd) (god) 这两个字符串。 &lt;br&gt; &lt;code&gt;egrep -n &#39;go?d&#39; regular_express.txt &lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;丨&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;意义：用或 (or) 的方式找出数个字符串 &lt;br&gt;范例：搜寻 gd 或 good 这两个字符串&lt;br&gt; &lt;code&gt;egrep -n &#39;gd丨good&#39; regular_express.txt&lt;/code&gt;  &lt;br&gt;那如果还想要找出 dog 呢？ &lt;br&gt; &lt;code&gt;egrep -n &#39;gd丨good丨dog&#39; regular_express.txt&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;()&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;意义：找出『群组』字符串 &lt;br&gt;范例：搜寻 (glad) 或 (good) 这两个字符串&lt;br&gt; &lt;code&gt;egrep -n &#39;g(la丨oo)d&#39; regular_express.txt&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;()+&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;br&gt;意义：多个重复群组的判别 &lt;br&gt;范例：将『AxyzxyzxyzxyzC』用 echo 叫出，然后再使用如下的方法搜寻一下！ &lt;br&gt; &lt;code&gt;echo &#39;AxyzxyzxyzxyzC&#39; 丨 egrep &#39;A(xyz)+C&#39; &lt;/code&gt; &lt;br&gt;上面的例子意思是说，我要找开头是 A 结尾是 C ，中间有一个以上的 “xyz” 字符串～&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;文件的格式化与相关处理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件的格式化与相关处理&#34;&gt;#&lt;/a&gt; 文件的格式化与相关处理&lt;/h3&gt;
&lt;h4 id=&#34;格式化打印-printf&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#格式化打印-printf&#34;&gt;#&lt;/a&gt; 格式化打印： printf&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;printf &#39;打印格式&#39; &#39; 实际内容&lt;/code&gt; &lt;br&gt;
关于格式方面的几个特殊样式：&lt;br&gt;
\a    警告声音输出&lt;br&gt;
 \b    退格键 (backspace)&lt;br&gt;
\f    清除屏幕 (form feed)&lt;br&gt;
\n    输出新的一行&lt;br&gt;
 \r    亦即 Enter 按键&lt;br&gt;
 \t    水平的 [tab] 按键&lt;br&gt;
 \v    垂直的 [tab] 按键&lt;br&gt;
 \xNN  NN 为两位数的数字，可以转换数字成为字符。&lt;br&gt;
关于 C 程序语言内，常见的变数格式&lt;br&gt;
 % ns   那个 n 是数字， s 代表 string ，亦即多少个字符；&lt;br&gt;
% ni   那个 n 是数字， i 代表 integer ，亦即多少整数字数；&lt;br&gt;
%&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL04ubmY=&#34;&gt;N.nf&lt;/span&gt; 那个 n 与 N 都是数字， f 代表 floating (浮点)，如果有小数字数，&lt;br&gt;
假设我共要十个位数，但小数点有两位，即为 %10.2f 啰！&lt;/p&gt;
&lt;p&gt;用例:&lt;br&gt;
 &lt;code&gt;printf &#39;%s\t %s\t %s\t %st %s\t %st %s\t t \n&#39; $(cat printf.txt)&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Name     Chinese         English         Math    Average
DmTsai   80      60      92      77.33
VBird    75      55      80      70.00
Ken      60      90      70      73.33
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;printf &#39;%10s %5i %5i %5i %8.2f \n&#39; $(cat printf.txt | grep -v Name) &lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;DmTsai    80    60    92    77.33
 VBird    75    55    80    70.00
   Ken    60    90    70    73.33
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;printf &#39;\x45\n&#39;&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;E
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;awk好用的数据处理工具&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#awk好用的数据处理工具&#34;&gt;#&lt;/a&gt; awk：好用的数据处理工具&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;awk &#39;条件类型1&amp;#123;动作1&amp;#125; 条件类型2&amp;#123;动作2&amp;#125; ...&#39; filename&lt;/code&gt; &lt;br&gt;
awk 主要是处理『每一行的字段内的数据』，而默认的『字段的分隔符为 “空格键” 或 “[tab] 键” 』&lt;/p&gt;
&lt;p&gt;例: &lt;code&gt;last -n 5 | awk &#39;&amp;#123;print $1 &amp;quot;\t&amp;quot; $3&amp;#125;&#39;&lt;/code&gt;  调出第一列和第三列&lt;br&gt;
 awk 后续的所有动作是以单引号『 ’ 』括住的，非变量的文字部分，包含上一小节 printf 提到的格式中，都需要使用双引号来定义出来喔！&lt;/p&gt;
&lt;p&gt;awk 的内建变量:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;变量名称&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;代表意义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;NF&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;每一行 ($0) 拥有的字段总数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;NR&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;目前 awk 所处理的是『第几行』数据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;FS&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;目前的分隔字符，默认是空格键&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;例: &lt;code&gt;last -n 5| awk &#39;&amp;#123;print $1 &amp;quot;\t lines: &amp;quot; NR &amp;quot;\t columns: &amp;quot; NF&amp;#125;&#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;awk 的条件支持 C 式的逻辑运算&lt;/p&gt;
&lt;p&gt;例: &lt;code&gt;cat /etc/passwd | awk &#39;&amp;#123;FS=&amp;quot;:&amp;quot;&amp;#125; $3 &amp;lt; 10 &amp;#123;print $1 &amp;quot;\t &amp;quot; $3&amp;#125;&#39;&lt;/code&gt;  以：为分隔符，输出第三栏小于 10 的&lt;/p&gt;
&lt;p&gt;这个定义 FS 在第二行才生效，因此要用 BEGIN&lt;br&gt;
 &lt;code&gt;cat /etc/passwd | awk &#39;BEGIN &amp;#123;FS=&amp;quot;:&amp;quot;&amp;#125; $3 &amp;lt; 10 &amp;#123;print $1 &amp;quot;\t &amp;quot; $3&amp;#125;&#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;计算功能:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat pay.txt | \
awk &#39;NR==1&amp;#123;printf &amp;quot;%10s %10s %10s %10s %10s\n&amp;quot;,$1,$2,$3,$4,&amp;quot;Total&amp;quot; &amp;#125;
NR&amp;gt;=2&amp;#123;total = $2 + $3 + $4
printf &amp;quot;%10s %10d %10d %10d %10.2f\n&amp;quot;, $1, $2, $3, $4, total&amp;#125;&#39;

  Name        1st        2nd        3th      Total
 VBird      23000      24000      25000   72000.00
DMTsai      21000      20000      23000   64000.00
 Bird2      43000      42000      41000  126000.00
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;说明:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;awk 的指令间隔：所有 awk 的动作，亦即在 {} 内的动作，如果有需要多个指令辅助时，可利用分号『;』间隔， 或者直接以 [Enter] 按键来隔开每个指令.&lt;/li&gt;
&lt;li&gt;格式化输出时，在 printf 的格式设定当中，务必加上 \n ，才能进行分行！&lt;/li&gt;
&lt;li&gt;与 bash shell 的变量不同，在 awk 当中，变量可以直接使用，不需加上 $ 符号。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;文件比对工具&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件比对工具&#34;&gt;#&lt;/a&gt; 文件比对工具&lt;/h4&gt;
&lt;p&gt;比对两个文件之间的差异的，并且是以行为单位来比对，一般是用在 ASCII 纯文本档的比对上，同一的文件 (或软件) 的新旧版本差异&lt;/p&gt;
&lt;p&gt;&lt;code&gt;diff [-bBi] from-file to-file&lt;/code&gt; &lt;br&gt;
from-file ：一个档名，作为原始比对文件的档名；&lt;br&gt;
to-file   ：一个档名，作为目的比对文件的档名；&lt;br&gt;
注意，from-file 或 to-file 可以 - 取代，那个 - 代表『Standard input』之意。&lt;/p&gt;
&lt;p&gt;-b  ：忽略一行当中，仅有多个空白的差异 (例如 “about me” 与 “about     me” 视为相同&lt;br&gt;
 - B  ：忽略空白行的差异。&lt;br&gt;
-i  ：忽略大小写的不同。&lt;/p&gt;
&lt;p&gt;打印结果中 &amp;lt;代表左边 from 内容，&amp;gt; 代表右边 to 内容.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cmp [-l] file1 file2&lt;/code&gt;  利用『字节』单位去比对两个文件&lt;br&gt;
 - l  ：将所有的不同点的字节处都列出来。因为 cmp 预设仅会输出第一个发现的不同点。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;patch&lt;/code&gt;  用 &lt;code&gt;diff -Naur&lt;/code&gt;  的结果更新或还原文件.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pr&lt;/code&gt;  命令可以用来打印文本文档.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;下一篇：&lt;a href=&#34;/2021/07/13/linuxA0713/&#34;&gt;Shell Scripts&lt;/a&gt;&lt;br&gt;
 上一篇：&lt;a href=&#34;/2021/07/05/linuxA0705/&#34;&gt;认识与学习 BASH&lt;/a&gt;&lt;/p&gt;
&lt;hr class=&#34;footnotes-sep&#34;&gt;
&lt;section class=&#34;footnotes&#34;&gt;
&lt;ol class=&#34;footnotes-list&#34;&gt;
&lt;li id=&#34;fn1&#34; class=&#34;footnote-item&#34;&gt;&lt;p&gt;:lower: &lt;a href=&#34;#fnref1&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
        <category term="Linux" />
        <updated>2021-07-08T07:20:36.000Z</updated>
    </entry>
    <entry>
        <id>https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linuxA0705/</id>
        <title>Linux学习 笔记#08 bash</title>
        <link rel="alternate" href="https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linuxA0705/"/>
        <content type="html">&lt;p&gt;这章是重点，圈起来 - - &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;ch10-认识与学习-bash&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ch10-认识与学习-bash&#34;&gt;#&lt;/a&gt; Ch10 认识与学习 BASH&lt;/h2&gt;
&lt;h3 id=&#34;bash-shell-的功能&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bash-shell-的功能&#34;&gt;#&lt;/a&gt; Bash shell 的功能&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;history ~/.bash_history 记录前一次登入以前所执行过的指令，可查询曾经做过的举动  &lt;code&gt;history n&lt;/code&gt;  查 n 条， &lt;code&gt;-c&lt;/code&gt;  清空， &lt;code&gt;-arw&lt;/code&gt;  与文件读取历史中有关。  &lt;code&gt;!&lt;/code&gt;  可以跟数字 n 表示执行第 n 条命令，也可以跟部分指令 s, 由最近的指令向前搜寻『指令串开头为 s』的指令，并执行&lt;/li&gt;
&lt;li&gt;alias 命令别名设定功能  &lt;code&gt;alias lm=&#39;ls -al&#39;&lt;/code&gt; . 取消则用 &lt;code&gt;unalias lm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;job control, foreground, background&lt;/li&gt;
&lt;li&gt;shell scripts&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;指令的下达与快速编辑按钮&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#指令的下达与快速编辑按钮&#34;&gt;#&lt;/a&gt; 指令的下达与快速编辑按钮&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;\ 换行输入&lt;/li&gt;
&lt;li&gt;[ctrl]+u 从光标处向前删除指令串&lt;/li&gt;
&lt;li&gt;[ctrl]+c 终止目前命令&lt;/li&gt;
&lt;li&gt;[ctrl]+z 暂停目前命令&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;变量&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#变量&#34;&gt;#&lt;/a&gt; 变量&lt;/h3&gt;
&lt;p&gt;显示变量： &lt;code&gt;echo $var 或 echo $&amp;#123;var&amp;#125;&lt;/code&gt;  量在被取用时，前面必须要加上 $&lt;br&gt;
 定义修改： &lt;code&gt;var=sinki&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;变量的设定规则:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;等号两边不能直接接空格符&lt;/li&gt;
&lt;li&gt;变量名称只能是英文字母与数字，但是开头字符不能是数字&lt;/li&gt;
&lt;li&gt;变量内容若有空格符可使用引号将变量内容结合起来，双引号内的特殊字符如 $ 等，可以保有原本的特性，单引号内的特殊字符则仅为一般字符 (纯文本)&lt;/li&gt;
&lt;li&gt;可用跳脱字符『 \ 』将特殊符号 (如 [Enter], $, \, 空格符，&#39; 等) 变成一般字符&lt;/li&gt;
&lt;li&gt;在一串指令的执行中，还需要藉由其他额外的指令所提供的信息时，可以使用反单引号 ` 括住指令或 『$(指令)』&lt;/li&gt;
&lt;li&gt;若该变量为扩增变量内容时，则可用  &lt;code&gt;&amp;quot;$变量名称&amp;quot;&lt;/code&gt;  或   &lt;code&gt;$&amp;#123;变量&amp;#125;&lt;/code&gt;  累加内容：  &lt;code&gt;PATH=&amp;quot;$PATH&amp;quot;:/home/bin&lt;/code&gt;  或 &lt;code&gt;PATH=$&amp;#123;PATH&amp;#125;:/home/bin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;若该变量需要在其他子程序执行，则需要以 export 来使变量变成环境变量：  &lt;code&gt;export PATH&lt;/code&gt;  在目前这个 shell 的情况下，去启用另一个新的 shell ，新的 shell 就是子程序啦&lt;/li&gt;
&lt;li&gt;通常大写字符为系统默认变量，自行设定变量可以使用小写字符，方便判断&lt;/li&gt;
&lt;li&gt;取消变量的方法为使用 unset ： &lt;code&gt;unset var&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;环境变量&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#环境变量&#34;&gt;#&lt;/a&gt; 环境变量&lt;/h3&gt;
&lt;p&gt;用  &lt;code&gt;env&lt;/code&gt;  观察环境变量&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HOME 家目录&lt;/li&gt;
&lt;li&gt;SHELL 目前这个环境使用的 SHELL 是哪支程序&lt;/li&gt;
&lt;li&gt;PATH 就是执行文件搜寻的路径啦～目录与目录中间以冒号 (:) 分隔， 文件的搜寻是依序由 PATH 的变量内的目录来查询&lt;/li&gt;
&lt;li&gt;LANG 语系数据，修复乱码&lt;/li&gt;
&lt;li&gt;RANDOM 随机随机数。  &lt;code&gt;declare -i number=$RANDOM*10/32768 ; echo $number&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用  &lt;code&gt;set&lt;/code&gt;  观察所有变量 (含环境变量与自定义变量)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PS1：(提示字符的设定)，就是命令行开始的东西。 &lt;code&gt;man bash&lt;/code&gt;  搜 PS1 可以看到详细替换变量。如 &lt;code&gt;PS1=&#39;[\u@u@\h h \w w \A #A #\#]#]\$ &#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;$: 代表的是『目前这个 Shell 的线程代号』，亦即是所谓的 PID (Process ID)  &lt;code&gt;echo $$&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;?: 上一个执行的指令所返回的值&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;locale&lt;/code&gt;  显示结果的语系变量&lt;br&gt;
在 Linux 当中，通常说明仅设定 LANG 或 LC_ALL 这两个变量。如果发生一些乱码的问题，那么设定系统里面保有的语系编码， 例如： en_US 或 en_US.utf8 等等的设定，应该就 OK 的啦！&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; LANG=en_US.utf8; locale
 export LC_ALL=en_US.utf8; locale
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;read-array-declare&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#read-array-declare&#34;&gt;#&lt;/a&gt; read, array, declare&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;read [-pt] variable&lt;/code&gt;  读取用户输入变量&lt;br&gt;
 - p: 接提示字符&lt;br&gt;
 - t: 接等待秒数&lt;br&gt;
 read -p &amp;quot;Please keyin your name:&amp;quot; -t 30 named&lt;/p&gt;
&lt;p&gt;&lt;code&gt;declare [-aixr] variable&lt;/code&gt;  声明变量类型&lt;br&gt;
 - a  ：数组 (array) 类型&lt;br&gt;
 - i  ：整数 (integer) 类型&lt;br&gt;
 - x  ：用法与 export 一样，就是将后面的 variable 变成环境变量；&lt;br&gt;
-r  ：将变量设定成为 readonly 类型，该变量不可被更改内容，也不能 unset&lt;br&gt;
declare -i sum=100+300+50&lt;br&gt;
 默认为字符串，无浮点数.&lt;br&gt;
 &lt;code&gt;+x&lt;/code&gt;  为取消动作。但如果不小心将变量设定为『只读』，通常得要注销再登入才能复原该变量的类型了！ @_@&lt;/p&gt;
&lt;p&gt;数组类型: var [index]=content. 读取建议以 &lt;code&gt;$&amp;#123;var[1]&amp;#125;&lt;/code&gt;  形式读取.&lt;/p&gt;
&lt;h3 id=&#34;变量内容的删除与取代&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#变量内容的删除与取代&#34;&gt;#&lt;/a&gt; 变量内容的删除与取代&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;$&amp;#123;variable#/*local/bin:&amp;#125;&lt;/code&gt;  # 代表『从变量内容的最前面开始向右删除』，且仅删除最短的那个. * 为通配符&lt;br&gt;
 &lt;code&gt;$&amp;#123;path##/*:&amp;#125;&lt;/code&gt;  ## 变成『删除掉最长的那个数据』.&lt;br&gt;
 &lt;code&gt;$&amp;#123;path%:*bin&amp;#125;&lt;/code&gt;  % 代表『从变量内容的最后面开始向左删除』, 且仅删除最短的那个.&lt;br&gt;
 &lt;code&gt;$&amp;#123;path%%:*bin&amp;#125;&lt;/code&gt;  %%  变成『删除掉最长的那个数据』.&lt;br&gt;
 &lt;code&gt;$&amp;#123;path/sbin/SBIN&amp;#125;&lt;/code&gt;  / 旧字符 / 新字符，只取代最开始符合的子串&lt;br&gt;
 &lt;code&gt;$&amp;#123;path//sbin/SBIN&amp;#125;&lt;/code&gt;  取代所有子串&lt;br&gt;
 &lt;code&gt;new_var=$&amp;#123;old_var-content&amp;#125;&lt;/code&gt;  old_var 存在则返回 old_var, 否则为 content.&lt;br&gt;
 &lt;code&gt;new_var=$&amp;#123;old_var:-content&amp;#125;&lt;/code&gt;  加：把变量为空字符串视为变量不存在.&lt;br&gt;
 &lt;code&gt;new_var=$&amp;#123;old_var=content&amp;#125;&lt;/code&gt;  old_var 存在则返回 old_var, 否则为 content, old_var 也赋值为 content.&lt;br&gt;
 &lt;code&gt;new_var=$&amp;#123;old_var?content&amp;#125;&lt;/code&gt;  old_var 存在则返回 old_var, 否则 content 输出至 stderr.&lt;br&gt;
 &lt;code&gt;new_var=$&amp;#123;old_var+content&amp;#125;&lt;/code&gt;  old_var 存在则返回 content, 否则为空字符串.&lt;/p&gt;
&lt;h3 id=&#34;bash-的环境配置文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bash-的环境配置文件&#34;&gt;#&lt;/a&gt; bash 的环境配置文件&lt;/h3&gt;
&lt;p&gt;登入时系统会依次读取配置文件，首先是 &lt;code&gt;/etc/profile&lt;/code&gt; , 系统整体设定一般不修改；然后是 &lt;code&gt;~/.bash_profile 或 ~/.bash_login 或 ~/.profile&lt;/code&gt;  中的一个，前一个不存在才会读后一个。而这些文件又会读取 &lt;code&gt;.bashrc&lt;/code&gt; , 将自己的偏好设定写入该文件即可。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;source 配置文件档名&lt;/code&gt;  或  &lt;code&gt;. ~/.bashrc&lt;/code&gt;  可以不注销登入直接重新读取配置文件.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/etc/man_db.conf&lt;/code&gt;  规范了使用 man 的时候， man page 的路径到哪里去寻找。如果以 tarball 的方式来安装数据，这个时候就得以手动的方式将路径  &lt;code&gt;/usr/local/softpackage/man&lt;/code&gt;  加到  &lt;code&gt;/etc/man_db.conf&lt;/code&gt;  里头&lt;/p&gt;
&lt;p&gt;&lt;code&gt;~/.bash_logout&lt;/code&gt;  记录了『注销 bash 后，系统再帮我做完什么动作后才离开』&lt;/p&gt;
&lt;h3 id=&#34;通配符-wildcard-与特殊符号&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#通配符-wildcard-与特殊符号&#34;&gt;#&lt;/a&gt; 通配符 wildcard 与特殊符号&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;通配符&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;意义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;*&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;代表『 0 个到无穷多个』任意字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;?&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;代表『一定有一个』任意字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;[ ]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;同样代表『一定有一个在括号内』的字符 (非任意字符)。例如 [abcd] 代表『一定有一个字符， 可能是 a, b, c, d 这四个任何一个』&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;[ - ]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;若有减号在中括号内时，代表『在编码顺序内的所有字符』。例如 [0-9] 代表 0 到 9 之间的所有数字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;[^ ]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;若中括号内的第一个字符为 (^) ，那表示『反向选择』，例如 [^abc] 代表 一定有一个字符，只要是非 a, b, c 的其他字符就接受的意思。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;特殊符&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;意义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;#&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;注释符号：这个最常被使用在 script 当中，在后的数据均不执行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;转义符号：将『特殊字符或通配符』还原成一般字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;丨&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;管线 (pipe)：分隔两个管线命令的界定 (后两节介绍)；&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;连续指令下达分隔符：连续性命令的界定 (注意！与管线命令并不相同)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;~&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;用户的家目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;取用变数前导符：亦即是变量之前需要加的变量取代值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;amp;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;工作控制 (job control)：将指令变成背景下工作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;!&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;逻辑运算意义上的『非』&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;/&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;目录符号：路径分隔的符号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;gt;, &amp;gt;&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;数据流重导向：输出导向，分别是『取代』与『累加』&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;lt;, &amp;lt;&amp;lt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;数据流重导向：输入导向&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;’ ’&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;单引号，不具有变量置换的功能 ($ 变为纯文本)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;quot; &amp;quot;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;具有变量置换的功能！ ($ 可保留相关功能)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt; |两个『&lt;/code&gt;  』中间为可以先执行的指令，亦可使用 $( )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;( )&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;在中间为子 shell 的起始与结束&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;在中间为命令区块的组合！&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;数据流重导向&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据流重导向&#34;&gt;#&lt;/a&gt; 数据流重导向&lt;/h3&gt;
&lt;p&gt;std output 和 std error output 默认都是输出到屏幕，但可以通过 &lt;code&gt;&amp;gt;&lt;/code&gt;  和 &lt;code&gt;2&amp;gt;&lt;/code&gt;  分别引流到其他文件中，如&lt;br&gt;
 &lt;code&gt;find /home -name .bashrc &amp;gt; list_right 2&amp;gt; list_error&lt;/code&gt; &lt;br&gt;
 若是 &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;  则为追加输出.&lt;/p&gt;
&lt;p&gt;特殊的位置:  &lt;code&gt;/dev/null&lt;/code&gt;  引流到这里则消失&lt;/p&gt;
&lt;p&gt;用 &lt;code&gt;&amp;amp;&amp;gt;&lt;/code&gt;  或 &lt;code&gt;2&amp;gt;&amp;amp;1&lt;/code&gt;  可以向屏幕那样混合输出，如&lt;br&gt;
 &lt;code&gt;find /home -name .bashrc &amp;gt; list 2&amp;gt;&amp;amp;1; find /home -name .bashrc &amp;amp;&amp;gt; list&lt;/code&gt; &lt;br&gt;
 这是把错误输出混合到标准输出，同样可以 &lt;code&gt;1&amp;gt;&amp;amp;2&lt;/code&gt;  把标准输出当作错误输出.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;  则是将原本需要由键盘输入的数据，改由文件内容来取代。如&lt;br&gt;
 &lt;code&gt;cat &amp;gt; catfile &amp;lt; ~/.bashrc&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;  代表的是『结束的输入字符』, 如&lt;br&gt;
 &lt;code&gt;cat &amp;gt; catfile &amp;lt;&amp;lt; &amp;quot;eof&amp;quot;&lt;/code&gt;  则当键盘输入 eof 时结束，相当于 [ctrl]+d.&lt;/p&gt;
&lt;p&gt;复制流:    &lt;code&gt;tee [-a] file&lt;/code&gt;   -a  是以累加 (append) 的方式，将数据加入 file 当中&lt;br&gt;
如:  &lt;code&gt;ls -l / | tee -a ~/homefile | more&lt;/code&gt;  可以同时存一份，屏幕上输出一份&lt;/p&gt;
&lt;h3 id=&#34;命令执行的判断依据&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#命令执行的判断依据&#34;&gt;#&lt;/a&gt; 命令执行的判断依据： ; , &amp;amp;&amp;amp;, ||&lt;/h3&gt;
&lt;p&gt;在指令与指令中间利用分号 (😉 来隔开，这样一来，分号前的指令执行完后就会立刻接着执行后面的指令了。&lt;/p&gt;
&lt;p&gt;cmd1 &amp;amp;&amp;amp; cmd2 : 若 cmd1 执行完毕且正确执行 ($?=0)，则开始执行 cmd2。否则不执行.&lt;/p&gt;
&lt;p&gt;cmd1 || cmd2 : 若 cmd1 执行完毕且正确执行 ($?=0)，则 cmd2 不执行。否则执行。并不是或语句啊！&lt;/p&gt;
&lt;p&gt;例：不清楚 /tmp/abc 是否存在，但就是要建立 /tmp/abc/hehe 文件&lt;br&gt;
 &lt;code&gt;ls /tmp/abc || mkdir /tmp/abc &amp;amp;&amp;amp; touch /tmp/abc/hehe&lt;/code&gt; &lt;br&gt;
Linux 底下的指令都是由左往右执行的，$? 也是顺序变化的.&lt;br&gt;
 &lt;code&gt;ls /tmp/vbirding &amp;amp;&amp;amp; echo &amp;quot;exist&amp;quot; || echo &amp;quot;not exist&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;管线&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#管线&#34;&gt;#&lt;/a&gt; 管线&lt;/h3&gt;
&lt;p&gt;管线命令『 | 』仅能处理经由前面一个指令的 standard output 的信息，对于 stdandard error 并没有直接处理的能力。&lt;br&gt;
管线命令必须要能够接受来自前一个指令的数据成为 standard input 继续处理才行。&lt;br&gt;
如 &lt;code&gt;ls -al /etc | less&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;cut&lt;br&gt;
 &lt;code&gt;cut -d &#39;分隔字符&#39; -f fields&lt;/code&gt; , 用 -f 取出第几段的意思，如  &lt;code&gt;echo $&amp;#123;PATH&amp;#125; | cut -d &#39;:&#39; -f 3,5&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;cut -c c 字符区间&lt;/code&gt; ，如 &lt;code&gt;export | cut -c 12-&lt;/code&gt; .&lt;br&gt;
cut 主要的用途在于将同一行里面的数据进行分解，对多空格不友好&lt;/li&gt;
&lt;li&gt;grep&lt;br&gt;
grep 是分析一行讯息， 若当中有我们所需要的信息，就将该行拿出来～&lt;br&gt;
grep [-acinv] [–color=auto] ‘搜寻字符串’ filename&lt;br&gt;
-a ：将 binary 文件以 text 文件的方式搜寻数据&lt;br&gt;
 - c ：计算找到 ‘搜寻字符串’ 的次数&lt;br&gt;
 - i ：忽略大小写的不同，所以大小写视为相同&lt;br&gt;
 - n ：顺便输出行号&lt;br&gt;
 - v ：反向选择，亦即显示出没有 ‘搜寻字符串’ 内容的那一行！&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;排序&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#排序&#34;&gt;#&lt;/a&gt; 排序&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;sort  [-fbMnrtuk] [file or stdin]&lt;br&gt;
-f  ：忽略大小写的差异，例如 A 与 a 视为编码相同；&lt;br&gt;
-b  ：忽略最前面的空格符部分；&lt;br&gt;
-M  ：以月份的名字来排序，例如 JAN, DEC 等等的排序方法；&lt;br&gt;
-n  ：使用『纯数字』进行排序 (默认是以文字型态来排序的)；&lt;br&gt;
-r  ：反向排序；&lt;br&gt;
-u  ：就是 uniq ，相同的数据中，仅出现一行代表；&lt;br&gt;
-t  ：分隔符，预设是用 [tab] 键来分隔；&lt;br&gt;
-k  ：以那个区间 (field) 来进行排序的意思&lt;br&gt;
 &lt;code&gt;/etc/passwd&lt;/code&gt;  内容是以：来分隔的，以第三栏来排序则 &lt;code&gt;cat /etc/passwd | sort -t &#39;:&#39; -k 3 -n&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;uniq&lt;br&gt;
-i  ：忽略大小写字符的不同；&lt;br&gt;
-c  ：进行计数&lt;br&gt;
如 &lt;code&gt;last | cut -d &#39; &#39; -f1 | sort | uniq -c&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;wc 统计信息 (厕所？&lt;br&gt;
-l  ：仅列出行；&lt;br&gt;
-w  ：仅列出多少字 (英文单字)；&lt;br&gt;
-m  ：多少字符；&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;字符转换命令-tr-col-join-paste-expand&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字符转换命令-tr-col-join-paste-expand&#34;&gt;#&lt;/a&gt; 字符转换命令： tr, col, join, paste, expand&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;tr [-ds] SET1 ...&lt;/code&gt; &lt;br&gt;
-d  ：删除讯息当中的 SET1 这个字符串；&lt;br&gt;
-s  ：取代掉重复的字符！&lt;/li&gt;
&lt;li&gt;&lt;code&gt;col [-xb]&lt;/code&gt; &lt;br&gt;
-x  ：将 tab 键转换成对等的空格键&lt;/li&gt;
&lt;li&gt;&lt;code&gt;join [-ti12] file1 file2&lt;/code&gt;   两个文件当中，有 “相同 key” 的那一行加在一起&lt;br&gt;
 - t ‘:’ ：join 默认以空格符分隔数据，并且比对『第一个字段』的数据， 如果两个文件相同，则将两笔数据联成一行，且第一个字段放在第一个！&lt;br&gt;
-i  ：忽略大小写的差异；&lt;br&gt;
-1 n ：这个是数字的 1 ，代表『第一个文件要用那个字段来分析』的意思；&lt;br&gt;
-2 m ：代表『第二个文件要用那个字段来分析』的意思。&lt;br&gt;
在使用 join 之前，你所需要处理的文件应该要事先经过排序 (sort) 处理！&lt;/li&gt;
&lt;li&gt;&lt;code&gt;paste [-d] file1 file2&lt;/code&gt;  将两行贴在一起，且中间以 [tab] 键隔开&lt;br&gt;
 - d  ：后面可以接分隔字符。预设是以 [tab] 来分隔的！&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;：如果 file 部分写成 - ，表示来自 standard input 的资料的意思。’-’ 可以替代 stdin 与 stdout&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;&lt;code&gt;expand [-t] file&lt;/code&gt;  [tab] 按键转成空格键&lt;br&gt;
 - t  ：后面可以接数字。一般来说，一个 tab 按键可以用 8 个空格&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;切割文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#切割文件&#34;&gt;#&lt;/a&gt; 切割文件&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;split  [-bl] file PREFIX&lt;/code&gt;  将大文件分区成为小文件&lt;br&gt;
 - b  ：后面可接欲分区成的文件大小，可加单位，例如 b, k, m 等；&lt;br&gt;
-l  ：以行数来进行分区。&lt;br&gt;
PREFIX ：代表前导符的意思，可作为分区文件的前导文字。&lt;br&gt;
合并则用  &lt;code&gt;cat PREFIX* file&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;参数代换-xargs&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#参数代换-xargs&#34;&gt;#&lt;/a&gt; 参数代换： xargs&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;xargs [-0epn] command &lt;/code&gt; &lt;br&gt;
-0  ：如果输入的 stdin 含有特殊字符，例如 `, , 空格键等等字符时，这个 -0 参数&lt;br&gt;
可以将他还原成一般字符。这个参数可以用于特殊状态喔！&lt;br&gt;
-e  ：这个是 EOF (end of file) 的意思。后面可以接一个字符串，当 xargs 分析到这个字符串时，&lt;br&gt;
就会停止继续工作！ -e’sync’ 是连在一起的，中间没有空格键。&lt;br&gt;
-p  ：在执行每个指令的 argument 时，都会询问使用者的意思；&lt;br&gt;
-n  ：后面接次数，每次 command 指令执行时，要使用几个参数的意思。&lt;br&gt;
当 xargs 后面没有接任何的指令时，默认是以 echo 来进行输出喔！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;下一篇：&lt;a href=&#34;/2021/07/03/linuxA0703/&#34;&gt;-&lt;/a&gt;&lt;br&gt;
 上一篇：&lt;a href=&#34;/2021/07/03/linuxA0703/&#34;&gt;文件与文件系统的压缩，打包与备份&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="Linux" />
        <updated>2021-07-05T13:51:36.000Z</updated>
    </entry>
    <entry>
        <id>https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linuxA0703/</id>
        <title>Linux学习 笔记#07 压缩，备份与Vim</title>
        <link rel="alternate" href="https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linuxA0703/"/>
        <content type="html">&lt;p&gt;在家逐渐颓废_〆(´Д｀) &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;ch8-文件与文件系统的压缩打包与备份&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ch8-文件与文件系统的压缩打包与备份&#34;&gt;#&lt;/a&gt; Ch8 文件与文件系统的压缩，打包与备份&lt;/h2&gt;
&lt;h3 id=&#34;linux-系统常见的压缩指令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux-系统常见的压缩指令&#34;&gt;#&lt;/a&gt; Linux 系统常见的压缩指令&lt;/h3&gt;
&lt;p&gt;几个常见的压缩文件案扩展名&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;*.zip       zip 程序压缩的文件；&lt;/li&gt;
&lt;li&gt;*.gz        gzip 程序压缩的文件；&lt;/li&gt;
&lt;li&gt;*.bz2       bzip2 程序压缩的文件；&lt;/li&gt;
&lt;li&gt;*.xz        xz 程序压缩的文件；&lt;/li&gt;
&lt;li&gt;*.tar       tar 程序打包的数据，并没有压缩过；&lt;/li&gt;
&lt;li&gt;*.tar.gz    tar 程序打包的文件，其中并且经过 gzip 的压缩&lt;/li&gt;
&lt;li&gt;*.tar.bz2   tar 程序打包的文件，其中并且经过 bzip2 的压缩&lt;/li&gt;
&lt;li&gt;*.tar.xz    tar 程序打包的文件，其中并且经过 xz 的压缩&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;gzip [-dtvk19] filename[.gz]&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;-k&lt;/code&gt;  保留原始档， &lt;code&gt;-d&lt;/code&gt;  解压缩。用 &lt;code&gt;zcat/zmore/zless/zgrep&lt;/code&gt;  可以直接显示压缩档内容。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bzip2 [-dkv19] filename[.bz2]&lt;/code&gt; &lt;br&gt;
 与 &lt;code&gt;gzip&lt;/code&gt;  参数基本一致，压缩比更好，但大文件压缩较慢。同样有 &lt;code&gt;bzcat&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;xz [-dtvk19] filename[.xz]&lt;/code&gt; &lt;br&gt;
 压缩比更好，时间更久。同样有 &lt;code&gt;xzcat&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tar&lt;/code&gt; &lt;br&gt;
 之前的命令是文件单独压缩，而 &lt;code&gt;tar&lt;/code&gt;  是把目录中的文件打包为一个文件。&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;压 缩： &lt;code&gt;tar -jcv -f filename.tar.bz2 要被压缩的文件或目录名称&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查 询： &lt;code&gt;tar -jtv -f filename.tar.bz2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;解压缩： &lt;code&gt;tar -jxv -f filename.tar.bz2 -C 欲解压缩的目录&lt;/code&gt; &lt;br&gt;
另外， &lt;code&gt;z&lt;/code&gt;  为 &lt;code&gt;.gz&lt;/code&gt; ， &lt;code&gt;J&lt;/code&gt;  为 &lt;code&gt;.xz&lt;/code&gt; ，可代替 &lt;code&gt;-j&lt;/code&gt; 。 &lt;code&gt;v&lt;/code&gt;  为显示处理的文件， &lt;code&gt;f&lt;/code&gt;  可放在前面参数的最后。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;解开单独文件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;找到文件： &lt;code&gt;tar -jtv -f /root/etc.tar.bz2 | grep &#39;shadow&#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;解压缩：  &lt;code&gt;tar -jxv -f /root/etc.tar.bz2 etc/shadow&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;排除一些不压缩的文件：&lt;br&gt;
 &lt;code&gt;tar -jcv -f /root/system.tar.bz2 --exclude=/root/etc* --exclude=/root/system.tar.bz2 /etc /root&lt;/code&gt; &lt;br&gt;
 只压缩较新的文件：（这个用来备份可以节省空间哦，因为不会重复备份某些文件啦&lt;br&gt;
 &lt;code&gt;tar -jcv jcv -f /root/etc.newer.tar.bz2 --newer-mtime=&amp;quot;2021/06/17&amp;quot; /etc/&lt;/code&gt; &lt;br&gt;
 特殊应用：利用管线命令与数据流&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /tmp
tar -cvf - /etc | tar -xvf xvf -
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;xfs文件系统备份等&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xfs文件系统备份等&#34;&gt;#&lt;/a&gt; XFS 文件系统备份等&lt;/h3&gt;
&lt;p&gt;所用的 &lt;code&gt;xfsdump&lt;/code&gt;  是累积备份的，不过 &lt;code&gt;WSL&lt;/code&gt;  好像有点区别吧，pass&lt;br&gt;
 光盘相关的也是 pass，家里早都莫得 CD 机了电脑也没驱动&lt;br&gt;
 &lt;code&gt;dd&lt;/code&gt; ：直接读取扇区的复制，一模一样不用理会文件系统&lt;br&gt;
 &lt;code&gt;cpio&lt;/code&gt; ：同样用于文件复制，可以备份任何东西。但感觉比较笨。&lt;/p&gt;
&lt;p&gt;不过说起来我现在用的备份都是直接复制粘贴的同步…… 根本没压缩啊！只有很少文件压缩了&lt;br&gt;
一个很好用的同步软件：FreeFileSync&lt;/p&gt;
&lt;h2 id=&#34;ch9-vim-程序编辑器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ch9-vim-程序编辑器&#34;&gt;#&lt;/a&gt; Ch9 vim 程序编辑器&lt;/h2&gt;
&lt;p&gt;终于到这个随机字符串生成器了 - -&lt;/p&gt;
&lt;h3 id=&#34;vi-的使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vi-的使用&#34;&gt;#&lt;/a&gt; vi 的使用&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;一般指令模式 (command mode)&lt;br&gt;
 以 vi 打开一个文件就直接进入一般指令模式。可以使用『上下左右』按键来移动光标，『删除字符』或『删除整行』来处理文件内容， 也可以使用『复制、粘贴』。&lt;/li&gt;
&lt;li&gt;编辑模式 (insert mode)&lt;br&gt;
 按下『i, I, o, O, a, A, r, R』等任何一个字母之后进入编辑模式。通常在 Linux 中，按下这些按键时，在画面的左下方会出现『 INSERT 或 REPLACE 』的字样要回到一般指令模式时， 则须按下『Esc』。&lt;/li&gt;
&lt;li&gt;指令行命令模式 (command-line mode)&lt;br&gt;
 在一般模式当中，输入『 : / ? 』三个中的任何一个按钮，就可以将光标移动到最底下那一行。在这个模式当中， 可以提供你『搜寻资料』的动作，读取、存盘、大量取代字符、离开 vi 、显示行号等等的动作也是在此模式中达成。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;startvi-filename&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#startvi-filename&#34;&gt;#&lt;/a&gt; Start： &lt;code&gt;vi filename&lt;/code&gt; ！&lt;/h4&gt;
&lt;p&gt;基础：按 &lt;code&gt;i&lt;/code&gt;  输入文本， &lt;code&gt;esc&lt;/code&gt;  退出， &lt;code&gt;:wq&lt;/code&gt;  保存 / &lt;code&gt;:wq!&lt;/code&gt;  强制保存。&lt;/p&gt;
&lt;p&gt;一般指令模式按键&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;按键&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;操作&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;num 方向键&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;光标移动，前面加数字可批量移动&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;ctrl+f，b&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;等于 Page Down，Up&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;num 空格&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;光标后移 num 个&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0，Home&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;行首&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$,End&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;行尾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;G&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;最后一行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;gg&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;首行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;numgg&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;第 num 行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;num 回车&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;光标下移 num 行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;/string&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;向光标之下寻找一个名称为 string 的字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;？string&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;向光标之上寻找一个字符串名称为 string 的字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;n&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;重复上一个搜寻动作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;N&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;反向重复上一个搜寻动作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;:n1,n2s/word1/word2/g&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;在第 n1 与 n2 行之间寻找 word1 这个字符串，并将该字符串取代为 word2 ！举例『:100,200s/vbird/VBIRD/g』。n2 为 $ 则是最后一行，加 c 则取代时确认&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;dd&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;删除一整行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;num dd&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;删除光标向下 num 行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;yy&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;复制一整行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;num yy&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;复制光标向下 num 行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;p&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;将已复制的数据在光标下一行贴上&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;u&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;撤销操作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;CTRL+r&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;恢复撤销&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;.&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;重复前一个动作&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;一般指令模式切换到指令列模式的可用按钮说明&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;按键&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;操作&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;:wq&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;储存后离开，若为 :wq! 则为强制储存后离开&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;ZZ&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;若文件没有更动，则不储存离开，若文件已经被更动过，则储存后离开！&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;:w [filename]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;另存为&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;:q!&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;强制离开不储存文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;:set nu&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;显示行号，nonu 为取消&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;区块选择visual-block&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#区块选择visual-block&#34;&gt;#&lt;/a&gt; 区块选择 (Visual Block)&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;按键&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;操作&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;v&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;字符选择，会将光标经过的地方反白选择！&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;V&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;列选择，会将光标经过的列反白选择！&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;[Ctrl]+v&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;区块选择，可以方向键移动光标，用长方形的方式选择资料&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;y&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;将反白的地方复制起来&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;d&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;将反白的地方删除掉&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;p&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;将刚刚复制的区块，在游标所在处贴上！&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;多文件编辑&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#多文件编辑&#34;&gt;#&lt;/a&gt; 多文件编辑&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;vim hosts /etc/hosts&lt;/code&gt;  一次开启多个文件&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;按键&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;操作&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;:n&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;编辑下一个文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;:N&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;编辑上一个文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;:files&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;列出目前这个 vim 的开启的所有文件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这样可以跨文件复制粘贴！&lt;/p&gt;
&lt;h4 id=&#34;多窗口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#多窗口&#34;&gt;#&lt;/a&gt; 多窗口&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;按键&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;操作&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;:sp [filename]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;开启一个新窗口，如果有加 filename，表示在新窗口开启一个新文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;[ctrl]+w+↓&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;[ctrl]+w 可与下拆开，光标移动到下方的窗口。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;[ctrl]+w+↑&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;同上，不过光标移动到上面的窗口。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;补全&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#补全&#34;&gt;#&lt;/a&gt; 补全&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;组合按钮&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;补齐的内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;[ctrl]+x -&amp;gt; [ctrl]+n&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;透过目前正在编辑的这个『文件的内容文字』作为关键词，予以补齐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;[ctrl]+x -&amp;gt; [ctrl]+f&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;以当前目录内的『文件名』作为关键词，予以补齐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;[ctrl]+x -&amp;gt; [ctrl]+o&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;以扩展名作为语法补充，以 vim 内建的关键词，予以补齐&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;vim-环境设定与记录-~vimrc-~viminfo编码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vim-环境设定与记录-~vimrc-~viminfo编码&#34;&gt;#&lt;/a&gt; vim 环境设定与记录： ~/.vimrc, ~/.viminfo，编码&lt;/h4&gt;
&lt;p&gt;pass&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;下一篇：&lt;a href=&#34;/2021/07/05/linuxA0705/&#34;&gt;bash&lt;/a&gt;&lt;br&gt;
 上一篇：&lt;a href=&#34;/2021/05/25/linuxA0525/&#34;&gt;磁盘与文件系统管理&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="Linux" />
        <updated>2021-07-03T06:22:36.000Z</updated>
    </entry>
    <entry>
        <id>https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linuxA0525/</id>
        <title>Linux学习 笔记#06 磁盘与文件系统管理</title>
        <link rel="alternate" href="https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linuxA0525/"/>
        <content type="html">&lt;p&gt;摸了好久🐟 &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;ch7-linux-磁盘与文件系统管理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ch7-linux-磁盘与文件系统管理&#34;&gt;#&lt;/a&gt; Ch7 Linux 磁盘与文件系统管理&lt;/h2&gt;
&lt;p&gt;该篇主要讲 Linux 的文件系统 ext，然而用的 WSL 貌似不是 ext 系统，不能用 &lt;code&gt;blkid&lt;/code&gt;  和 &lt;code&gt;dumpe2fs&lt;/code&gt;  查到相关信息。&lt;br&gt;
WSL2 可以挂载 Linux 文件系统物理磁盘。&lt;br&gt;
看完后大概知道为什么不同文件系统支持的文件大小不一样啦，比如之前往 U 盘拷东西时文件超过几个 G 就提示文件太大，还得压缩成分卷。&lt;/p&gt;
&lt;p&gt;使用命令 &lt;code&gt;df -T /&lt;/code&gt;  查看文件系统的 superblock 纪录&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Filesystem     Type  1K-blocks     Used Available Use% Mounted on
rootfs         wslfs 104857596 75166740  29690856  72% /
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;哦，原来是自己单独搞了个系统格式啊。&lt;/p&gt;
&lt;h3 id=&#34;文件系统的简单操作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件系统的简单操作&#34;&gt;#&lt;/a&gt; 文件系统的简单操作&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;df [-ahikHTm] [目录或文件名] &lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-a  ：列出所有的文件系统，包括系统特有的 /proc 等文件系统；&lt;/li&gt;
&lt;li&gt;-k  ：以 KBytes 的容量显示各文件系统；&lt;/li&gt;
&lt;li&gt;-m  ：以 MBytes 的容量显示各文件系统；&lt;/li&gt;
&lt;li&gt;-h  ：以人们较易阅读的 GBytes, MBytes, KBytes 等格式自行显示；&lt;/li&gt;
&lt;li&gt;-H  ：以 M=1000K 取代 M=1024K 的进位方式；&lt;/li&gt;
&lt;li&gt;-T  ：连同该 partition 的 filesystem 名称 (例如 xfs) 也列出；&lt;/li&gt;
&lt;li&gt;-i  ：不用磁盘容量，而以 inode 的数量来显示&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 df 后面加上目录或者是文件时， df 会自动的分析该目录或文件所在的 partition ，并将该 partition 的容量显示出来，&lt;br&gt;
这样就可以知道某个目录底下还有多少容量可以使用了！&lt;/p&gt;
&lt;p&gt;&lt;code&gt;du [-ahskm] 文件或目录名称 &lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-a  ：列出所有的文件与目录容量，因为默认仅统计目录底下的文件量而已。&lt;/li&gt;
&lt;li&gt;-h  ：以人们较易读的容量格式 (G/M) 显示；&lt;/li&gt;
&lt;li&gt;-s  ：列出总量而已，而不列出每个各别的目录占用容量；&lt;/li&gt;
&lt;li&gt;-S  ：不包括子目录下的总计，与 -s 有点差别。&lt;/li&gt;
&lt;li&gt;-k  ：以 KBytes 列出容量显示；&lt;/li&gt;
&lt;li&gt;-m  ：以 MBytes 列出容量显示；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;检查根目录底下每个目录所占用的容量:  &lt;code&gt;du -sm /*&lt;/code&gt; &lt;br&gt;
 当前文件夹下各个文件大小（屏蔽报错信息） &lt;code&gt;du -h --max-depth=1 2&amp;gt;/dev/null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ln [-sf] 来源文件 目标文件文件 &lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-s  ：如果不加任何参数就进行连结，那就是 hard link，至于 -s 就是 symbolic link&lt;/li&gt;
&lt;li&gt;-f  ：如果 目标文件 存在时，就主动的将目标文件直接移除后再建立！&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简单说，硬链接就是新指向文件内存的指针，软链接是快捷方式到目录……&lt;/p&gt;
&lt;p&gt;磁盘分配和格式化就先跳过啦，偶尔需要的话查一下就行了。&lt;/p&gt;
&lt;p&gt;还有文件系统的挂载，还有建立空文件格式化为系统当磁盘挂载的骚操作啊！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;下一篇：&lt;a href=&#34;/2021/07/03/linuxA0703/&#34;&gt;压缩，备份与 Vim&lt;/a&gt;&lt;br&gt;
 上一篇：&lt;a href=&#34;/2021/03/22/linuxA0322/&#34;&gt;文件与目录管理&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="Linux" />
        <updated>2021-05-25T06:17:42.000Z</updated>
    </entry>
    <entry>
        <id>https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/sunway02/</id>
        <title>超算 - 使用指南</title>
        <link rel="alternate" href="https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/sunway02/"/>
        <content type="html">&lt;h2 id=&#34;参考资料&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#参考资料&#34;&gt;#&lt;/a&gt; 参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5uc2Njd3guY246MTMzNy91cGxvYWRzL2YwZjRiYWY0YjNiYjRiYmQ4OTI3MDBlNDIxZjc2Njc5LnBkZg==&#34;&gt;神威・太湖之光 并行程序设计与优化&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;帮助&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#帮助&#34;&gt;#&lt;/a&gt; 帮助&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;sunway --help&lt;/code&gt;  查看说明。&lt;/p&gt;
&lt;h2 id=&#34;作业管理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#作业管理&#34;&gt;#&lt;/a&gt; 作业管理&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;查看队列： &lt;code&gt;bqueues&lt;/code&gt; ， &lt;code&gt;qload -w&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;提交作业： &lt;code&gt;bsub -q q_x86_expr -n 1 -o runlog ./a.out para1 para2&lt;/code&gt; ， &lt;code&gt;-q&lt;/code&gt;  后跟提交队列，尽量选任务数少的； &lt;code&gt;-n&lt;/code&gt;  后是使用节点个数； &lt;code&gt;-o&lt;/code&gt;  是后台运行输出；最后是要运行的 &lt;code&gt;csh&lt;/code&gt; 。每道作业有唯一的作业 ID，提交后返回。&lt;/li&gt;
&lt;li&gt;交互： &lt;code&gt;bsub&lt;/code&gt;  跟 &lt;code&gt;-I&lt;/code&gt;  参数，可终端窗口交互。短线重连使用 &lt;code&gt;bonline jobID&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;查询作业： &lt;code&gt;bjobs jobID&lt;/code&gt; ，  &lt;code&gt;bjobs&lt;/code&gt;  查询用户所有作业。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;节点说明&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#节点说明&#34;&gt;#&lt;/a&gt; 节点说明&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;psn00x&lt;/code&gt;  为主节点，仅登录。 &lt;code&gt;psn01x&lt;/code&gt;  为支节点，可运行小型作业。大型作业使用 &lt;code&gt;bsub&lt;/code&gt;  提交。&lt;br&gt;
节点跳转： &lt;code&gt;ssh psn011&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;GFPS8p&lt;/code&gt;  是辅助计算存储系统，辅助 x86 队列可以访问，可成功提交 csh 作业，神威队列不能访问。&lt;br&gt;
 &lt;code&gt;online3&lt;/code&gt;  面向神威队列。&lt;/p&gt;
&lt;h2 id=&#34;csh脚本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#csh脚本&#34;&gt;#&lt;/a&gt; csh 脚本&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;matlab 使用： &lt;code&gt;matlab -nodisplay -nosplash -nodesktop -r &amp;quot;run(&#39;/.../script.m&#39;);exit;&amp;quot;&lt;/code&gt; ， &lt;code&gt;-nodisplay&lt;/code&gt;  是不显示图形输出， &lt;code&gt;-nodesktop&lt;/code&gt;  是命令行模式。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;其他&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#其他&#34;&gt;#&lt;/a&gt; 其他&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;查看图片： &lt;code&gt;eog file.png&lt;/code&gt;  比较卡。&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="Linux" />
        <updated>2021-03-29T08:13:44.000Z</updated>
    </entry>
    <entry>
        <id>https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linuxA0322/</id>
        <title>Linux学习 笔记#05 文件与目录管理</title>
        <link rel="alternate" href="https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linuxA0322/"/>
        <content type="html">&lt;p&gt;继续学习。 &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;br&gt;
装了 VScode 和 WSL Ubuntu 18.04 LTS 继续学习 Linux ！之前的虚拟机就不用了。&lt;/p&gt;
&lt;h3 id=&#34;插曲win-10-wsl-换源&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#插曲win-10-wsl-换源&#34;&gt;#&lt;/a&gt; 插曲：Win 10 WSL 换源&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;备份原始文件，便于出错后恢复&lt;br&gt;
 &lt;code&gt;cp /etc/apt/sources.list /etc/apt/sources.list.bak&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;修改服务器地址，把 &lt;code&gt;/etc/apt/sources.list&lt;/code&gt;  中的内容改为&lt;br&gt;
 deb &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS91YnVudHUv&#34;&gt;http://mirrors.aliyun.com/ubuntu/&lt;/span&gt; bionic main restricted universe multiverse&lt;br&gt;
deb &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS91YnVudHUv&#34;&gt;http://mirrors.aliyun.com/ubuntu/&lt;/span&gt; bionic-security main restricted universe multiverse&lt;br&gt;
deb &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS91YnVudHUv&#34;&gt;http://mirrors.aliyun.com/ubuntu/&lt;/span&gt; bionic-updates main restricted universe multiverse&lt;br&gt;
deb &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS91YnVudHUv&#34;&gt;http://mirrors.aliyun.com/ubuntu/&lt;/span&gt; bionic-proposed main restricted universe multiverse&lt;br&gt;
deb &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS91YnVudHUv&#34;&gt;http://mirrors.aliyun.com/ubuntu/&lt;/span&gt; bionic-backports main restricted universe multiverse&lt;br&gt;
deb-src &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS91YnVudHUv&#34;&gt;http://mirrors.aliyun.com/ubuntu/&lt;/span&gt; bionic main restricted universe multiverse&lt;br&gt;
deb-src &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS91YnVudHUv&#34;&gt;http://mirrors.aliyun.com/ubuntu/&lt;/span&gt; bionic-security main restricted universe multiverse&lt;br&gt;
deb-src &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS91YnVudHUv&#34;&gt;http://mirrors.aliyun.com/ubuntu/&lt;/span&gt; bionic-updates main restricted universe multiverse&lt;br&gt;
deb-src &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS91YnVudHUv&#34;&gt;http://mirrors.aliyun.com/ubuntu/&lt;/span&gt; bionic-proposed main restricted universe multiverse&lt;br&gt;
deb-src &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS91YnVudHUv&#34;&gt;http://mirrors.aliyun.com/ubuntu/&lt;/span&gt; bionic-backports main restricted universe multiverse&lt;/li&gt;
&lt;li&gt;更新 &lt;code&gt;sudo apt update&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0NTEyMjQ0L2FydGljbGUvZGV0YWlscy8xMDc1MTY2Mjg=&#34;&gt;参考博客&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;ch6-linux-文件与目录管理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ch6-linux-文件与目录管理&#34;&gt;#&lt;/a&gt; Ch6 Linux 文件与目录管理&lt;/h2&gt;
&lt;h3 id=&#34;常见处理目录命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常见处理目录命令&#34;&gt;#&lt;/a&gt; 常见处理目录命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cd dirname&lt;/code&gt;  变换目录， &lt;code&gt;cd == cd ~&lt;/code&gt;  都是回到家目录， &lt;code&gt;cd -&lt;/code&gt;  是回到刚才的目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pwd&lt;/code&gt;  显示当前目录， &lt;code&gt;-P&lt;/code&gt;  可以显示无链接的实际路径。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mkdir newdir&lt;/code&gt;  建立新目录， &lt;code&gt;-p d1/d2/d3&lt;/code&gt;  建立多层目录， &lt;code&gt;-m 711&lt;/code&gt;  设定权限。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rmdir olddir&lt;/code&gt;  删除目录， &lt;code&gt;-p&lt;/code&gt;  删除多层空目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ls&lt;/code&gt;  查看目录文件，一般 &lt;code&gt;ll == ls -al&lt;/code&gt;  为所有文件及信息， &lt;code&gt;-h&lt;/code&gt;  显示可读文件大小。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外， &lt;code&gt;.&lt;/code&gt;  或 &lt;code&gt;./&lt;/code&gt;  代表当前目录， &lt;code&gt;..&lt;/code&gt;  是上一层哦。&lt;/p&gt;
&lt;h3 id=&#34;复制文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#复制文件&#34;&gt;#&lt;/a&gt; 复制文件&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;cp&lt;/code&gt;  （是 copy 不是 couple&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;  ==  &lt;code&gt;-d&lt;/code&gt;  +  &lt;code&gt;-r&lt;/code&gt;  +  &lt;code&gt;--preserve=all&lt;/code&gt;  == link 复制链接 + 递归复制 + 保持属性复制&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt;  创建快捷方式（符号链接）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;  询问是否覆盖&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;  硬式链接&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;  update，时间更新才复制&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;  强制复制，若目标已存在且无法开启，则移除后再试一次&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cp source1 source2 ... dir&lt;/code&gt;  多个文件复制，只能复制到目录下&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;删除文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#删除文件&#34;&gt;#&lt;/a&gt; 删除文件&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;rm&lt;/code&gt;  remove&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;  询问是否删除，root 默认&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;  递归删除&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;  强制删除，不询问&lt;br&gt;
使用通配符 &lt;code&gt;*&lt;/code&gt;  来批量删除，如 &lt;code&gt;rm *.txt&lt;/code&gt; &lt;br&gt;
 使用 &lt;code&gt;\rm&lt;/code&gt;  来忽略 &lt;code&gt;alias&lt;/code&gt;  的指定选项。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;移动文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#移动文件&#34;&gt;#&lt;/a&gt; 移动文件&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;mv -fiu&lt;/code&gt;  与复制的选项一致。也可以多文件一起移动到某个目录下。&lt;/p&gt;
&lt;h3 id=&#34;取得文件名和路径&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#取得文件名和路径&#34;&gt;#&lt;/a&gt; 取得文件名和路径&lt;/h3&gt;
&lt;p&gt;对于绝对路径，使用 &lt;code&gt;basename&lt;/code&gt;  和 &lt;code&gt;dirname&lt;/code&gt;  分别取得文件名和文件路径。&lt;/p&gt;
&lt;h3 id=&#34;查看文件内容&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看文件内容&#34;&gt;#&lt;/a&gt; 查看文件内容&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cat&lt;/code&gt;   由第一行开始显示文件内容  &lt;code&gt;-n&lt;/code&gt;  显示行号， &lt;code&gt;-T&lt;/code&gt;  用 ^T 显示 Tab 键， &lt;code&gt;-v&lt;/code&gt;  列出看不见的特殊字符， &lt;code&gt;-E&lt;/code&gt;  显示结尾的断行字符 $， &lt;code&gt;-A&lt;/code&gt; == &lt;code&gt;-vET&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tac&lt;/code&gt;   从最后一行倒着显示（还是 cat 的倒着写&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nl&lt;/code&gt;    显示的时候输出行号！&lt;/li&gt;
&lt;li&gt;&lt;code&gt;less&lt;/code&gt;  与 more 类似，但是比 more 更好的是，他可以往前翻页！&lt;/li&gt;
&lt;li&gt;&lt;code&gt;head&lt;/code&gt;  只看头几行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tail&lt;/code&gt;  只看尾巴几行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;od&lt;/code&gt;    以二进制的方式读取文件内容&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;创建文件与修改文件时间&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#创建文件与修改文件时间&#34;&gt;#&lt;/a&gt; 创建文件与修改文件时间&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;touch&lt;/code&gt;  后接不存在的文件 == 创建该文件，存在文件则修改 access time 和 modification time 为当前。&lt;/p&gt;
&lt;h3 id=&#34;预设权限隐藏属性与特殊的文件权限&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#预设权限隐藏属性与特殊的文件权限&#34;&gt;#&lt;/a&gt; 预设权限，隐藏属性与特殊的文件权限&lt;/h3&gt;
&lt;p&gt;与 umask，chattr，S*ID 有关，先略过。&lt;/p&gt;
&lt;h3 id=&#34;观察文件类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#观察文件类型&#34;&gt;#&lt;/a&gt; 观察文件类型&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;file&lt;/code&gt;  可以简单的先判断这个文件的格式为何，比如 ASCII text，data 等等。&lt;/p&gt;
&lt;h3 id=&#34;查找指令与文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查找指令与文件&#34;&gt;#&lt;/a&gt; 查找指令与文件&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;which [-a] command&lt;/code&gt;   &lt;code&gt;-a&lt;/code&gt;  显示所有由 PATH 目录中可以找到的指令&lt;br&gt;
 &lt;code&gt;whereis [-bmsu] 文件或目或目录名&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;     : 列出 whereis 会去查询的几个主要目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-b&lt;/code&gt;     : 只找 binary 格式的文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m&lt;/code&gt;     : 只找在说明文件 manual 路径下的文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt;     : 只找 source 来源文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;     : 搜寻不在上述三个项目当中的其他特殊文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;locate [-ir] keyword&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;   ：忽略大小写的差异；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;   ：不输出档名，仅计算找到的文件数量&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;   ：仅输出几行的意思，例如输出五行则是  &lt;code&gt;-l 5&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-S&lt;/code&gt;   ：输出 locate 所使用的数据库文件的相关信息，包括该数据库纪录的文件 / 目录数量等&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;   ：后面可接正规表示法的显示方式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;find [PATH] [option] [action]&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;与时间有关的选项：共有 -atime, -ctime 与 -mtime ，以 -mtime 说明&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-mtime  n&lt;/code&gt;  ：n 为数字，意义为在 n 天之前的 &amp;quot;一天之内&amp;quot; 被更动过内容的文件；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-mtime +n&lt;/code&gt;  ：列出在 n 天之前 (不含 n 天本身) 被更动过内容的文件档名；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-mtime -n&lt;/code&gt;  ：列出在 n 天之内 (含 n 天本身) 被更动过内容的文件档名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-newer file&lt;/code&gt;  ：file 为一个存在的文件，列出比 file 还要新的文件档名&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;与使用者或组名有关的参数：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-uid n&lt;/code&gt;  ：n 为数字，这个数字是用户的账号 ID，亦即 UID ，这个 UID 是记录在  &lt;code&gt;/etc/passwd&lt;/code&gt;  里面与账号名称对应的数字。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-gid n&lt;/code&gt;  ：n 为数字，这个数字是组名的 ID，亦即 GID，这个 GID 记录在  &lt;code&gt;/etc/group&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-user name&lt;/code&gt;  ：name 为使用者账号名称喔！例如 sinki  ；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-group name&lt;/code&gt; ：name 为组名喔，例如 users ；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-nouser&lt;/code&gt;     ：寻找文件的拥有者不存在  &lt;code&gt;/etc/passwd&lt;/code&gt;  的文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-nogroup&lt;/code&gt;    ：寻找文件的拥有群组不存在于  &lt;code&gt;/etc/group&lt;/code&gt;  的文件。当自行安装软件时，很可能该软件的属性当中并没有文件拥有者，在这个时候，就可以使用  &lt;code&gt;-nouser &lt;/code&gt; 与  &lt;code&gt;-nogroup&lt;/code&gt;  搜寻。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;其他&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-name filename&lt;/code&gt; ：搜寻文件名为 filename 的文件，可以使用通配符 *；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-size [+-]SIZE&lt;/code&gt; ：搜寻比 SIZE 还要大 (+) 或小 (-) 的文件。这个 SIZE 的规格有： c: 代表 byte， k: 代表 1024bytes。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-type TYPE&lt;/code&gt;     ：搜寻文件的类型为 TYPE 的，类型主要有：一般正规文件 (f), 装置文件 (b, c), 目录 (d), 连结档 (l), socket (s), 及 FIFO § 等属性。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-exec command&lt;/code&gt;  ：command 为其他指令， &lt;code&gt;-exec&lt;/code&gt;  后面可再接额外的指令来处理搜寻到的结果，比如 &lt;code&gt;ls -l&lt;/code&gt; ，但不能用别名 &lt;code&gt;ll&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;下一篇：&lt;a href=&#34;/2021/05/25/linuxA0525/&#34;&gt;磁盘与文件系统管理&lt;/a&gt;&lt;br&gt;
上一篇：&lt;a href=&#34;/2020/12/24/linux1224/&#34;&gt;文件权限与目录配置&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="Linux" />
        <updated>2021-03-22T07:26:07.000Z</updated>
    </entry>
    <entry>
        <id>https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/sunway01/</id>
        <title>超算远程访问</title>
        <link rel="alternate" href="https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/sunway01/"/>
        <content type="html">&lt;p&gt;#登录账号成功&lt;br&gt;
 #正在建立远程安全连接…&lt;br&gt;
# 连接成功&lt;br&gt;
 #访问服务器…&lt;br&gt;
# 访问成功&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;毕设要正式开始了，昨天问师姐要了账户信息，很快就成功访问了机器……&lt;/p&gt;
&lt;h2 id=&#34;访问步骤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#访问步骤&#34;&gt;#&lt;/a&gt; 访问步骤&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;访问&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5uc2Njd3guY24=&#34;&gt;超算中心官网&lt;/span&gt;，选择教育网登录。&lt;/li&gt;
&lt;li&gt;下载安装 Hillstone secure connect，并按&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL25zY2N3eC5jbjoxMzM3L3VwbG9hZHMvMGI2MDhkMGI4ZjlmNGI0NTljZjQzYTI5ZDY3MTU1YjIucGRm&#34;&gt;手册&lt;/span&gt;登录。&lt;/li&gt;
&lt;li&gt;连接成功后，使用集群内部账户进行登录。这里我使用的是 Xshell 5，SSH 隧道启用 X11 转移，选择 X DISPLAY。&lt;/li&gt;
&lt;li&gt;登入成功。&lt;/li&gt;
&lt;/ol&gt;
&lt;img style=&#34;display: inline-block; width: 70%; max-width: 70%; height: auto;&#34; data-src=&#34;connect.png&#34; /&gt;
&lt;h2 id=&#34;信息查看与图形化界面&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#信息查看与图形化界面&#34;&gt;#&lt;/a&gt; 信息查看与图形化界面&lt;/h2&gt;
&lt;p&gt;执行命令 &lt;code&gt;sunway --help&lt;/code&gt;  可以查看帮助，执行 &lt;code&gt;sunway hardware&lt;/code&gt;  可以查看超算硬件信息。（Sunway 就是神威吧&lt;br&gt;
&lt;img style=&#34;display: inline-block; width: 70%; max-width: 70%; height: auto;&#34; data-src=&#34;connect2.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;查看了下系统信息，登入服务器是 Linux Redhat，已启用 SSH 的 X 转发。&lt;/p&gt;
&lt;p&gt;安装 Xming，在快捷方式中配置目标 &lt;code&gt;D:\Softwares\Messager\Xming\Xming.exe -multiwindow&lt;/code&gt; ，以多窗口模式启动。&lt;br&gt;
执行 &lt;code&gt;nautilus&lt;/code&gt; ，在家目录中打开资源管理器。&lt;br&gt;
&lt;img style=&#34;display: inline-block; width: 70%; max-width: 70%; height: auto;&#34; data-src=&#34;桌面.png&#34; /&gt;&lt;br&gt;
执行 &lt;code&gt;nautilus --no-desktop .&lt;/code&gt; ，在当前工作路径下打开资源管理器，且不显示桌面。&lt;/p&gt;
&lt;h2 id=&#34;w゚д゚w&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#w゚д゚w&#34;&gt;#&lt;/a&gt; w(ﾟДﾟ)w&lt;/h2&gt;
&lt;p&gt;登入成功后官网接入地图上就增加了我所在的地理位置欸欸欸！！&lt;br&gt;
一个参数化的模式结果快要有 1T 了！！！&lt;br&gt;
这真的是我可以访问的资源嘛嘛嘛！！&lt;br&gt;
作为一个小白啥命令都不敢用万一把数据搞坏了怎么办！！&lt;br&gt;
激动中，可不可以在全球最快的超算&lt;sub&gt;之一&lt;/sub&gt;上玩玩游戏什么的（打死&lt;/p&gt;
</content>
        <category term="Linux" />
        <updated>2021-03-16T03:01:16.000Z</updated>
    </entry>
    <entry>
        <id>https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linux1224/</id>
        <title>Linux学习 笔记#04 文件权限与目录配置</title>
        <link rel="alternate" href="https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linux1224/"/>
        <content type="html">&lt;p&gt;&lt;code&gt;chmod 000 filename&lt;/code&gt;  &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;ch5-linux的文件权限与目录配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ch5-linux的文件权限与目录配置&#34;&gt;#&lt;/a&gt; Ch5 Linux 的文件权限与目录配置&lt;/h2&gt;
&lt;h3 id=&#34;使用者与群组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用者与群组&#34;&gt;#&lt;/a&gt; 使用者与群组&lt;/h3&gt;
&lt;p&gt;Linux 一般将文件可存取的身份分为三个类别，分别是 owner/group/others，且三种身份各有&lt;br&gt;
 read/write/execute 等权限。而 root 可以访问所有文件。&lt;/p&gt;
&lt;h3 id=&#34;文件权限&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件权限&#34;&gt;#&lt;/a&gt; 文件权限&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ls -al&lt;/code&gt; ：查看当前目录下文件（夹）的详细的权限与属性 （包含隐藏文件）&lt;/p&gt;
&lt;img style=&#34;display: inline-block; width: 70%; max-width: 70%; height: auto;&#34; data-src=&#34;1.png&#34; /&gt;
&lt;p&gt;字段含义：&lt;/p&gt;
&lt;img style=&#34;display: inline-block; width: 70%; max-width: 70%; height: auto;&#34; data-src=&#34;2.png&#34; /&gt;
&lt;img style=&#34;display: inline-block; width: 40%; max-width: 70%; height: auto;&#34; data-src=&#34;3.png&#34; /&gt;
&lt;p&gt;档案类型为 &lt;code&gt;d&lt;/code&gt;  时表示文件夹， &lt;code&gt;-&lt;/code&gt;  表示文件， &lt;code&gt;l&lt;/code&gt;  表示为连结档（link file）， &lt;code&gt;b&lt;/code&gt;  表示装置文件里面的可供储存的接口设备（可随机存取装置）， &lt;code&gt;c&lt;/code&gt;  表示装置文件里面的串行端口设备，例如键盘、鼠标（一次性读取装置）。&lt;/p&gt;
&lt;p&gt;对文件而言：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可读 (r) 代表读取文件内容&lt;/li&gt;
&lt;li&gt;可执行 (x) 表示是否具有执行的能力&lt;/li&gt;
&lt;li&gt;可写 (w) 权限代表具有写入 / 编辑 / 新增 / 修改文件的内容的权限，但并不具备有删除该文件本身的权限&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对目录而言：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可读 (r) 代表读取目录结构列表，可以 &lt;code&gt;ls&lt;/code&gt;  查询该目录下的文件名数据&lt;/li&gt;
&lt;li&gt;可执行 (x) 表示用户能否进入该目录成为工作目录，即 &lt;code&gt;cd&lt;/code&gt;  进入&lt;/li&gt;
&lt;li&gt;可写 (w) 权限代表具有异动该目录结构列表的权限，即
&lt;ul&gt;
&lt;li&gt;建立新的文件与目录&lt;/li&gt;
&lt;li&gt;删除已经存在的文件与目录 (不论该文件的权限为何！)&lt;/li&gt;
&lt;li&gt;将已存在的文件或目录进行更名&lt;/li&gt;
&lt;li&gt;搬移该目录内的文件、目录位置&lt;br&gt;
开放目录给任何人浏览时，应该至少也要给予 r 及 x 的权限，但 w 权限不可随便给！&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;案例：&lt;br&gt;
假设两个档名，分别是 &lt;code&gt;/dir1/file1&lt;/code&gt;  和 &lt;code&gt;/dir2&lt;/code&gt; 。现在在系统使用 riolu 这个账号，那么这个账号针对  &lt;code&gt;/dir1&lt;/code&gt; ,  &lt;code&gt;/dir1/file1&lt;/code&gt; ,  &lt;code&gt;/dir2&lt;/code&gt;  这三个档名来说，分别需要哪些最小的权限才能达成各项任务？&lt;/p&gt;
&lt;img style=&#34;display: inline-block; width: 90%; max-width: 90%; height: auto;&#34; data-src=&#34;4.png&#34; /&gt;
&lt;p&gt;实际上没有 r 权限时，只要知道目录下的文件名就可以操作！只是，没有 r 的话，使用  &lt;code&gt;tab&lt;/code&gt;  时，他就无法自动帮你补齐档名了！&lt;/p&gt;
&lt;h3 id=&#34;修改权限&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#修改权限&#34;&gt;#&lt;/a&gt; 修改权限&lt;/h3&gt;
&lt;h4 id=&#34;群组-chgrp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#群组-chgrp&#34;&gt;#&lt;/a&gt; 群组  &lt;code&gt;chgrp&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;记得使用 root 权限修改哦。&lt;br&gt;
要被改变的组名必须要在 /etc/group 文件内存在。&lt;br&gt;
用法： &lt;code&gt;chgrp [-R] grpname dir/filename&lt;/code&gt;  。grp 是 group 的缩写， &lt;code&gt;-R&lt;/code&gt;  表示目录下所有文件递归（recursive）修改。&lt;/p&gt;
&lt;h4 id=&#34;拥有者-chown&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#拥有者-chown&#34;&gt;#&lt;/a&gt; 拥有者  &lt;code&gt;chown&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;用法：&lt;br&gt;
 &lt;code&gt;chown [-R] usrname dir/filename&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;chown [-R] usrname:grpname dir/filename&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;chown [-R] usrname.grpname dir/filename&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;chown [-R] .grpname dir/filename&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;权限-chmod&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#权限-chmod&#34;&gt;#&lt;/a&gt; 权限  &lt;code&gt;chmod&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;一种是用数字修改，但我觉得符号改比较人性化～&lt;/p&gt;
&lt;p&gt;用法：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;chmod&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;u g o a(all)&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;+(加入) -(除去) =(设定)&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;r w x&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;文件或目录&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;/table&gt;
&lt;p&gt;如： &lt;code&gt;chmod u=rwx,go+rx .bashrc&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;文件名规则&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件名规则&#34;&gt;#&lt;/a&gt; 文件名规则&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;前面加 &lt;code&gt;.&lt;/code&gt;  是隐藏文件&lt;/li&gt;
&lt;li&gt;权限组开头为 &lt;code&gt;l&lt;/code&gt;  的是链接档，类似于快捷方式&lt;/li&gt;
&lt;li&gt;最好不要含 &lt;code&gt;* ? &amp;gt; &amp;lt; ; &amp;amp; ! [ ] | \ &#39; &amp;quot;  \( \) \&amp;#123; \&amp;#125; -&lt;/code&gt;  ` 等符号&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;目录配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#目录配置&#34;&gt;#&lt;/a&gt; 目录配置&lt;/h3&gt;
&lt;p&gt;一般 Linux 下有这样的目录约定：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;/&lt;/code&gt;   根目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/usr(unix software resource)&lt;/code&gt;  软件放置处&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/var(variable)&lt;/code&gt;  与系统运作过程有关&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/opt&lt;/code&gt;  第三方软件，以前也在 &lt;code&gt;/usr/local&lt;/code&gt;  下&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc&lt;/code&gt;  配置文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lost+found&lt;/code&gt;  并不是回收处，而是当文件系统发生错误时，将一些遗失的片段放置到这个目录下。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;更多的可以去搜 Filesystem Hierarchy Standard (FHS)。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;下一篇：&lt;a href=&#34;/2021/03/22/linuxA0322/&#34;&gt;文件与目录管理&lt;/a&gt;&lt;br&gt;
上一篇：&lt;a href=&#34;/2020/11/12/linux1112/&#34;&gt;登入系统&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="Linux" />
        <updated>2020-12-24T07:07:18.000Z</updated>
    </entry>
    <entry>
        <id>https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/hpc1206/</id>
        <title>高性能计算#04 HPL测试GPU</title>
        <link rel="alternate" href="https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/hpc1206/"/>
        <content type="html">&lt;p&gt;- HPL 测试 MKL+MPICH - &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;环境搭建&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#环境搭建&#34;&gt;#&lt;/a&gt; 环境搭建&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdV9mZW5nX3ppXy9hcnRpY2xlL2RldGFpbHMvMTA3MjMyMjUy&#34;&gt;GPU 驱动&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdV9mZW5nX3ppXy9hcnRpY2xlL2RldGFpbHMvMTA3MjM0Mjcx&#34;&gt;CUDA&lt;/span&gt;&lt;br&gt;
~3. &lt;a href=&#34;/2020/12/04/hpc1204/#%E5%AE%89%E8%A3%85OpenBLAS&#34;&gt;OpenBLAS&lt;/a&gt;~&lt;br&gt;
~4. &lt;a href=&#34;/2020/12/04/hpc1204/#%E5%AE%89%E8%A3%85openMPI&#34;&gt;OpenMPI&lt;/a&gt;~&lt;/li&gt;
&lt;li&gt;编译器：系统自带的 GNU 编译器&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;可惜集群上的 CUDA 是 9.0 的，不支持 MPI-3.0，想着下一个 Intel mpi，结果这玩意不能单独下，要下一个 OneAPI，压缩包和 CUDA 11.0 一样大的要死，浪费我一晚上，几个 T 的盘不给用属实可恶。&lt;/em&gt;&lt;/p&gt;
&lt;h4 id=&#34;mpich2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mpich2&#34;&gt;#&lt;/a&gt; MPICH2&lt;/h4&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;官方下载：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5tcGljaC5vcmcvc3RhdGljL2Rvd25sb2Fkcy8zLjIuMS9tcGljaC0zLjIuMS50YXIuZ3o=&#34;&gt;mpich-3.2.1.tar.gz&lt;/span&gt;，可以用 &lt;code&gt;wget&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;解压，新建文件夹 &lt;code&gt;mpich&lt;/code&gt;  作为安装文件夹&lt;br&gt;
 cd mpich-3.2.1/&lt;br&gt;
./configure --prefix=/home/riolu/HPL/mpich CFLAGS=&amp;quot;-fPIC&amp;quot; CXXFLAGS=&amp;quot;-fPIC&amp;quot; --enable-shared --enable-sharedlibs=gcc --with-cuda=/usr/local/cuda-10.0/ --with-cuda-include=/usr/local/cuda-10.0/include --with-cuda-libpath=/usr/local/cuda-10.0/lib64&lt;br&gt;
 如果不加这些参数会报错：&lt;br&gt;
libmpich.a(allreduce.o): relocation R_X86_64_32 against `.rodata.str1.8’ can not be used when making a shared object; recompile with -fPIC&lt;/li&gt;
&lt;li&gt;接下来&lt;br&gt;
 make clean&lt;br&gt;
make&lt;br&gt;
make install&lt;br&gt;
gedit ~/.bashrc&lt;br&gt;
 在后面加上&lt;br&gt;
 export PATH=/home/riolu/HPL/mpich/bin:&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;M&lt;/mi&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;:&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;PATH
     export MANPATH=/home/riolu/HPL/mpich/man:&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8777699999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;M&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;MANPATH&lt;br&gt;
export LD_LIBRARY_PATH=/home/riolu/HPL/mpich/lib:$LD_LIBRARY_PATH // 不知要不要&lt;br&gt;
保存后&lt;br&gt;
 source ~/.bashrc&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;intel-mkl&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#intel-mkl&#34;&gt;#&lt;/a&gt; Intel MKL&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;下载单独安装包：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3JlZ2lzdHJhdGlvbmNlbnRlci1kb3dubG9hZC5pbnRlbC5jb20vYWtkbG0vaXJjX25hcy90ZWMvMTU4MTYvbF9ta2xfMjAxOS41LjI4MS50Z3o=&#34;&gt;l_mkl_2019.5.281.tgz&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;解压后进入，执行 &lt;code&gt;sh install.sh&lt;/code&gt; ，按提示进行。&lt;/li&gt;
&lt;li&gt;配置 &lt;code&gt;.bashrc&lt;/code&gt; ，添加&lt;br&gt;
# added for intel&lt;br&gt;
export LD_LIBRARY_PATH=/home/riolu/intel/mkl/lib/intel64:$LD_LIBRARY_PATH&lt;br&gt;
 执行 &lt;code&gt;source ~/.bashrc&lt;/code&gt; 。&lt;br&gt;
如果报错找不到共享库的话可能是因为没有加这个路径。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;hpl&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hpl&#34;&gt;#&lt;/a&gt; HPL&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;官方下载网站下载：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubnZpZGlhLmNvbS9jb21wdXRld29ya3MtZGV2ZWxvcGVyLWV4Y2x1c2l2ZS1kb3dubG9hZHM=&#34;&gt;hpl-2.0_FERMI_v15.tgz&lt;/span&gt;&lt;br&gt;
 需要注册一下。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进入解压后的文件夹，修改 Make.CUDA 的参数&lt;br&gt;
 TOPdir = $(HOME)/HPL/hpl-2.0_FERMI_v15 #hpl 所在的路径目录&lt;br&gt;
…&lt;br&gt;
MPdir  = &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mi&gt;M&lt;/mi&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;M&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;(HOME)/HPL/mpich
     MPinc = -I&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;M&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;M&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.76666em;vertical-align:-0.08333em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07847em;&#34;&gt;I&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(MPdir)/include&lt;br&gt;
MPlib = -L&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;M&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;(MPdir)/lib
     ..............................................................    
     LAdir   =&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;M&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(HOME)/intel/mkl/lib/intel64&lt;br&gt;
LAMP5dir    = &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mi&gt;M&lt;/mi&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;/msub&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;/msub&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mn&gt;64&lt;/mn&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;(HOME)/intel/compilers_and_libraries/linux/lib/intel64
 	LAinc        = -I&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;M&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.151392em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;a&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.33610799999999996em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.76666em;vertical-align:-0.08333em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07847em;&#34;&gt;I&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(HOME)/intel/mkl/include&lt;br&gt;
LAlib        = -L &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;10.0&lt;/mn&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mn&gt;64&lt;/mn&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;(TOPdir)/src/cuda  -ldgemm -L/usr/local/cuda-10.0/lib64 -lcuda -lcudart -lcublas -L&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.77777em;vertical-align:-0.08333em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.77777em;vertical-align:-0.08333em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.77777em;vertical-align:-0.08333em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(LAdir) -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -liomp5&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; HPL_INCLUDES = -I$(INCdir) -I$(INCdir)/$(ARCH) $(LAinc) $(MPinc) -I/usr/local/cuda-10.0/include
 ..............................................................
 CC   =$(MPdir)/bin/mpicc

 ..............................................................
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改 &lt;code&gt;src/cuda/Makefile&lt;/code&gt;  为里的 &lt;code&gt;cuda&lt;/code&gt;  路径为 &lt;code&gt;cuda-10.0&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编译&lt;br&gt;
 make arch=CUDA clean_arch_all&lt;br&gt;
make arch=CUDA&lt;br&gt;
 若报错 &lt;code&gt;/usr/bin/ld: 找不到 -liomp5&lt;/code&gt;  则可以做一个软链接，执行&lt;br&gt;
 ln -s /home/intel/lib/intel64/libiomp5.so/home/intel/mkl/lib/intel64/libiomp5.so&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/bin/CUDA&lt;/code&gt;  目录下生成两个文件：HPL.dat 和 xhpl。在该目录新建一个 &lt;code&gt;test.sh&lt;/code&gt;  文件，内容为&lt;br&gt;
 export HPL_DIR=/home/riolu/HPL/hpl-2.0_FERMI_v15&lt;br&gt;
export MKL_NUM_THREADS=6&lt;br&gt;
export OMP_NUM_THREADS=2&lt;br&gt;
export MKL_DYNAMIC=FALSE&lt;br&gt;
export CUDA_DGEMM_SPLIT=0.954&lt;br&gt;
export CUDA_DTRSM_SPLIT=0.946&lt;br&gt;
export LD_LIBRARY_PATH=&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;mi&gt;D&lt;/mi&gt;&lt;/msub&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mo&gt;:&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;HPL_DIR/src/cuda:&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.32833099999999993em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.02778em;&#34;&gt;D&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07847em;&#34;&gt;I&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;LD_LIBRARY_PATH&lt;br&gt;
$HPL_DIR/bin/CUDA/xhpl&lt;br&gt;
 其中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MKL_NUM_THREADS：每个进程使用的 CPU 核的数量&lt;/li&gt;
&lt;li&gt;OMP_NUM_THREADS：每个 GPU 使用的 CPU 核的数量&lt;br&gt;
例如：2 个 GPU 和 8 个 CPU，则 OMP_NUM_THREADS=4&lt;/li&gt;
&lt;li&gt;CUDA_DGEMM_SPLIT：发送给 GPU 的 DGEMM 占总的百分比，大致等于 (GPU GFLOPS)/(GPU GFLOPS + CPU GFLOPS)，或者 350  / ( 350 + 每个 GPU 的 CPU 数量 * 4 * CPU 基本频率 )&lt;/li&gt;
&lt;li&gt;CUDA_DTRSM_SPLIT：发送给 GPU 的 DTRSM 占总的百分比，通常比 DGEMM 低 0.05-0.10&lt;/li&gt;
&lt;li&gt;HPL_DIR：文件的路径&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;单节点执行： &lt;code&gt;./run_linpack.sh&lt;/code&gt; &lt;br&gt;
 多节点执行（没有测试过，仅供参考）： &lt;code&gt;mpiexec.hydra -np 7 ./test.sh&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;初步结果&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#初步结果&#34;&gt;#&lt;/a&gt; 初步结果&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;================================================================================
HPLinpack 2.0  --  High-Performance Linpack benchmark  --   September 10, 2008
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N      :   25000
NB     :     768
PMAP   : Row-major process mapping
P      :       1
Q      :       1
PFACT  :    Left
NBMIN  :       2
NDIV   :       2
RFACT  :    Left
BCAST  :   1ring
DEPTH  :       1
SWAP   : Spread-roll (long)
L1     : no-transposed form
U      : no-transposed form
EQUIL  : yes
ALIGN  : 8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
	  ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                16.0

================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WR10L2L2       25000   768     1     1              10.58              9.843e+02
--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=        0.0044272 ...... PASSED
================================================================================

Finished      1 tests with the following results:
			  1 tests completed and passed residual checks,
			  0 tests completed and failed residual checks,
			  0 tests skipped because of illegal input values.
--------------------------------------------------------------------------------

End of Tests.
================================================================================
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;速度是 CPU 的 3 倍……&lt;/p&gt;
&lt;h3 id=&#34;gpu信息获取&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#gpu信息获取&#34;&gt;#&lt;/a&gt; GPU 信息获取&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;查看 nvidia GPU 型号&lt;br&gt;
 &lt;code&gt;lspci | grep -i nvidia&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看 Nvidia 显卡信息及使用情况&lt;br&gt;
 &lt;code&gt;nvidia-smi&lt;/code&gt; &lt;br&gt;
Wed Dec  9 02:23:00 2020&lt;br&gt;
±----------------------------------------------------------------------------+&lt;br&gt;
| NVIDIA-SMI 410.129      Driver Version: 410.129      CUDA Version: 10.0     |&lt;br&gt;
|-------------------------------±---------------------±---------------------+&lt;br&gt;
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |&lt;br&gt;
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |&lt;br&gt;
|=&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;+&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;+&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;==============|&lt;br&gt;
|   0  Tesla P100-PCIE…  Off  | 00000000:05:00.0 Off |                    0 |&lt;br&gt;
| N/A   34C    P0    36W / 250W |   2391MiB / 16280MiB |      0%      Default |&lt;br&gt;
±------------------------------±---------------------±---------------------+&lt;br&gt;
|   1  Tesla P100-PCIE…  Off  | 00000000:08:00.0 Off |                    0 |&lt;br&gt;
| N/A   40C    P0    40W / 250W |   2391MiB / 16280MiB |      0%      Default |&lt;br&gt;
±------------------------------±---------------------±---------------------+&lt;br&gt;
|   2  Tesla P100-PCIE…  Off  | 00000000:09:00.0 Off |                    0 |&lt;br&gt;
| N/A   46C    P0   194W / 250W |   2391MiB / 16280MiB |    100%      Default |&lt;br&gt;
±------------------------------±---------------------±---------------------+&lt;br&gt;
|   3  Tesla P100-PCIE…  Off  | 00000000:84:00.0 Off |                    0 |&lt;br&gt;
| N/A   40C    P0    39W / 250W |   2391MiB / 16280MiB |      0%      Default |&lt;br&gt;
±------------------------------±---------------------±---------------------+&lt;br&gt;
|   4  Tesla P100-PCIE…  Off  | 00000000:88:00.0 Off |                    0 |&lt;br&gt;
| N/A   36C    P0    36W / 250W |   2391MiB / 16280MiB |    100%      Default |&lt;br&gt;
±------------------------------±---------------------±---------------------+&lt;br&gt;
|   5  Tesla P100-PCIE…  Off  | 00000000:89:00.0 Off |                    0 |&lt;br&gt;
| N/A   42C    P0   185W / 250W |   2391MiB / 16280MiB |    100%      Default |&lt;br&gt;
±------------------------------±---------------------±---------------------+&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; +-----------------------------------------------------------------------------+
 | Processes:                                                       GPU Memory |
 |  GPU       PID   Type   Process name                             Usage      |
 |=============================================================================|
 |    0      3451      C   ...wei/HPL/hpl-2.0_FERMI_v15/bin/CUDA/xhpl  2363MiB |
 |    1      3455      C   ...wei/HPL/hpl-2.0_FERMI_v15/bin/CUDA/xhpl  2363MiB |
 |    2      3452      C   ...wei/HPL/hpl-2.0_FERMI_v15/bin/CUDA/xhpl  2363MiB |
 |    3      3456      C   ...wei/HPL/hpl-2.0_FERMI_v15/bin/CUDA/xhpl  2363MiB |
 |    4      3453      C   ...wei/HPL/hpl-2.0_FERMI_v15/bin/CUDA/xhpl  2363MiB |
 |    5      3457      C   ...wei/HPL/hpl-2.0_FERMI_v15/bin/CUDA/xhpl  2363MiB |
 +-----------------------------------------------------------------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;表头释义：&lt;br&gt;
+ Fan：显示风扇转速，数值在 0 到 100% 之间，是计算机的期望转速，如果不是通过风扇冷却或者风扇坏了，显示出来就是 N/A；&lt;br&gt;
+ Temp：显卡内部的温度，单位是摄氏度；&lt;br&gt;
+ Perf：表征性能状态，从 P0 到 P12，P0 表示最大性能，P12 表示状态最小性能；&lt;br&gt;
+ Pwr：能耗表示；&lt;br&gt;
+ Bus-Id：涉及 GPU 总线的相关信息；&lt;br&gt;
+ Disp.A：是 Display Active 的意思，表示 GPU 的显示是否初始化；&lt;br&gt;
+ Memory Usage：显存的使用率；&lt;br&gt;
+ Volatile GPU-Util：浮动的 GPU 利用率；&lt;br&gt;
+ Compute M：计算模式；&lt;br&gt;
+ Processes 显示每块 GPU 上每个进程所使用的显存情况。&lt;br&gt;
3. 周期性输出显卡的使用情况&lt;br&gt;
 &lt;code&gt;watch -n 10 nvidia-smi&lt;/code&gt; &lt;br&gt;
 命令行参数 - n 后边跟的是执行命令的周期，以 s 为单位。&lt;br&gt;
3. 查看 GPU 名称&lt;br&gt;
 &lt;code&gt;nvidia-smi -L&lt;/code&gt; &lt;br&gt;
GPU 0: Tesla P100-PCIE-16GB (UUID: GPU-1f613914-b422-06ad-cd7d-d2649435f480)&lt;br&gt;
GPU 1: Tesla P100-PCIE-16GB (UUID: GPU-d8f026e7-9714-39f6-af4a-f8328cbdb3c9)&lt;br&gt;
GPU 2: Tesla P100-PCIE-16GB (UUID: GPU-fb22db8b-9de3-691e-53da-d34aec4b6abb)&lt;br&gt;
GPU 3: Tesla P100-PCIE-16GB (UUID: GPU-ddf0cbc8-3c92-0b3d-5496-b65361fe18a0)&lt;br&gt;
GPU 4: Tesla P100-PCIE-16GB (UUID: GPU-7a94ce44-3e66-d05d-3d58-d625930a2aad)&lt;br&gt;
GPU 5: Tesla P100-PCIE-16GB (UUID: GPU-16423caf-0037-6742-2977-ba03f4937b9b)&lt;br&gt;
（可惜院里这么好的 GPU 资源没人用&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;修改日期：2020 年 12 月 7 日&lt;/em&gt;&lt;/p&gt;
</content>
        <category term="Linux" />
        <updated>2020-12-06T08:44:18.000Z</updated>
    </entry>
    <entry>
        <id>https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linux1206/</id>
        <title>Linux学习 笔记#03 指令集</title>
        <link rel="alternate" href="https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linux1206/"/>
        <content type="html">&lt;p&gt;单开一篇整理常用指令。 &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;查找&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查找&#34;&gt;#&lt;/a&gt; 查找&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;grep -rl &amp;quot;string&amp;quot; /path&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;-r&lt;/code&gt;  为递归查找， &lt;code&gt;-l&lt;/code&gt;  为只显示文件名加快速度。&lt;/p&gt;
&lt;h2 id=&#34;文件操作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件操作&#34;&gt;#&lt;/a&gt; 文件操作&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建文件&lt;br&gt;
 &lt;code&gt;touch new.txt&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改文件名 / 移动文件&lt;br&gt;
 &lt;code&gt;mv old.txt new.txt&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;删除文件（夹）&lt;br&gt;
 &lt;code&gt;rm filename&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;rm -r dirname&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改权限&lt;br&gt;
 &lt;code&gt;chmod [-R] 777|700 filename|dirname&lt;/code&gt; &lt;br&gt;
 其中加 &lt;code&gt;-R&lt;/code&gt;  是递归修改，777 是完全权限。参考：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZseV93dC9hcnRpY2xlL2RldGFpbHMvODI5ODY1MDQ=&#34;&gt;某博客&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;节点间转移文件&lt;br&gt;
 &lt;code&gt;scp filename usrname@copytonodename:/home/usrname&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解压&lt;br&gt;
 &lt;code&gt;tar -zxvf file.tar.gz -C dirname&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;压缩&lt;br&gt;
 &lt;code&gt;tar -zcvf file.tar.gz file&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;查看信息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看信息&#34;&gt;#&lt;/a&gt; 查看信息&lt;/h2&gt;
&lt;h3 id=&#34;空间&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#空间&#34;&gt;#&lt;/a&gt; 空间&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;硬盘空间&lt;br&gt;
 &lt;code&gt;df -hl&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当前文件夹下各个文件大小（屏蔽报错信息）&lt;br&gt;
 &lt;code&gt;du -h --max-depth=1 2&amp;gt;/dev/null&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;内存&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#内存&#34;&gt;#&lt;/a&gt; 内存&lt;/h3&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;内存&lt;br&gt;
 &lt;code&gt;cat /proc/meminfo&lt;/code&gt; &lt;br&gt;
 或&lt;br&gt;
 &lt;code&gt;free -h&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看当前进程&lt;br&gt;
 &lt;code&gt;top&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;1&lt;/code&gt; ： 查看各逻辑 cpu 情况。&lt;br&gt;
 &lt;code&gt;F&lt;/code&gt; - &lt;code&gt;方向键选择P=Last Used Cpu&lt;/code&gt; - &lt;code&gt;空格&lt;/code&gt; ：显示进程在哪个 CPU 上运行。&lt;br&gt;
 &lt;code&gt;q&lt;/code&gt; ： 退出。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;系统信息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#系统信息&#34;&gt;#&lt;/a&gt; 系统信息&lt;/h3&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;操作系统发行版信息&lt;br&gt;
 &lt;code&gt;cat /etc/issue&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;网卡信息&lt;br&gt;
 &lt;code&gt;dmesg | grep -i eth&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看节点 / 主机名称&lt;br&gt;
 &lt;code&gt;cat /etc/hosts&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;cpu&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cpu&#34;&gt;#&lt;/a&gt; CPU&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;逻辑 CPU 个数与 CPU 型号&lt;br&gt;
 &lt;code&gt;cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;物理 CPU 个数&lt;br&gt;
 &lt;code&gt;grep &amp;quot;physical id&amp;quot; /proc/cpuinfo|sort -u&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每个物理 CPU 内核个数&lt;br&gt;
 &lt;code&gt;grep &amp;quot;cpu cores&amp;quot; /proc/cpuinfo|uniq&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每个物理 CPU 上逻辑 CPU 个数&lt;br&gt;
 &lt;code&gt;grep &amp;quot;siblings&amp;quot; /proc/cpuinfo|uniq&lt;/code&gt; &lt;br&gt;
 逻辑 CPU 个数是物理个数的两倍，说明开启了超线程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每个逻辑 CPU 对应的物理位置&lt;br&gt;
 &lt;code&gt;cat /proc/cpuinfo | grep -E &amp;quot;physical id|processor&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;编译&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#编译&#34;&gt;#&lt;/a&gt; 编译&lt;/h2&gt;
&lt;h3 id=&#34;使用-openmpi-的-mpicc-编译mpi程序并运行&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用-openmpi-的-mpicc-编译mpi程序并运行&#34;&gt;#&lt;/a&gt; 使用 OpenMPI 的 mpicc 编译 MPI 程序并运行&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;mpicc -show   //查看指令封装内容
mpicc -o hello hello_mpi.c
ldd hello     //查看链接库
mpirun -np 8 ./hello
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置运行节点：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mpirun -np 16 -machinefile nodelist ./cpi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;或&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mpirun -p4pg pgfile ./cpi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;超线程（不建议使用）：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mpirun -oversubscribe -np 32 -machinefile nodelist ./cpi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;nodelist 写法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;node0 slots=2 max_slots=20
node1 slots=2 max_slots=20
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;参考：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cub3Blbi1tcGkub3JnL2ZhcS8/Y2F0ZWdvcnk9cnVubmluZyNtcGlydW4tc2NoZWR1bGluZw==&#34;&gt;How do I control how my processes are scheduled across nodes&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;创建日期：2020 年 12 月 6 日&lt;/em&gt;&lt;/p&gt;
</content>
        <category term="Linux" />
        <updated>2020-12-06T06:27:18.000Z</updated>
    </entry>
    <entry>
        <id>https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/hpc1205/</id>
        <title>高性能计算#03 HPCG搭建</title>
        <link rel="alternate" href="https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/hpc1205/"/>
        <content type="html">&lt;p&gt;- HPCG 测试 OPENBLAS+OPENMPI - &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;环境搭建&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#环境搭建&#34;&gt;#&lt;/a&gt; 环境搭建&lt;/h2&gt;
&lt;p&gt;前几篇中已经配置好了&lt;a href=&#34;/2020/12/02/hpc1202/#%E5%AE%89%E8%A3%85MPICH&#34;&gt; c++ 编译器&lt;/a&gt;，以及&lt;a href=&#34;/2020/12/04/hpc1204/#%E5%AE%89%E8%A3%85openMPI&#34;&gt; openmpi 并行环境&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;#TODO 若是在 Intel 处理器上建议用 Intel 自家的编译器、mpi、hpcg 执行文件……&lt;/p&gt;
&lt;h2 id=&#34;hpcg安装与编译&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hpcg安装与编译&#34;&gt;#&lt;/a&gt; HPCG 安装与编译&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;官方下载网站下载：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hwY2ctYmVuY2htYXJrL2hwY2c=&#34;&gt;hpcg-master&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进入 &lt;code&gt;setup&lt;/code&gt;  文件夹下，修改 &lt;code&gt;Make.Linux_MPI&lt;/code&gt; ，另存为 &lt;code&gt;Make.Linux&lt;/code&gt; 。&lt;br&gt;
MPdir        = &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mi&gt;M&lt;/mi&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;M&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;(HOME)/HPL/openmpi
     MPinc        = -I&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;M&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;M&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.76666em;vertical-align:-0.08333em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07847em;&#34;&gt;I&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(MPdir)/include&lt;br&gt;
MPlib        = -L$(MPdir)/lib&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; CXX          = $(MPdir)/bin/mpicxx
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置安装环境：到安装目录下， &lt;code&gt;mkdir hpcg&lt;/code&gt; ,  &lt;code&gt;cd hpcg&lt;/code&gt; ,  &lt;code&gt;~/HPL/hpcg-master/configure Linux&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装测试： &lt;code&gt;make&lt;/code&gt; ， &lt;code&gt;cd bin&lt;/code&gt; ， &lt;code&gt;mpirun -np 16 ./xhpcg&lt;/code&gt; 。&lt;br&gt;
 &lt;code&gt;hpcg.dat&lt;/code&gt;  很简单，第三行是执行的问题的规模，第四行是执行的时间（秒）。&lt;br&gt;
HPCG 测试很快（整机仅需几分钟），测试时需要不断调节 n 值，以获得一个较好的测试结果。&lt;br&gt;
n 值不能设置太小，否则测试完全在缓存中进行，测试需要保证内存占用 &amp;gt; 25%。&lt;br&gt;
官方规定运行时间必须要 1800s 才能得到一个正式的结果。但 t 较小时得到的结果相差不大。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;测试结束后在 bin 文件夹中得到一个 HPCG-Benchmark 文件，这个文件详细记录了运行结果，运行的问题规模占用内存的量，以及各个主要的函数所占运行时间。&lt;/p&gt;
&lt;p&gt;Ns = 256 256 128&lt;br&gt;
t = 1800&lt;/p&gt;
&lt;p&gt;Benchmark Time Summary::Total=1890.2&lt;br&gt;
Final Summary=&lt;br&gt;
Final Summary::HPCG result is VALID with a GFLOP/s rating of=8.03429&lt;br&gt;
Final Summary::HPCG 2.4 rating for historical reasons is=8.61255&lt;br&gt;
Final Summary::Reference version of ComputeDotProduct used=Performance results are most likely suboptimal&lt;br&gt;
Final Summary::Reference version of ComputeSPMV used=Performance results are most likely suboptimal&lt;br&gt;
Final Summary::Reference version of ComputeMG used=Performance results are most likely suboptimal&lt;br&gt;
Final Summary::Reference version of ComputeWAXPBY used=Performance results are most likely suboptimal&lt;br&gt;
Final Summary::Please upload results from the YAML file contents to=http://hpcg-benchmark.org&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;Ns = 256 256 128
t = 60

Benchmark Time Summary::Total=144.725
Final Summary=
Final Summary::HPCG result is VALID with a GFLOP/s rating of=8.01359
Final Summary::HPCG 2.4 rating for historical reasons is=8.65271
Final Summary::Reference version of ComputeDotProduct used=Performance results are most likely suboptimal
Final Summary::Reference version of ComputeSPMV used=Performance results are most likely suboptimal
Final Summary::Reference version of ComputeMG used=Performance results are most likely suboptimal
Final Summary::Reference version of ComputeWAXPBY used=Performance results are most likely suboptimal
Final Summary::Results are valid but execution time (sec) is=144.725
Final Summary::Official results execution time (sec) must be at least=1800
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;系统信息获取&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#系统信息获取&#34;&gt;#&lt;/a&gt; 系统信息获取&lt;/h2&gt;
&lt;h3 id=&#34;cpu&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cpu&#34;&gt;#&lt;/a&gt; CPU&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;逻辑 CPU 个数与 CPU 型号&lt;br&gt;
 &lt;code&gt;cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c&lt;/code&gt; &lt;br&gt;
32  Intel® Xeon® CPU E5-2620 v4 @ 2.10GHz&lt;br&gt;
 网上查到 TDP 为 85W，睿频 3.0 GHz。&lt;/li&gt;
&lt;li&gt;物理 CPU 个数&lt;br&gt;
 &lt;code&gt;grep &amp;quot;physical id&amp;quot; /proc/cpuinfo|sort -u&lt;/code&gt; &lt;br&gt;
physical id     : 0&lt;br&gt;
physical id     : 1&lt;/li&gt;
&lt;li&gt;每个物理 CPU 内核个数&lt;br&gt;
 &lt;code&gt;grep &amp;quot;cpu cores&amp;quot; /proc/cpuinfo|uniq&lt;/code&gt; &lt;br&gt;
cpu cores       : 8&lt;/li&gt;
&lt;li&gt;每个物理 CPU 上逻辑 CPU 个数&lt;br&gt;
 &lt;code&gt;grep &amp;quot;siblings&amp;quot; /proc/cpuinfo|uniq&lt;/code&gt; &lt;br&gt;
siblings        : 16&lt;br&gt;
 逻辑 CPU 个数是物理个数的两倍，说明开启了超线程。&lt;/li&gt;
&lt;li&gt;每个逻辑 CPU 对应的物理位置&lt;br&gt;
 &lt;code&gt;cat /proc/cpuinfo | grep -E &amp;quot;physical id|processor&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;linux&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux&#34;&gt;#&lt;/a&gt; Linux&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;操作系统信息&lt;br&gt;
 &lt;code&gt;uname -a&lt;/code&gt; &lt;br&gt;
Linux amax 4.2.0-42-generic #49~14.04.1-Ubuntu SMP Wed Jun 29 20:22:11 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;操作系统发行版信息&lt;br&gt;
 &lt;code&gt;cat /etc/issue&lt;/code&gt; &lt;br&gt;
Ubuntu 14.04.6 LTS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;内存&lt;br&gt;
 &lt;code&gt;cat /proc/meminfo&lt;/code&gt; &lt;br&gt;
 或&lt;br&gt;
 &lt;code&gt;free -h&lt;/code&gt; &lt;br&gt;
 集群共有 251.8G 内存，猜测是 64G×4。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;内存设备&lt;br&gt;
 &lt;code&gt;dmidecode |grep -A16 &amp;quot;Memory Device$&amp;quot;&lt;/code&gt; &lt;br&gt;
 或&lt;br&gt;
 &lt;code&gt;dmidecode -t memory&lt;/code&gt; &lt;br&gt;
 无权限……&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;硬盘空间&lt;br&gt;
 &lt;code&gt;df -hl&lt;/code&gt; &lt;br&gt;
Filesystem      Size  Used Avail Use% Mounted on&lt;br&gt;
udev            126G   12K  126G   1% /dev&lt;br&gt;
tmpfs            26G  2.1M   26G   1% /run&lt;br&gt;
/dev/sda6       188G   37G  142G  21% /&lt;br&gt;
none            4.0K     0  4.0K   0% /sys/fs/cgroup&lt;br&gt;
none            5.0M     0  5.0M   0% /run/lock&lt;br&gt;
none            126G  1.3M  126G   1% /run/shm&lt;br&gt;
none            100M  188K  100M   1% /run/user&lt;br&gt;
/dev/sda1       453M   73M  353M  17% /boot&lt;br&gt;
/dev/sda7       274G  258G  1.8G 100% /home&lt;br&gt;
/dev/sdc1       1.8T  167G  1.6T  10% /data1&lt;br&gt;
/dev/sdb1       1.8T   33G  1.7T   2% /data0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;硬盘设备&lt;br&gt;
 &lt;code&gt;fdisk -l&lt;/code&gt; &lt;br&gt;
 无信息？需要管理员？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;网卡信息&lt;br&gt;
 &lt;code&gt;dmesg | grep -i eth&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设备接口信息&lt;br&gt;
 &lt;code&gt;lspci&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;-v&lt;/code&gt;     ：显示更多的 PCI 接口装置的详细信息&lt;br&gt;
 &lt;code&gt;-vv&lt;/code&gt;     ：比 -v 还要更详细的信息&lt;br&gt;
 &lt;code&gt;-n&lt;/code&gt;      ：直接观察 PCI 的 ID 而不是厂商名称&lt;br&gt;
 &lt;code&gt;-s 00:01.0&lt;/code&gt;  ：查看地址 00:01.0 的信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看节点 / 主机名称&lt;br&gt;
 &lt;code&gt;cat /etc/hosts&lt;/code&gt; &lt;br&gt;
127.0.0.1       localhost&lt;br&gt;
127.0.1.1       amax&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; # The following lines are desirable for IPv6 capable hosts
 ::1     ip6-localhost ip6-loopback
 fe00::0 ip6-localnet
 ff00::0 ip6-mcastprefix
 ff02::1 ip6-allnodes
 ff02::2 ip6-allrouters
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;经测试集群应该是在 amax 节点下布置了两块 Intel Xeon CPU，localhost 指向 amax。&lt;br&gt;
即单节点双路 8 核？&lt;br&gt;
@amax:~/HPL&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mn&gt;16.&lt;/mn&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mn&gt;5&lt;/mn&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mn&gt;16&lt;/mn&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mn&gt;7&lt;/mn&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mn&gt;16&lt;/mn&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mn&gt;8&lt;/mn&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mn&gt;16&lt;/mn&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mn&gt;9&lt;/mn&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mn&gt;16&lt;/mn&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mn&gt;10&lt;/mn&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mn&gt;16&lt;/mn&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mn&gt;12&lt;/mn&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mn&gt;16&lt;/mn&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mn&gt;14&lt;/mn&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mn&gt;16&lt;/mn&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mn&gt;16&lt;/mn&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mn&gt;16&lt;/mn&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mn&gt;16&lt;/mn&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mn&gt;16&lt;/mn&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mn&gt;4&lt;/mn&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mn&gt;16&lt;/mn&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mn&gt;11&lt;/mn&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mn&gt;16&lt;/mn&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mn&gt;13&lt;/mn&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mn&gt;16&lt;/mn&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mn&gt;15&lt;/mn&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mn&gt;16&lt;/mn&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mn&gt;6&lt;/mn&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mn&gt;16&lt;/mn&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;mn&gt;3.1415926544231274&lt;/mn&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mn&gt;0.0000000008333343&lt;/mn&gt;&lt;mi&gt;w&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;0.004565&lt;/mn&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;@&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo&gt;:&lt;/mo&gt;&lt;mtext&gt; &lt;/mtext&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;mpirun -np 16 ./cpi
        Process 5 of 16 is on amax
        Process 7 of 16 is on amax
        Process 8 of 16 is on amax
        Process 9 of 16 is on amax
        Process 10 of 16 is on amax
        Process 12 of 16 is on amax
        Process 14 of 16 is on amax
        Process 0 of 16 is on amax
        Process 1 of 16 is on amax
        Process 2 of 16 is on amax
        Process 3 of 16 is on amax
        Process 4 of 16 is on amax
        Process 11 of 16 is on amax
        Process 13 of 16 is on amax
        Process 15 of 16 is on amax
        Process 6 of 16 is on amax
        pi is approximately 3.1415926544231274, Error is 0.0000000008333343
        wall clock time = 0.004565
        @amax:~/HPL&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.85396em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.16666666666666666em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02691em;&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03148em;&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mspace nobreak&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; mpirun -np 16 -nolocal ./cpi&lt;br&gt;
--------------------------------------------------------------------------&lt;br&gt;
All nodes which are allocated for this job are already filled.&lt;br&gt;
--------------------------------------------------------------------------&lt;/p&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;
&lt;p&gt;查看当前进程&lt;br&gt;
 &lt;code&gt;top&lt;/code&gt; &lt;br&gt;
top - 15:32:47 up 148 days,  5:36,  6 users,  load average: 107.26, 100.88, 63.62&lt;br&gt;
Tasks: 933 total,  17 running, 916 sleeping,   0 stopped,   0 zombie&lt;br&gt;
%Cpu(s): 81.9 us, 13.4 sy,  0.0 ni,  4.8 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st&lt;br&gt;
KiB Mem:  26404217+total, 17041590+used, 93626272 free,  3731332 buffers&lt;br&gt;
KiB Swap:  7999484 total,  1274312 used,  6725172 free. 88929968 cached Mem&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND                                               P
  5173 riolu     20   0 5448340 2.788g   8492 R 429.5  1.1  24:00.06 xhpl                                                 30 1
  5033 riolu     20   0 5450740 2.788g   8404 R 428.5  1.1  23:58.68 xhpl                                                 13 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;1&lt;/code&gt; ： 查看各逻辑 cpu 情况。&lt;br&gt;
 &lt;code&gt;F&lt;/code&gt; - &lt;code&gt;方向键选择P=Last Used Cpu&lt;/code&gt; - &lt;code&gt;空格&lt;/code&gt; ：显示进程在哪个 CPU 上运行。&lt;br&gt;
 &lt;code&gt;q&lt;/code&gt; ： 退出。&lt;br&gt;
参考：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbWVuZ2NodW5jaGVuL3AvOTY2OTcwNC5odG1s&#34;&gt;Linux 查看 CPU 和内存使用情况&lt;/span&gt;&lt;/p&gt;
</content>
        <category term="Linux" />
        <updated>2020-12-05T08:13:18.000Z</updated>
    </entry>
    <entry>
        <id>https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/hpc1204/</id>
        <title>高性能计算#02 HPL再次搭建</title>
        <link rel="alternate" href="https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/hpc1204/"/>
        <content type="html">&lt;p&gt;- Linpack 测试 OPENBLAS+OPENMPI+HPL -&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;环境搭建&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#环境搭建&#34;&gt;#&lt;/a&gt; 环境搭建&lt;/h2&gt;
&lt;h3 id=&#34;安装openblas&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装openblas&#34;&gt;#&lt;/a&gt; 安装 OpenBLAS&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;官方下载&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cub3BlbmJsYXMubmV0Lw==&#34;&gt; OpenBLAS-0.3.10.tar.gz&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解压后，在解压目录中执行 &lt;code&gt;make&lt;/code&gt; ，&lt;br&gt;
OpenBLAS build complete. (BLAS CBLAS LAPACK LAPACKE)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   OS               ... Linux
   Architecture     ... x86_64
   BINARY           ... 64bit
   C compiler       ... GCC  (cmd &amp;amp; version : cc (Ubuntu 4.8.4-2ubuntu1~14.04.4) 4.8.4)
   Fortran compiler ... GFORTRAN  (cmd &amp;amp; version : GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.4) 4.8.4)
   Library Name     ... libopenblas_haswellp-r0.3.10.a (Multi-threading; Max num-threads is 32)

 To install the library, you can run &amp;quot;make PREFIX=/path/to/your/installation install&amp;quot;.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;执行 &lt;code&gt;make PREFIX=/home/riolu/HPL/openblas install&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;安装openmpi&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装openmpi&#34;&gt;#&lt;/a&gt; 安装 openMPI&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;官方下载&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cub3Blbi1tcGkub3JnL3NvZnR3YXJlL29tcGkvdjQuMC8=&#34;&gt; openmpi-4.0.5.tar.gz&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解压后，在解压目录中执行 &lt;code&gt;./configure --prefix=/home/riolu/HPL/openmpi&lt;/code&gt; &lt;br&gt;
Resource Managers&lt;br&gt;
-----------------------&lt;br&gt;
Cray Alps: no&lt;br&gt;
Grid Engine: no&lt;br&gt;
LSF: no&lt;br&gt;
Moab: no&lt;br&gt;
Slurm: yes&lt;br&gt;
ssh/rsh: yes&lt;br&gt;
Torque: no&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; OMPIO File Systems
 -----------------------
 Generic Unix FS: yes
 Lustre: no
 PVFS2/OrangeFS: no
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;make&lt;/code&gt; ,  &lt;code&gt;make install&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改 &lt;code&gt;~/.bashrc&lt;/code&gt; ，在后面加上&lt;br&gt;
 export PATH=/home/riolu/HPL/openmpi/bin:&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;mi&gt;D&lt;/mi&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mo&gt;:&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;PATH
     export INCLUDE=/home/riolu/HPL/openmpi/include:&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8777699999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07847em;&#34;&gt;I&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07153em;&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;U&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;INCLUDE&lt;br&gt;
export LD_LIBRARY_PATH=/home/riolu/HPL/openmpi/lib:$LD_LIBRARY_PATH&lt;br&gt;
 保存后&lt;br&gt;
 source ~/.bashrc&lt;br&gt;
（恶心的 libreOffice 保存会改编码，还是在 Windows 上改完传过去或者在 jupyter 上改，我 tm&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;hpl安装与编译&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hpl安装与编译&#34;&gt;#&lt;/a&gt; HPL 安装与编译&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;官方下载网站下载：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubmV0bGliLm9yZy9iZW5jaG1hcmsvaHBs&#34;&gt;hpl.tar.gz&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进入安装文件夹下的 setup，在 setup 中中找到 &lt;code&gt;Make.Linux_PII_CBLAS&lt;/code&gt; ，将其放置到上层目录并且命名为 &lt;code&gt;Make.Linux&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改 &lt;code&gt;Make.Linux&lt;/code&gt; &lt;br&gt;
ARCH         = Linux&lt;br&gt;
TOPdir       = $(HOME)/HPL/hpl-2.3 /&lt;em&gt; 改为 hpl 解压后产生文件夹&lt;/em&gt; /&lt;br&gt;
MPdir        = &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mi&gt;M&lt;/mi&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mtext&gt;改为&lt;/mtext&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mtext&gt;安装文件夹&lt;/mtext&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;M&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;(HOME)/HPL/openmpi /*改为mpich安装文件夹*/
     MPinc        = -I&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;M&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;改&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;为&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;安&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;装&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;文&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;件&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;夹&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;M&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.76666em;vertical-align:-0.08333em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07847em;&#34;&gt;I&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(MPdir)/include&lt;br&gt;
MPlib        = -L$(MPdir)/lib&lt;br&gt;
LAdir        = &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mi&gt;M&lt;/mi&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;(HOME)/HPL/openblas
     LAinc        = -I&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;M&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.76666em;vertical-align:-0.08333em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07847em;&#34;&gt;I&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(LAdir)/include&lt;br&gt;
LAlib        = $(LAdir)/lib/libopenblas_haswellp-r0.3.10.a&lt;br&gt;
HPL_OPTS     = -DHPL_CALL_CBLAS&lt;br&gt;
CC           = $(MPdir)/bin/mpicc&lt;br&gt;
CCFLAGS      = $(HPL_DEFS) -fomit-frame-pointer -fopenmp -O3 -funroll-loops&lt;br&gt;
LINKER       = $(MPdir)/bin/mpif77&lt;br&gt;
LINKFLAGS = $(CCFLAGS)&lt;br&gt;
 执行&lt;br&gt;
 make arch=Linux&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;此时查看安装文件夹下 bin，会看到有 &lt;code&gt;Linux&lt;/code&gt;  文件夹，里面有 &lt;code&gt;HPL.dat&lt;/code&gt; ， &lt;code&gt;xhpl&lt;/code&gt; ，安装完成。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;执行 &lt;code&gt;mpirun -np 4 ./xhpl&lt;/code&gt; ，得到正确结果！&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;（OHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH&lt;/p&gt;
&lt;h2 id=&#34;测试优化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#测试优化&#34;&gt;#&lt;/a&gt; 测试优化&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;查看内存：&lt;br&gt;
$ free -h&lt;br&gt;
total       used       free     shared    buffers     cached&lt;br&gt;
Mem:          251G       138G       113G        14M       4.9G       104G&lt;br&gt;
-/+ buffers/cache:        29G       222G&lt;br&gt;
Swap:         7.6G       1.2G       6.4G&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用 50G，1 个节点，则&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;q&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mn&gt;50&lt;/mn&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mn&gt;10000&lt;/mn&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo&gt;&amp;gt;&lt;/mo&gt;&lt;mn&gt;70000&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;N=sqrt(50)*10000=&amp;gt;70000&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.64444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.5782em;vertical-align:-0.0391em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.64444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，最大&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;q&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mn&gt;120&lt;/mn&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mn&gt;10000&lt;/mn&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo&gt;&amp;gt;&lt;/mo&gt;&lt;mn&gt;110000&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;N=sqrt(120)*10000=&amp;gt;110000&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.64444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.5782em;vertical-align:-0.0391em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.64444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;测试运行：&lt;br&gt;
~/HPL/hpl-2.3/bin/Linux$ mpirun -np 8 ./xhpl&lt;br&gt;
================================================================================&lt;br&gt;
HPLinpack 2.3  –  High-Performance Linpack benchmark  –   December 2, 2018&lt;br&gt;
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK&lt;br&gt;
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK&lt;br&gt;
Modified by Julien Langou, University of Colorado Denver&lt;br&gt;
================================================================================&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N      :   70000
NB     :     256      192
PMAP   : Row-major process mapping
P      :       2
Q      :       4
PFACT  :    Left
NBMIN  :       2
NDIV   :       2
RFACT  :    Left
BCAST  :   1ring
DEPTH  :       0
SWAP   : Mix (threshold = 64)
L1     : transposed form
U      : transposed form
EQUIL  : yes
ALIGN  : 8 double precision words

--------------------------------------------------------------------------------

+ The matrix A is randomly generated for each test.
+ The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
+ The relative machine precision (eps) is taken to be               1.110223e-16
+ Computational tests pass if scaled residuals are less than                16.0

================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WR00L2L2       70000   256     2     4             894.95             2.5551e+02
HPL_pdgesv() start time Fri Dec  4 22:56:34 2020

HPL_pdgesv() end time   Fri Dec  4 23:11:29 2020

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   1.51800829e-03 ...... PASSED
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WR00L2L2       70000   192     2     4             927.80             2.4647e+02
HPL_pdgesv() start time Fri Dec  4 23:12:17 2020

HPL_pdgesv() end time   Fri Dec  4 23:27:45 2020

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   1.48198443e-03 ...... PASSED
================================================================================

Finished      2 tests with the following results:
              2 tests completed and passed residual checks,
              0 tests completed and failed residual checks,
              0 tests skipped because of illegal input values.
--------------------------------------------------------------------------------

End of Tests.
================================================================================
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;结果整合：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; ================================================================================
 T/V                N    NB     P     Q               Time                 Gflops
 --------------------------------------------------------------------------------
 WR00L2L2       70000   192     2     4             927.80             2.4647e+02
 WR00L2L2       70000   256     2     4             910.19             2.5124e+02
 WR00L2L2       70000   256     2     4             894.95             2.5551e+02
 WR00L2L2       70000   256     2     4             902.53             2.5337e+02
 WR00L2L2       70000   336     2     4             877.33             2.6065e+02
 WR00L2L2       70000   336     2     4             894.92             2.5553e+02
 WR00L2L2       70000   384     2     4             862.82             2.6503e+02
 ================================================================================
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;看起来选 &lt;code&gt;NB=384&lt;/code&gt;  比较好呢，实测浮点峰值为 265.03Gflops＝2.6503 千亿次 / 秒。&lt;/p&gt;
&lt;h2 id=&#34;绑定进程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#绑定进程&#34;&gt;#&lt;/a&gt; 绑定进程&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;~/HPL/openmpi/bin/mpirun -np 16 --bind-to core --map-by core --report-bindings ./xhpl&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; mpirun -np 16 --bind-to core --map-by core --report-bindings ./xhpl
[amax:18074] MCW rank 0 bound to socket 0[core 0[hwt 0-1]]: [BB/../../../../../../..][../../../../../../../..]
[amax:18074] MCW rank 1 bound to socket 0[core 1[hwt 0-1]]: [../BB/../../../../../..][../../../../../../../..]
[amax:18074] MCW rank 2 bound to socket 0[core 2[hwt 0-1]]: [../../BB/../../../../..][../../../../../../../..]
[amax:18074] MCW rank 3 bound to socket 0[core 3[hwt 0-1]]: [../../../BB/../../../..][../../../../../../../..]
[amax:18074] MCW rank 4 bound to socket 0[core 4[hwt 0-1]]: [../../../../BB/../../..][../../../../../../../..]
[amax:18074] MCW rank 5 bound to socket 0[core 5[hwt 0-1]]: [../../../../../BB/../..][../../../../../../../..]
[amax:18074] MCW rank 6 bound to socket 0[core 6[hwt 0-1]]: [../../../../../../BB/..][../../../../../../../..]
[amax:18074] MCW rank 7 bound to socket 0[core 7[hwt 0-1]]: [../../../../../../../BB][../../../../../../../..]
[amax:18074] MCW rank 8 bound to socket 1[core 8[hwt 0-1]]: [../../../../../../../..][BB/../../../../../../..]
[amax:18074] MCW rank 9 bound to socket 1[core 9[hwt 0-1]]: [../../../../../../../..][../BB/../../../../../..]
[amax:18074] MCW rank 10 bound to socket 1[core 10[hwt 0-1]]: [../../../../../../../..][../../BB/../../../../..]
[amax:18074] MCW rank 11 bound to socket 1[core 11[hwt 0-1]]: [../../../../../../../..][../../../BB/../../../..]
[amax:18074] MCW rank 12 bound to socket 1[core 12[hwt 0-1]]: [../../../../../../../..][../../../../BB/../../..]
[amax:18074] MCW rank 13 bound to socket 1[core 13[hwt 0-1]]: [../../../../../../../..][../../../../../BB/../..]
[amax:18074] MCW rank 14 bound to socket 1[core 14[hwt 0-1]]: [../../../../../../../..][../../../../../../BB/..]
[amax:18074] MCW rank 15 bound to socket 1[core 15[hwt 0-1]]: [../../../../../../../..][../../../../../../../BB]
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;修改日期：2020 年 12 月 6 日&lt;/em&gt;&lt;/p&gt;
</content>
        <category term="Linux" />
        <updated>2020-12-04T10:57:06.000Z</updated>
    </entry>
    <entry>
        <id>https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/hpc1202/</id>
        <title>高性能计算#01 HPL搭建</title>
        <link rel="alternate" href="https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/hpc1202/"/>
        <content type="html">&lt;p&gt;- Linpack 测试 GOTOBLAS+MPICH+HPL -&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;环境搭建&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#环境搭建&#34;&gt;#&lt;/a&gt; 环境搭建&lt;/h2&gt;
&lt;h3 id=&#34;安装goto库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装goto库&#34;&gt;#&lt;/a&gt; 安装 GOTO 库&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;官方下载网站下载：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudGFjYy51dGV4YXMuZWR1L3Jlc2VhcmNoLWRldmVsb3BtZW50L3RhY2Mtc29mdHdhcmUvZ290b2JsYXMy&#34;&gt;GotoBLAS2-1.13.tar.gz&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 Linux 中解压，执行 &lt;code&gt;make CC=gcc BINARY=64 TARGET=NEHALEM&lt;/code&gt;  失败&lt;br&gt;
…/libgoto2_nehalem-r1.13.a (ssymv_U.o): error adding symbols: 错误的值&lt;br&gt;
 collect2: error: ld returned 1 exit status&lt;br&gt;
 继续执行&lt;br&gt;
 gedit  f_check&lt;br&gt;
# 298 行改为如下：&lt;br&gt;
# print MAKEFILE “FEXTRALIB=$linker_L -lgfortran -lm -lquadmath -lm $linker_a\n”;&lt;br&gt;
make clean&lt;br&gt;
make CC=gcc BINARY=64 TARGET=NEHALEM USE_OPENMP=1 INTERFACE64=1&lt;br&gt;
 成功！&lt;br&gt;
GotoBLAS build complete.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   OS               ... Linux             
   Architecture     ... x86_64               
   BINARY           ... 64bit                 
   C compiler       ... GCC  (command line : gcc)
   Fortran compiler ... G77  (command line : g77)
   Library Name     ... libgoto2_nehalem-r1.13.a (Single threaded)  
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;安装mpich&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装mpich&#34;&gt;#&lt;/a&gt; 安装 MPICH&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;官方下载网站下载：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubXBpY2gub3JnL2Rvd25sb2Fkcy8=&#34;&gt;mpich-3.3.2.tar.gz&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;解压，新建文件夹 &lt;code&gt;mpich&lt;/code&gt;  作为安装文件夹&lt;br&gt;
 cd mpich-3.3.2/&lt;br&gt;
./configure --prefix=/home/riolu/HPL/mpich&lt;br&gt;
 提示无 Fortran 77 compiler，切换至管理员安装&lt;br&gt;
 sudo apt-get install gfortran&lt;br&gt;
（虽然但是，我也不会 Fortran 啊……&lt;br&gt;
 提示无 C++ compiler，再切换至管理员安装……&lt;br&gt;
sudo apt-get install g++&lt;/li&gt;
&lt;li&gt;好了，接下来&lt;br&gt;
 make&lt;br&gt;
make install&lt;br&gt;
gedit ~/.bashrc&lt;br&gt;
 在后面加上&lt;br&gt;
 export PATH=/home/riolu/HPL/mpich/bin:&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;M&lt;/mi&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;:&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;PATH
     export MANPATH=/home/riolu/HPL/mpich/man:&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8777699999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;M&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;MANPATH&lt;br&gt;
export LD_LIBRARY_PATH=/home/riolu/HPL/mpich/lib:&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;D&lt;/mi&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;/msub&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mi&gt;B&lt;/mi&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;Y&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;/msub&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mtext&gt;不知要不要保存后&lt;/mtext&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mtext&gt; &lt;/mtext&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mtext&gt;看下&lt;/mtext&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;LD_LIBRARY_PATH //不知要不要
保存后
     source ~/.bashrc
看下&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.32833099999999993em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;L&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07847em;&#34;&gt;I&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05017em;&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.22222em;&#34;&gt;Y&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.32833099999999993em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;不&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;知&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;要&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;不&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;要&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;保&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;存&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;后&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mspace nobreak&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;看&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;下&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; PATH&lt;br&gt;
$ echo $PATH&lt;br&gt;
/home/riolu/HPL/mpich/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games&lt;/li&gt;
&lt;li&gt;测试&lt;br&gt;
 riolu@sinki-virtual-machine:~/HPL/mpich-3.3.2$ mpirun -np 10 ./examples/cpi&lt;br&gt;
Process 4 of 10 is on sinki-virtual-machine&lt;br&gt;
Process 1 of 10 is on sinki-virtual-machine&lt;br&gt;
Process 8 of 10 is on sinki-virtual-machine&lt;br&gt;
Process 2 of 10 is on sinki-virtual-machine&lt;br&gt;
Process 3 of 10 is on sinki-virtual-machine&lt;br&gt;
Process 0 of 10 is on sinki-virtual-machine&lt;br&gt;
Process 5 of 10 is on sinki-virtual-machine&lt;br&gt;
Process 7 of 10 is on sinki-virtual-machine&lt;br&gt;
Process 6 of 10 is on sinki-virtual-machine&lt;br&gt;
Process 9 of 10 is on sinki-virtual-machine&lt;br&gt;
pi is approximately 3.1415926544231256, Error is 0.0000000008333325&lt;br&gt;
wall clock time = 0.134519&lt;br&gt;
 成功！&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;hpl安装与编译&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hpl安装与编译&#34;&gt;#&lt;/a&gt; HPL 安装与编译&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;官方下载网站下载：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubmV0bGliLm9yZy9iZW5jaG1hcmsvaHBs&#34;&gt;hpl.tar.gz&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进入安装文件夹下的 setup，在 setup 中中找到 &lt;code&gt;Make.Linux_PII_FBLAS&lt;/code&gt; ，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1NYWtlLXo5NGY1YjJvbjB2M3ZibXlpZzlhaXo3Y253YWozdnRvZHQ1N2FveDJlODc1YS5teQ==&#34;&gt;将其放置到上层目录并且命名为 Make.my&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1NYWtlLTQ4NmZ4MTRpLm15&#34;&gt;修改 Make.my&lt;/span&gt;&lt;br&gt;
ARCH         = my&lt;br&gt;
TOPdir       = $(HOME)/HPL/hpl-2.3 /&lt;em&gt; 改为 hpl 解压后产生文件夹&lt;/em&gt; /&lt;br&gt;
MPdir        = $(HOME)/HPL/mpich /&lt;em&gt; 改为 mpich 安装文件夹&lt;/em&gt; /&lt;br&gt;
MPlib        = $(MPdir)/lib&lt;br&gt;
LAdir        = $(HOME)/HPL/GotoBLAS2 /&lt;em&gt;GotoBLAS2 解压文件夹&lt;/em&gt; /&lt;br&gt;
LAinc        =&lt;br&gt;
LAlib        = $(LAdir)/libgoto2_nehalemp-r1.13.a&lt;br&gt;
HPL_OPTS     = -DHPL_CALL_CBLAS&lt;br&gt;
CC           = $(HOME)/HPL/mpich/bin/mpicc&lt;br&gt;
CCFLAGS      = $(HPL_DEFS) -fomit-frame-pointer -fopenmp -O3 -funroll-loops&lt;br&gt;
LINKER       = $(HOME)/HPL/mpich/bin/mpif77&lt;br&gt;
LINKFLAGS = $(CCFLAGS)&lt;br&gt;
 执行&lt;br&gt;
 make arch=my&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;此时查看安装文件夹下 bin，会看到有 my 文件夹，里面有 &lt;code&gt;HPL.dat&lt;/code&gt; ， &lt;code&gt;xhpl&lt;/code&gt; ，安装完成。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;结果运行 &lt;code&gt;mpirun -np 2  ./xhpl&lt;/code&gt;  得到报错信息？？&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;** On entry to DTRSM  parameter number  9 had an illegal value
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;死了。失败，重新编译前加入 &lt;code&gt;make arch=my clean_arch_all&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;不伺候了，告辞！&lt;/p&gt;
&lt;h2 id=&#34;集群同步设置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#集群同步设置&#34;&gt;#&lt;/a&gt; 集群同步设置&lt;/h2&gt;
&lt;h3 id=&#34;psftp传文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#psftp传文件&#34;&gt;#&lt;/a&gt; psftp 传文件&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;    psftp&amp;gt; open sinki@10.201.0.6
    Using username &amp;quot;sinki&amp;quot;.
    sinki@10.201.0.6&#39;s password:
    Remote working directory is /home/sinki
    psftp&amp;gt;put F:\Share\GotoBLAS2-1.13.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其他用法参考:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ranNvbG8ud29yZHByZXNzLmNvbS8yMDEwLzAzLzA4L3BzZnRwJUU3JTk0JUE4JUU2JUIzJTk1Lw==&#34;&gt;PSFTP 用法&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;xming图形界面和jupyter挂起&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xming图形界面和jupyter挂起&#34;&gt;#&lt;/a&gt; Xming 图形界面和 jupyter 挂起&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;    nautilus
    nohup jupyter notebook --allow-root &amp;gt; jupyter.log 2&amp;gt;&amp;amp;1 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;修改日期：2020 年 12 月 4 日&lt;/em&gt;&lt;/p&gt;
</content>
        <category term="Linux" />
        <updated>2020-12-02T08:50:40.000Z</updated>
    </entry>
    <entry>
        <id>https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linux1112/</id>
        <title>Linux学习 笔记#02</title>
        <link rel="alternate" href="https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linux1112/"/>
        <content type="html">&lt;p&gt;- 登入系统 - &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;接下来就用 Ubuntu14 进行实验啦，先设置一下桌面配置，建个普通用户，密码 wodemima！&lt;/p&gt;
&lt;p&gt;关闭桌面动画：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ gsettings set org.gnome.desktop.interface enable-animations false
&lt;/code&gt;&lt;/pre&gt;
&lt;img style=&#34;display: inline-block; width: 70%; max-width: 70%; height: auto;&#34; data-src=&#34;1.png&#34; /&gt;
&lt;p&gt;用普通用户可以防止手残（ctrl+alt+prScrn 截图保存到主机桌面&lt;/p&gt;
&lt;h2 id=&#34;ch4-登入与帮助&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ch4-登入与帮助&#34;&gt;#&lt;/a&gt; Ch4 登入与帮助&lt;/h2&gt;
&lt;p&gt;ctrl+alt+F1~6 切换终端， ctrl+alt+F7 图形界面。终端界面登入后是这样：&lt;/p&gt;
&lt;img style=&#34;display: inline-block; width: 70%; max-width: 70%; height: auto;&#34; data-src=&#34;2.png&#34; /&gt;
&lt;p&gt;注销指令： &lt;code&gt;exit&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;更改为英文语系：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ LANG=en_US.utf8           //输出讯息改为英文
$ LANGUAGE=en_US.utf8
$ export LC_ALL=en_US.utf8  //其他信息
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意 &lt;code&gt;LANG=en_US.utf8&lt;/code&gt;  是连续输入的，等号两边并没有空格符喔！ 这样一来，就能够在『这次的登入』察看英文讯息啰！如果注销 Linux 后，刚刚下达的指令就没有用啦！可以用 &lt;code&gt;locale&lt;/code&gt;  查看。&lt;br&gt;
所以要怎样才能永久生效呢？&lt;/p&gt;
&lt;p&gt;如果想要让系统默认的语系变成英文的话，那么可以修改系统配置文件 &lt;code&gt;/etc/locale.conf&lt;/code&gt; ，使 LANG 这个变量成为上述的内容即可。&lt;/p&gt;
&lt;h3 id=&#34;命令输入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#命令输入&#34;&gt;#&lt;/a&gt; 命令输入：&lt;/h3&gt;
&lt;p&gt;一般格式为 command [-options] parameter1 parameter1 …&lt;br&gt;
\ 后敲回车表示换行接着输入命令&lt;br&gt;
选项设定（如帮助） -h 缩写， --help 完整名称。&lt;br&gt;
某些情况选项也用 + 引导。&lt;/p&gt;
&lt;p&gt;举例：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ date +%Y/%m/%d        //查看日期
$ cal [month] [year]    //查看日历
$ bc                    //计算器 scale=num设置小数点位数，quit退出
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;快捷键：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tab 键： 输入部分命令连按两次 Tab，可以文件补齐或命令补全或参数 / 选项补齐。&lt;/li&gt;
&lt;li&gt;ctrl+c： 终止正在运行的程序&lt;/li&gt;
&lt;li&gt;ctrl+d： 键盘输入结束（End Of File, EOF 或 End Of Input），可以取代 &lt;code&gt;exit&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;shift+Page UP/Page Down： 翻页&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;manual&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#manual&#34;&gt;#&lt;/a&gt; manual&lt;/h3&gt;
&lt;p&gt;使用命令 &lt;code&gt;man xxx&lt;/code&gt;  可以查看 &lt;code&gt;xxx&lt;/code&gt;  的用户手册，查看更详细的说明。&lt;br&gt;
第一行命令右面的数字代号代表含义，比较重要的是&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;代号&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;代表内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;用户在 shell 环境中可以操作的指令或可执行文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;5&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;配置文件或者是某些文件的格式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;8&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;系统管理员可用的管理指令&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;另外可以套娃使用命令 &lt;code&gt;man man&lt;/code&gt;  查看更多……&lt;/p&gt;
&lt;p&gt;man page 常用的按键&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;按键&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;进行工作&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;空格键&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;向下翻一页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;[Page Down]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;向下翻一页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;[Page Up]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;向上翻一页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;[Home]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;去到第一页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;[End]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;去到最后一页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;/string&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;向下搜寻 string 这个字符串，如果要搜寻 vbird 的话，就输入 /vbird&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;?string&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;向上搜寻 string 这个字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;n, N&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;利用 / 或？来搜寻字符串时，可以用 n 来继续下一个搜寻 (不论是 / 或？) ，可以利用 N 来进行『反向』搜寻。&lt;br&gt;举例来说，我以 /vbird 搜寻 vbird 字符串， 那么可以 n 继续往下查询，用 N 往上查询。若以？vbird 向上查询 vbird 字符串， 那我可以用 n 继续『向上』查询，用 N 反向查询。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;q&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;结束这次的 man page&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;man page 的数据放在 &lt;code&gt;/usr/share/man&lt;/code&gt;  这个目录里头，修改 &lt;code&gt;/etc/manpath.conf&lt;/code&gt;  可以改变搜寻路径。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;man -f xxx&lt;/code&gt;  查找指令 (或文件) 的简易说明，括号里的是代号。&lt;br&gt;
 &lt;code&gt;man 代号 xxx&lt;/code&gt;  显示对应代号指令 (或文件) 的手册，没有代号时显示查找到的第一个。&lt;br&gt;
 &lt;code&gt;man -k xx&lt;/code&gt;  查找信息中含有 &lt;code&gt;xx&lt;/code&gt;  的所有指令说明。&lt;/p&gt;
&lt;p&gt;另外，root 模式下执行 &lt;code&gt;mandb&lt;/code&gt;  可以建立 whatis 数据库，这样就能用&lt;br&gt;
 &lt;code&gt;whatis xxx&lt;/code&gt;  替代 &lt;code&gt;man -f xxx&lt;/code&gt; ，&lt;br&gt;
 &lt;code&gt;apropos xxx&lt;/code&gt;  替代 &lt;code&gt;man -k xxx&lt;/code&gt; 。&lt;/p&gt;
&lt;h3 id=&#34;info&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#info&#34;&gt;#&lt;/a&gt; info&lt;/h3&gt;
&lt;p&gt;info 与 man 的用途差不多，但是 info page 将文件数据拆成一个一个的段落，每个段落用自己的页面来撰写，并且在各个页面中还有类似网页的 “超链接” 来跳到各不同的页面中。支持 info 指令的文件默认是放置在 &lt;code&gt;/usr/share/info/&lt;/code&gt;  这个目录当中的。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;按键&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;进行工作&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;空格键&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;向下翻一页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;[Page Down]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;向下翻一页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;[Page Up]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;向上翻一页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;[tab]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;在 node 之间移动，有 node 的地方，通常会以 * 显示。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;[Enter]&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;当光标在 node 上面时，按下 Enter 可以进入该 node 。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;n&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;前往下一个 node 处&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;p&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;前往上一个 node 处&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;u&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;向上移动一层&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;s(/)&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;在 info page 当中进行搜寻&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;h, ?&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;显示求助选单&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;q&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;结束这次的 info page&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;doc&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#doc&#34;&gt;#&lt;/a&gt; doc&lt;/h3&gt;
&lt;p&gt;有相当多的说明需要额外的文件（How-To）在 &lt;code&gt;/usr/share/doc&lt;/code&gt;  这个目录里。&lt;/p&gt;
&lt;h3 id=&#34;nano&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nano&#34;&gt;#&lt;/a&gt; nano&lt;/h3&gt;
&lt;p&gt;启用： &lt;code&gt;nano filename&lt;/code&gt; &lt;br&gt;
 下面两行为帮助。 &lt;code&gt;^&lt;/code&gt;  代表 &lt;code&gt;Ctrl&lt;/code&gt;  组合键， &lt;code&gt;M&lt;/code&gt;  代表 &lt;code&gt;Alt&lt;/code&gt;  组合键。回车键确认。&lt;/p&gt;
&lt;h3 id=&#34;关机相关&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#关机相关&#34;&gt;#&lt;/a&gt; 关机相关&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;who&lt;/code&gt; ：查看当前在线用户。&lt;br&gt;
 &lt;code&gt;sync&lt;/code&gt; ：将数据同步写入硬盘。在关机指令前手动下达可以加层保障。&lt;br&gt;
 &lt;code&gt;su -&lt;/code&gt; ：转为 root。不过我失败了。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shutdown&lt;/code&gt; ：关机。用法： &lt;code&gt;sudo shutdown \[-krhc\] \[时间\] \[警告讯息\]&lt;/code&gt; &lt;br&gt;
 选项与参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-k&lt;/code&gt;      ： 不要真的关机，只是发送警告讯息出去吓唬人。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r &lt;/code&gt;     ： 在将系统的服务停掉之后就重新启动 (常用)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-h &lt;/code&gt;     ： 将系统的服务停掉后，立即关机。 (常用)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;      ： 取消已经在进行的 shutdown 指令内容。&lt;/li&gt;
&lt;li&gt;时间   ： 指定系统关机的时间，无参数则默认 1 分钟后自动进行。可以为 &lt;code&gt;now&lt;/code&gt; （立即关机，相当于 0）， &lt;code&gt;HH:MM&lt;/code&gt; （当天时间，若已过去则为隔天）， &lt;code&gt;+整数X&lt;/code&gt; （X 分钟后关机）。&lt;/li&gt;
&lt;/ul&gt;
&lt;img style=&#34;display: inline-block; width: 70%; max-width: 70%; height: auto;&#34; data-src=&#34;4.png&#34; /&gt;
&lt;img style=&#34;display: inline-block; width: 70%; max-width: 70%; height: auto;&#34; data-src=&#34;3.png&#34; /&gt;
&lt;p&gt;&lt;code&gt;reboot&lt;/code&gt; ：重启。&lt;br&gt;
 &lt;code&gt;poweroff&lt;/code&gt; ：关机，切断电源。&lt;br&gt;
 &lt;code&gt;halt&lt;/code&gt; ：系统停止，屏幕可能会保留停止信息。&lt;br&gt;
 &lt;code&gt;systemctl suspend&lt;/code&gt; ：休眠模式。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;下一篇：&lt;a href=&#34;/2020/12/24/linux1224/&#34;&gt;文件权限与目录配置&lt;/a&gt;&lt;br&gt;
上一篇：&lt;a href=&#34;/2020/11/11/linux1111/&#34;&gt;反复入门 Linux&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="Linux" />
        <updated>2020-11-12T12:31:58.000Z</updated>
    </entry>
    <entry>
        <id>https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linux1111/</id>
        <title>Linux学习 笔记#01</title>
        <link rel="alternate" href="https://ningchenhui.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/linux1111/"/>
        <content type="html">&lt;p&gt;- 反复入门 Linux- &lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;高中打比赛时简单用过 Ubuntu 系统，到现在都忘得一干二净，于是再次入门一遍。首先当然是要安装 Linux Ubuntu。&lt;/p&gt;
&lt;h2 id=&#34;安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装&#34;&gt;#&lt;/a&gt; 安装&lt;/h2&gt;
&lt;p&gt;为了方便就不装双系统了，准备用虚拟机。然而也没少花时间折腾这玩意……&lt;/p&gt;
&lt;h3 id=&#34;配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置&#34;&gt;#&lt;/a&gt; 配置&lt;/h3&gt;
&lt;p&gt;实验室的机子是 Win10 系统，8G 内存，Core i5-6500 CPU @3.20GHz。于是给虚拟机分了 2G 内存，40G 硬盘。这里用的是典型安装，直接安装程序光盘映像文件。&lt;br&gt;
生成虚拟机时需要用户名和密码，咱随便设一个 1234。输完这个其他全部自动默认安装了。&lt;br&gt;
由于本机没有 CD 驱动，设置里取消连接 CD。&lt;br&gt;
装上 VM Tools，然后参考 - 自动调整大小 - 自动适应客户机，这样分辨率就能自动调整了。&lt;br&gt;
首选项启用虚拟打印机以连接打印机。&lt;br&gt;
系统只有英文，在设置里把中文装一下。先在语言支持里安装，然后在输入法里添加拼音。&lt;/p&gt;
&lt;h3 id=&#34;坑一&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#坑一&#34;&gt;#&lt;/a&gt; 坑一&lt;/h3&gt;
&lt;p&gt;用 VMware 15 连鼠标都不显示，装 Ubuntu20 和 14 都是这样，而且稍微设置一下马上无响应，无法结束进程只能重启电脑，网上也没有解决办法，一气之下卸了装 VMware 12，这下可以正常安装 Ubuntu20，但 14 卡了很久在 Copying files 上，想选挂起结束，好嘛，又无响应 + 结束不了进程只能重启。至于网上说进不去虚拟机就取消设置里显示器的 3D 加速图形勾选，不知有没有用。&lt;/p&gt;
&lt;p&gt;—— 使用 VM12。&lt;/p&gt;
&lt;h3 id=&#34;坑二&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#坑二&#34;&gt;#&lt;/a&gt; 坑二&lt;/h3&gt;
&lt;p&gt;在虚拟机运行的时候调整虚拟机设置必卡死无响应，调任务管理器强制结束后不能再开虚拟机，因为 VMware 的进程还在后台跑着而且 Access DENIED。 搜解决方法无果，只能重启电脑。好嘛我光重启电脑都几十回了，烦。用 VM 的修复功能不但不能结束进程还得重启电脑，还不如不用。&lt;/p&gt;
&lt;p&gt;—— 在虚拟机运行时不更改任何 VM 设置。&lt;/p&gt;
&lt;h3 id=&#34;坑三&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#坑三&#34;&gt;#&lt;/a&gt; 坑三&lt;/h3&gt;
&lt;p&gt;声卡报错。 &lt;code&gt;A device ID has been used that is out of range for your system. 声音将中断。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;—— 解决办法是声音设置 - 声音控制面板 - 录制 - 启用 Stereo Mix。然后回到 VM 连接声音即可！&lt;/p&gt;
&lt;h3 id=&#34;坑四&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#坑四&#34;&gt;#&lt;/a&gt; 坑四&lt;/h3&gt;
&lt;p&gt;VM12 在 WIN10 上的复制文件功能可能会崩溃，小文件还行十几兆的就直接卡死。还是设置一下共享文件夹比较稳妥，目录在  &lt;code&gt;/mnt/hgfs/&lt;/code&gt; 。 另外还要运行一句话挂载文件夹&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo vmhgfs-fuse .host:/ /mnt/hgfs -o subtype=vmhgfs-fuse,allow_other
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;—— 不要使用复制粘贴 / 拖拽功能，使用文件共享。&lt;/p&gt;
&lt;h3 id=&#34;警一&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#警一&#34;&gt;#&lt;/a&gt; 警一&lt;/h3&gt;
&lt;p&gt;虚拟机开机提示&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Failed to initialize policy for cpu: 0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;不知道咋回事，目前没影响。&lt;/p&gt;
&lt;h3 id=&#34;最终&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最终&#34;&gt;#&lt;/a&gt; 最终&lt;/h3&gt;
&lt;p&gt;大功告成！先玩一把麻将连连看。&lt;/p&gt;
&lt;img style=&#34;display: inline-block; width: 70%; max-width: 70%; height: auto;&#34; data-src=&#34;linux.jpg&#34; /&gt;
&lt;h2 id=&#34;ch3-手动安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ch3-手动安装&#34;&gt;#&lt;/a&gt; Ch3 手动安装&lt;/h2&gt;
&lt;p&gt;Ubuntu20 自动分配的磁盘，这次手动分配一下。还记得之前没装上的 Ubuntu14，正好拿来练手。&lt;br&gt;
VM 创建空磁盘，挂载 CD 为 Ubuntu14 镜像，进入到系统安装界面。直接选择安装。&lt;br&gt;
&lt;img style=&#34;display: inline-block; width: 70%; max-width: 70%; height: auto;&#34; data-src=&#34;1.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后选择自己调整分区。&lt;br&gt;
&lt;img style=&#34;display: inline-block; width: 70%; max-width: 70%; height: auto;&#34; data-src=&#34;2.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;我倒是没在 Ubuntu 上看到哪里能选 LVM 和 GPT 咋设置的，鸟哥上剩余 9G 也不知道是咋回事。&lt;br&gt;
&lt;img style=&#34;display: inline-block; width: 70%; max-width: 70%; height: auto;&#34; data-src=&#34;3.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;总之是装完了，这次没有卡在 Copying files 上但下载语言包依旧很慢。所以不用 VM 的自动安装会好一些咯？这里居然不用再设置共享文件夹直接就能看到了。&lt;/p&gt;
&lt;img style=&#34;display: inline-block; width: 70%; max-width: 70%; height: auto;&#34; data-src=&#34;4.png&#34; /&gt;
&lt;p&gt;啊，梦回高二。当时还分不清 Linux 和 Ubuntu 有啥区别，只能开着网易云听歌打代码呐……&lt;/p&gt;
&lt;h2 id=&#34;今日趣事&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#今日趣事&#34;&gt;#&lt;/a&gt; 今日趣事&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;11.11 单身节，恰好咱的 ptt 维持在 11.11——&lt;br&gt;
&lt;img style=&#34;display: inline-block; width: 70%; max-width: 70%; height: auto;&#34; data-src=&#34;ptt.jpg&#34; /&gt;&lt;/li&gt;
&lt;li&gt;耳机线断了之后修了半天只把左耳机线连上了 —— 单边耳机。&lt;/li&gt;
&lt;li&gt;折磨我很久的保暖衣上的刺（头发渣）终于找到并拔掉啦！&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;下一篇：&lt;a href=&#34;/2020/11/12/linux1112/&#34;&gt;登入系统&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="Linux" />
        <updated>2020-11-11T03:17:58.000Z</updated>
    </entry>
</feed>
