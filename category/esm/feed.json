{
    "version": "https://jsonfeed.org/version/1",
    "title": "欢迎 • All posts by \"esm\" category",
    "description": "DESS, THU",
    "home_page_url": "https://ningchenhui.github.io",
    "items": [
        {
            "id": "https://ningchenhui.github.io/ESM/OMARE/jasminInstall/",
            "url": "https://ningchenhui.github.io/ESM/OMARE/jasminInstall/",
            "title": "JASMIN 安装",
            "date_published": "2022-08-13T10:19:13.000Z",
            "content_html": "<p>JASMIN Installation <span id=\"more\"></span></p>\n<h1 id=\"所用平台\"><a class=\"markdownIt-Anchor\" href=\"#所用平台\">#</a> 所用平台</h1>\n<p>系统：Fedora 33 Workstation Edition 64 位<br>\n GCC 10.3.1 （Red Hat）</p>\n<p>此系统自带 GCC 版本过高，需安装低版本 GCC 4.8.5。</p>\n<h1 id=\"gcc-485\"><a class=\"markdownIt-Anchor\" href=\"#gcc-485\">#</a> GCC 4.8.5</h1>\n<p><span class=\"label info\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly9nY2MuZ251Lm9yZy9nY2MtNC44Lw==\">下载地址</span></span></p>\n<h2 id=\"依赖安装\"><a class=\"markdownIt-Anchor\" href=\"#依赖安装\">#</a> 依赖安装</h2>\n<p>在源码文件夹中  <code>./contrib/download_prerequisites</code>  可下载好 mpfr-2.4.2，mpc-0.8.1，gmp-4.3.2，此外还需下载 isl-0.11.1，cloog-0.18.0 并解压到源码文件夹。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> gcc-4.8.5</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">wget</span> https://gcc.gnu.org/pub/gcc/infrastructure/isl-0.11.1.tar.bz2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">wget</span> https://gcc.gnu.org/pub/gcc/infrastructure/cloog-0.18.1.tar.gz</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">tar</span> -jxvf isl-0.11.1.tar.bz2</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">tar</span> -zxvf cloog-0.18.1.tar.gz</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">mv</span> isl-0.11.1 isl</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">mv</span> cloog-0.18.1 cloog</pre></td></tr></table></figure><h2 id=\"正常安装\"><a class=\"markdownIt-Anchor\" href=\"#正常安装\">#</a> 正常安装</h2>\n<p>为了防止出错<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDgxMTQwODcvY29tcGlsaW5nLWdjYy00LTgtNQ==\">在源码文件夹外</span>编译安装。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">mkdir</span> gccbuild</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">cd</span> gccbuild</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">..</span>/gcc-4.8.5/configure --prefix<span class=\"token operator\">=</span>/usr/local/gcc-4.8.5</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">make</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">make</span> check</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span></pre></td></tr></table></figure><p><span class=\"label info\"><span class=\"exturl\" data-url=\"aHR0cDovL25vdGVzLm1heHdpLmNvbS8yMDE3LzEyLzA5L2dudS1nY2MtY29tcGlsZS1mb3ItY2VudG9zNi8=\">参考</span></span></p>\n<h2 id=\"错误处理\"><a class=\"markdownIt-Anchor\" href=\"#错误处理\">#</a> 错误处理</h2>\n<p>用高版本 GCC 编译会出现很多不兼容问题。</p>\n<h3 id=\"stubs-32h\"><a class=\"markdownIt-Anchor\" href=\"#stubs-32h\">#</a> stubs-32.h</h3>\n<p>报错： <code>Error &quot;gnu/stubs-32.h: No such file or directory&quot; while compiling Nachos source code</code> <br>\n 处理： <code>sudo yum install glibc-devel.i686 libstdc++-devel.i686</code> <br>\n 不要加  <code>--disable-multilib</code>  编译选项绕过，会导致后面的软件编译失败。</p>\n<p><span class=\"label info\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNzQxMjU0OC9lcnJvci1nbnUtc3R1YnMtMzItaC1uby1zdWNoLWZpbGUtb3ItZGlyZWN0b3J5LXdoaWxlLWNvbXBpbGluZy1uYWNob3Mtc291cmNl\">参考</span></span></p>\n<h3 id=\"cannot-find-lstdc\"><a class=\"markdownIt-Anchor\" href=\"#cannot-find-lstdc\">#</a> Cannot find -lstdc++</h3>\n<p>处理： <code>yum install libstdc++-static glibc-static</code> <br>\n<span class=\"label info\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtLW1pbmluZy9ldGhtaW5lci9pc3N1ZXMvMTI0Mw==\">参考</span></span></p>\n<h3 id=\"struct-ucontext\"><a class=\"markdownIt-Anchor\" href=\"#struct-ucontext\">#</a> struct ucontext</h3>\n<p>报错： <code>dereferencing pointer to incomplete type 'struct ucontext'</code> <br>\n 处理：找到错误源码文件，将  <code>struct ucontext * uc_ = context-&gt;cfa</code>  修改为  <code>struct ucontext_t * uc_ = context-&gt;cfa</code> 。</p>\n<p><span class=\"label info\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N1YWVmYXIvcnl6ZW4tdGVzdC9pc3N1ZXMvNg==\">参考</span></span></p>\n<h3 id=\"asan_linuxcc\"><a class=\"markdownIt-Anchor\" href=\"#asan_linuxcc\">#</a> asan_linux.cc</h3>\n<p>处理：在  <code>asan_linux.cc</code>  中添加头文件  <code>#include &lt;signal.h&gt;</code></p>\n<p><span class=\"label info\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC83NzE2NTI3MmI3ZTE=\">参考</span></span></p>\n<h3 id=\"libc_name_p\"><a class=\"markdownIt-Anchor\" href=\"#libc_name_p\">#</a> libc_name_p</h3>\n<p>报错： <code>cfns.gperf:101:1: error: ‘gnu_inline’ attribute present on ‘libc_name_p’</code> <br>\n处理：修改  <code>cfns.h</code>  中的声明和定义</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">__GNUC__</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>__inline</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> <span class=\"token function\">libc_name_p</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>为</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">__GNUC__</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">__GNUC_STDC_INLINE__</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">__attribute__</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>__gnu_inline__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>__inline</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> <span class=\"token function\">libc_name_p</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><span class=\"label info\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly91bml4LnN0YWNrZXhjaGFuZ2UuY29tL3F1ZXN0aW9ucy8zMzU3MTcvaG93LXRvLWhhbmRsZS1lcnJvci1jb21waWxpbmctZ2NjLTQtNy0wLXVzaW5nLWdjYy02LTItMQ==\">参考</span></span></p>\n<h1 id=\"gdb-92\"><a class=\"markdownIt-Anchor\" href=\"#gdb-92\">#</a> GDB 9.2</h1>\n<p>由于使用旧版 gcc 时系统 gdb 不可用，需重新编译安装旧版 gdb。</p>\n<p><span class=\"label info\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc291cmNld2FyZS5vcmcvZ2RiL2Rvd25sb2FkLw==\">下载地址</span></span></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">install</span> texinfo <span class=\"token operator\">!</span>编译gdb手册用</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">tar</span> zxvf  gdb-9.2.tar.gz</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">cd</span> gdb-9.2</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">mkdir</span> build</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">cd</span> build</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">..</span>/configure --disable-host-shared --prefix<span class=\"token operator\">=</span>/usr/local/gdb-9.2</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">make</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span></pre></td></tr></table></figure><h1 id=\"netcdf-44\"><a class=\"markdownIt-Anchor\" href=\"#netcdf-44\">#</a> Netcdf 4.4</h1>\n<p><span class=\"label info\"><span class=\"exturl\" data-url=\"ZnRwOi8vZnRwLnVuaWRhdGEudWNhci5lZHUvcHViL25ldGNkZi9uZXRjZGYtNC8=\">下载地址</span></span><br>\nroot 登录，启用 GCC 4.8.5 后 <em>→参考本页环境变量配置</em></p>\n<h2 id=\"zlib-128\"><a class=\"markdownIt-Anchor\" href=\"#zlib-128\">#</a> zlib 1.2.8</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">tar</span> -zxvf zlib-1.2.8.tar.gz</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> zlib-1.2.8</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>./configure --prefix<span class=\"token operator\">=</span>/usr/local/netcdf</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">make</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">make</span> check</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">make</span> <span class=\"token function\">install</span></pre></td></tr></table></figure><h2 id=\"hdf5-1813\"><a class=\"markdownIt-Anchor\" href=\"#hdf5-1813\">#</a> hdf5 1.8.13</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">tar</span> -zxvf hdf5-1.8.13.tar.gz</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> hdf5-1.8.13</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>./configure --prefix<span class=\"token operator\">=</span>/usr/local/netcdf --with-zlib<span class=\"token operator\">=</span>/usr/local/netcdf/</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">make</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">make</span> check</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">make</span> <span class=\"token function\">install</span></pre></td></tr></table></figure><h2 id=\"netcdf-432\"><a class=\"markdownIt-Anchor\" href=\"#netcdf-432\">#</a> netcdf 4.3.2</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">tar</span> -zxvf netcdf-4.3.2.tar.gz</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> netcdf-4.3.2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">CPPFLAGS</span><span class=\"token operator\">=</span>-I/usr/local/netcdf/include <span class=\"token assign-left variable\">LDFLAGS</span><span class=\"token operator\">=</span>-L/usr/local/netcdf/lib ./configure --prefix<span class=\"token operator\">=</span>/usr/local/netcdf --disable-dap</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">make</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">make</span> check</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">make</span> <span class=\"token function\">install</span></pre></td></tr></table></figure><h2 id=\"netcdf-fortran-440\"><a class=\"markdownIt-Anchor\" href=\"#netcdf-fortran-440\">#</a> netcdf-fortran 4.4.0</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">LD_LIBRARY_PATH</span><span class=\"token operator\">=</span>/usr/local/netcdf/lib:<span class=\"token variable\">$LD_LIBRARY_PATH</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">tar</span> -zxvf netcdf-fortran-4.4.0.tar.gz</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">cd</span> netcdf-fortran-4.4.0</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">CPPFLAGS</span><span class=\"token operator\">=</span>-I/usr/local/netcdf/include <span class=\"token assign-left variable\">LDFLAGS</span><span class=\"token operator\">=</span>-L/usr/local/netcdf/lib ./configure --prefix<span class=\"token operator\">=</span>/usr/local/netcdf</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">make</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">make</span> check</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">make</span> <span class=\"token function\">install</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">make</span> check</pre></td></tr></table></figure><p>第一次 check 可能因找不到库报错，install 后 check 通过。</p>\n<p><span class=\"label info\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NjaHVtYWNoZXIyMDE2L2FydGljbGUvZGV0YWlscy84MDg1MDI0MA==\">参考</span></span></p>\n<h1 id=\"jasmin-452\"><a class=\"markdownIt-Anchor\" href=\"#jasmin-452\">#</a> JASMIN 4.5.2</h1>\n<p>官网：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jYWVwLXNjbnMuYWMuY24vSkFTTUlOLnBocA==\">中物院高性能数值模拟软件中心 JASMIN</span>，可申请安装包。<br>\n获得安装包后，执行  <code>sh jasmin4-4.5.2-Linux-x86_64.sh</code> ，按提示操作。<br>\n建议以版本名作为安装文件夹，如  <code>/home/ning/jasmin4-4.5.2</code> ，不选择自动更新环境变量，在下文中统一设置。<br>\n在使用 JASMIN 时需更新项目  <code>CMakeLists.txt</code>  的路径，可参考 <a href=\"/ESM/OMARE/omare220205/\">OMARE 学习使用（一）</a>。</p>\n<h1 id=\"环境变量配置\"><a class=\"markdownIt-Anchor\" href=\"#环境变量配置\">#</a> 环境变量配置</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>.workenv</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"/usr/local/gcc-4.8.5/bin:<span class=\"token environment constant\">$PATH</span>\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">LD_LIBRARY_PATH</span><span class=\"token operator\">=</span>/usr/local/gcc-4.8.5/lib64:<span class=\"token variable\">$LD_LIBRARY_PATH</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"/usr/local/gdb-9.2/bin:<span class=\"token environment constant\">$PATH</span>\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">LD_LIBRARY_PATH</span><span class=\"token operator\">=</span>/usr/local/gdb-9.2/lib:<span class=\"token variable\">$LD_LIBRARY_PATH</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">NETCDF</span><span class=\"token operator\">=</span>/usr/local/netcdf</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token variable\">$NETCDF</span>/bin:<span class=\"token environment constant\">$PATH</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">LD_LIBRARY_PATH</span><span class=\"token operator\">=</span><span class=\"token variable\">$NETCDF</span>/lib:<span class=\"token variable\">$LD_LIBRARY_PATH</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token assign-left variable\">CPPFLAGS</span><span class=\"token operator\">=</span><span class=\"token string\">'-I/usr/local/netcdf/include'</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">LDFLAGS</span><span class=\"token operator\">=</span><span class=\"token string\">'-L/usr/local/netcdf/lib'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"/home/ning/jasmin4-4.5.2/bin:<span class=\"token environment constant\">$PATH</span>\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'Env var loaded.'</span></pre></td></tr></table></figure><p>使用 Jasmin 前执行  <code>source .workenv</code> 。</p>\n<p>若在  <code>.bashrc</code>  中设置 gcc 变量会导致系统启动失败无法进入登录界面（ <code>F2</code>  可看到系统加载失败信息），此时需要用 Linux 系统安装 U 盘启动新系统（不安装！可在 Fedora 官网下载 U 盘写入工具）后挂载本机磁盘文件系统，修改  <code>GCC-4.8.5</code>  文件夹路径，删除  <code>.bashrc</code>  中新增的路径及  <code>/etc/ld.so.conf</code>  新增的路径，这时可以进入登录界面。移走  <code>/etc/ld.so.cache</code>  重置  <code>ldconfig</code> 。</p>\n<p>若反复卡死在登录界面可按  <code>ctrl+alt+F2</code>  命令行登入，删除追加的环境变量。在  <code>.bashrc</code>  中设置 Netcdf 的  <code>LD_LIBRARY_PATH</code>  会导致这种情况。</p>\n<h1 id=\"其他\"><a class=\"markdownIt-Anchor\" href=\"#其他\">#</a> 其他</h1>\n<h2 id=\"修改选择系统界面时间root\"><a class=\"markdownIt-Anchor\" href=\"#修改选择系统界面时间root\">#</a> 修改选择系统界面时间（root）</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vim</span> /etc/default/grub</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>grub2-mkconfig -o <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span>readlink -e /etc/grub2.conf<span class=\"token variable\">)</span></span>\"</span></pre></td></tr></table></figure><p><span class=\"label info\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly9xYXN0YWNrLmNuL3VuaXgvMTUyMjIyL2VxdWl2YWxlbnQtb2YtdXBkYXRlLWdydWItZm9yLXJoZWwtZmVkb3JhLWNlbnRvcy1zeXN0ZW1z\">参考</span></span></p>\n<h2 id=\"samba-文件共享服务-root\"><a class=\"markdownIt-Anchor\" href=\"#samba-文件共享服务-root\">#</a> samba 文件共享服务 (root)</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmZlZG9yYXByb2plY3Qub3JnL2VuLVVTL3F1aWNrLWRvY3Mvc2FtYmEv\">官方手册: How to create a Samba share</span></p>\n<p>ifconfig 查看 samba 服务 ip<br>\n 比如  <code>180.170.100.21</code> <br>\n 在 mac 访达中访问服务器  <code>smb://180.170.100.21</code> <br>\n 在 Windows 运行中访问服务器  <code>\\\\180.170.100.21</code></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NDEwNzMwL2FydGljbGUvZGV0YWlscy84MDUwMDkyMA==\">其他参考: Samba 服务器超详细安装、配置</span></p>\n<ul>\n<li>服务管理  <code>service smb stop/start/restart</code></li>\n<li>状态查看  <code>sudo smbstatus</code></li>\n</ul>\n",
            "tags": [
                "Memo"
            ]
        },
        {
            "id": "https://ningchenhui.github.io/ESM/OMARE/CoarsenOperator/",
            "url": "https://ningchenhui.github.io/ESM/OMARE/CoarsenOperator/",
            "title": "OMARE 粗化算子",
            "date_published": "2022-06-22T10:47:52.000Z",
            "content_html": "<p>OMARE CoarsenOperator <span id=\"more\"></span></p>\n<h1 id=\"新增自定义插值算子\"><a class=\"markdownIt-Anchor\" href=\"#新增自定义插值算子\">#</a> 新增自定义插值算子</h1>\n<p>参考  <code>NemoSpaceInterpCenter.h</code>  中的实现。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>NemoSpaceMeanCenter.h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">NemoSpaceMeanCenter</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> xfer<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">CoarsenOperator</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">NDIM</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token function\">NemoSpaceMeanCenter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\td_name_id <span class=\"token operator\">=</span> <span class=\"token string\">\"NEMO_MEAN_INTERP\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\talpha <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//TODO 粗化时细网格值的权重</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   * @brief 在指定的粗网格内，</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   * 将细网格片上指定的数据片插值到粗网格片上指定的数据片上.</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   * @param fine 输入参数，Patch 类，表示细网格片.</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   * @param coarse 输入参数，Patch 类，表示粗网格片.</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   * @param dst_component 输入参数，整型，表示目的数据片.</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   * @param src_component 输入参数，整型，表示源数据片.</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   * @param  coarse_box 输入参数，Box 类，表示粗化网格.</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   * @param ratio 输入参数，整型向量类，表示粗化比率.</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">coarsen</span><span class=\"token punctuation\">(</span>hier<span class=\"token double-colon punctuation\">::</span>Patch<span class=\"token operator\">&lt;</span>NDIM<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> coarse<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> hier<span class=\"token double-colon punctuation\">::</span>Patch<span class=\"token operator\">&lt;</span>NDIM<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> fine<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>               <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> dst_component<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> src_component<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>               <span class=\"token keyword\">const</span> hier<span class=\"token double-colon punctuation\">::</span>Box<span class=\"token operator\">&lt;</span>NDIM<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> coarse_box<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>               <span class=\"token keyword\">const</span> hier<span class=\"token double-colon punctuation\">::</span>IntVector<span class=\"token operator\">&lt;</span>NDIM<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> ratio<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">const</span> hier<span class=\"token double-colon punctuation\">::</span>Box<span class=\"token operator\">&lt;</span>NDIM<span class=\"token operator\">></span> fine_box <span class=\"token operator\">=</span> hier<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">Box</span><span class=\"token operator\">&lt;</span>NDIM<span class=\"token operator\">></span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">refine</span><span class=\"token punctuation\">(</span>coarse_box<span class=\"token punctuation\">,</span> ratio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>NemoFort.h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">extern</span> <span class=\"token keyword\">void</span> <span class=\"token function\">space_mean_center_</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> ir00<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> jr00<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> ic00<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> jc00<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                            <span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> ir0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> jr0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> ir1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> jr1<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                            <span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> ic0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> jc0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> ic1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> jc1<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                            <span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> jpir<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> jpjr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span><span class=\"token operator\">*</span> ur<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                            <span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> jpic<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> jpjc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span><span class=\"token operator\">*</span> uc<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                            <span class=\"token keyword\">int</span><span class=\"token operator\">*</span> ratio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"fortran-实现\"><a class=\"markdownIt-Anchor\" href=\"#fortran-实现\">#</a> Fortran 实现</h1>\n<figure class=\"highlight fortran\"><figcaption data-lang=\"fortran\"><span>JASMIN_FILLGHOST.F90</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SUBROUTINE</span> space_mean_center<span class=\"token punctuation\">(</span> ir00<span class=\"token punctuation\">,</span> jr00<span class=\"token punctuation\">,</span> ic00<span class=\"token punctuation\">,</span> jc00<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&amp;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                                ir0<span class=\"token punctuation\">,</span> jr0<span class=\"token punctuation\">,</span> ir1<span class=\"token punctuation\">,</span> jr1<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&amp;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                                ic0<span class=\"token punctuation\">,</span> jc0<span class=\"token punctuation\">,</span> ic1<span class=\"token punctuation\">,</span> jc1<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&amp;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                                jpir<span class=\"token punctuation\">,</span> jpjr<span class=\"token punctuation\">,</span> uf<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&amp;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                                jpic<span class=\"token punctuation\">,</span> jpjc<span class=\"token punctuation\">,</span> uc<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&amp;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                                ratio<span class=\"token punctuation\">)</span> bind<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"space_mean_center_\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">! input &amp; output            </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">INTEGER</span><span class=\"token punctuation\">,</span>                        <span class=\"token keyword\">INTENT</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">in</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">::</span>   ir00<span class=\"token punctuation\">,</span> jr00<span class=\"token punctuation\">,</span> ic00<span class=\"token punctuation\">,</span> jc00      <span class=\"token comment\">!patch lower index (ghost included)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">INTEGER</span><span class=\"token punctuation\">,</span>                        <span class=\"token keyword\">INTENT</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">in</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">::</span>   ir0<span class=\"token punctuation\">,</span> jr0<span class=\"token punctuation\">,</span> ir1<span class=\"token punctuation\">,</span> jr1          <span class=\"token comment\">!refine box start/end index</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">INTEGER</span><span class=\"token punctuation\">,</span>                        <span class=\"token keyword\">INTENT</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">in</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">::</span>   ic0<span class=\"token punctuation\">,</span> jc0<span class=\"token punctuation\">,</span> ic1<span class=\"token punctuation\">,</span> jc1          <span class=\"token comment\">!coarse box start/end index</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">INTEGER</span><span class=\"token punctuation\">,</span>                        <span class=\"token keyword\">INTENT</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">in</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">::</span>   jpir<span class=\"token punctuation\">,</span> jpjr                  <span class=\"token comment\">!refine patch size (ghost included)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">REAL</span><span class=\"token punctuation\">(</span>wp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">DIMENSION</span><span class=\"token punctuation\">(</span>jpir<span class=\"token punctuation\">,</span>jpjr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">INTENT</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">in</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">::</span>   uf                          <span class=\"token comment\">!refine patch data</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">INTEGER</span><span class=\"token punctuation\">,</span>                        <span class=\"token keyword\">INTENT</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">in</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">::</span>   jpic<span class=\"token punctuation\">,</span> jpjc                  <span class=\"token comment\">!coarse patch size (ghost included)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">REAL</span><span class=\"token punctuation\">(</span>wp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">DIMENSION</span><span class=\"token punctuation\">(</span>jpic<span class=\"token punctuation\">,</span>jpjc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">INTENT</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">inout</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">::</span>   uc                       <span class=\"token comment\">!coarse patch data</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">INTEGER</span><span class=\"token punctuation\">,</span>  <span class=\"token keyword\">DIMENSION</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>         <span class=\"token keyword\">INTENT</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">in</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">::</span>   ratio                       <span class=\"token comment\">!x refinement ratio NDIM?</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">! local</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">INTEGER</span> <span class=\"token operator\">::</span> ic<span class=\"token punctuation\">,</span> jc</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">INTEGER</span> <span class=\"token operator\">::</span> ic_loc<span class=\"token punctuation\">,</span> jc_loc</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">REAL</span><span class=\"token punctuation\">(</span>wp<span class=\"token punctuation\">)</span> <span class=\"token operator\">::</span> sum_</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">DO</span> jc <span class=\"token operator\">=</span> jc0<span class=\"token punctuation\">,</span> jc1</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">DO</span> ic <span class=\"token operator\">=</span> ic0<span class=\"token punctuation\">,</span> ic1</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        sum_ <span class=\"token operator\">=</span> SUM<span class=\"token punctuation\">(</span>uf<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ic<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ratio<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span>ir00<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>ic<span class=\"token operator\">*</span>ratio<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>ir00<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>jc<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ratio<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span>jr00<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>jc<span class=\"token operator\">*</span>ratio<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>jr00<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\">! coarse local index</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        ic_loc <span class=\"token operator\">=</span> ic <span class=\"token operator\">-</span> ic00 <span class=\"token operator\">+</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        jc_loc <span class=\"token operator\">=</span> jc <span class=\"token operator\">-</span> jc00 <span class=\"token operator\">+</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        uc<span class=\"token punctuation\">(</span>ic_loc<span class=\"token punctuation\">,</span> jc_loc<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> sum_ <span class=\"token operator\">/</span> <span class=\"token keyword\">REAL</span><span class=\"token punctuation\">(</span>ratio<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ratio<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>wp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">ENDDO</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">ENDDO</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">END SUBROUTINE</span> space_mean_center</pre></td></tr></table></figure><h1 id=\"启用-overlay\"><a class=\"markdownIt-Anchor\" href=\"#启用-overlay\">#</a> 启用 Overlay</h1>\n<p>这里  <code>sync_time % 1 != 0</code>  的  <code>1</code>  改为 Overlay 的步长。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"><span>NemoLevelIntegrator_body.C Producer.py</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/****************************************************************</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * AMR, 同步粗网格层.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> *****************************************************************/</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">void</span> NemoLevelIntegrator<span class=\"token operator\">::</span><span class=\"token function\">synchronizeCoarserLevel</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">const</span> JASMIN<span class=\"token operator\">::</span>tbox<span class=\"token operator\">::</span>Pointer<span class=\"token operator\">&lt;</span>JASMIN<span class=\"token operator\">::</span>hier<span class=\"token operator\">::</span>BasePatchHierarchy<span class=\"token operator\">&lt;</span>NDIM<span class=\"token operator\">>></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    hierarchy<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> finer_level_number<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">double</span> sync_time<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token keyword\">double</span> coarser_old_time<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  using namespace std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  using namespace JASMIN<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>sync_time <span class=\"token operator\">%</span> <span class=\"token number\">1</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  tbox<span class=\"token operator\">::</span>pout<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"***********************************************\"</span><span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  tbox<span class=\"token operator\">::</span>pout<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"Synchronize (Overlay) Coarser Level... \"</span><span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  tbox<span class=\"token operator\">::</span>pout<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"     finer_level_number==\"</span><span class=\"token operator\">&lt;&lt;</span>finer_level_number<span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  tbox<span class=\"token operator\">::</span>pout<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"     sync_time==\"</span><span class=\"token operator\">&lt;&lt;</span>sync_time<span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  tbox<span class=\"token operator\">::</span>pout<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"     coarser_old_time==\"</span><span class=\"token operator\">&lt;&lt;</span>coarser_old_time<span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  tbox<span class=\"token operator\">::</span>pout<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"***********************************************\"</span><span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token comment\">// 校正相邻粗网格层的通量</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  tbox<span class=\"token operator\">::</span>Pointer<span class=\"token operator\">&lt;</span>hier<span class=\"token operator\">::</span>PatchLevel<span class=\"token operator\">&lt;</span>NDIM<span class=\"token operator\">>></span> finer_level <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    hierarchy<span class=\"token operator\">-></span><span class=\"token function\">getPatchLevel</span><span class=\"token punctuation\">(</span>finer_level_number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  tbox<span class=\"token operator\">::</span>Pointer<span class=\"token operator\">&lt;</span>hier<span class=\"token operator\">::</span>PatchLevel<span class=\"token operator\">&lt;</span>NDIM<span class=\"token operator\">>></span> coarser_level <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    hierarchy<span class=\"token operator\">-></span><span class=\"token function\">getPatchLevel</span><span class=\"token punctuation\">(</span>finer_level_number <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token keyword\">double</span> actual_dt <span class=\"token operator\">=</span> sync_time <span class=\"token operator\">-</span> coarser_old_time<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token comment\">// 细网格 -> 粗网格 (具体方法在初始化构件中)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  sync_overlay_intc<span class=\"token operator\">-></span><span class=\"token function\">synchronizeCoarserLevel</span><span class=\"token punctuation\">(</span>finer_level<span class=\"token punctuation\">,</span> sync_time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"注册使用插值算子的变量\"><a class=\"markdownIt-Anchor\" href=\"#注册使用插值算子的变量\">#</a> 注册使用插值算子的变量</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>Producer.py var_db.py</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>OVERLAY_DOUBLE_INTERP_CENTER <span class=\"token operator\">=</span> <span class=\"token string\">\"NEMO_MEAN_INTERP\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>t_field_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token string\">\"tsn\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tsb\"</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string\">\"sshn\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"sshb\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token string\">\"avm_k\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Overlayregister.h\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\"># T</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">for</span> field <span class=\"token keyword\">in</span> t_field_list<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"intc->registerCoarsenPatchData(manager->\"</span><span class=\"token operator\">+</span>field<span class=\"token operator\">+</span><span class=\"token string\">\"_id,\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"                        \\\"\"</span><span class=\"token operator\">+</span>OVERLAY_DOUBLE_INTERP_CENTER<span class=\"token operator\">+</span><span class=\"token string\">\"\\\",\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"                        manager->\"</span><span class=\"token operator\">+</span>field<span class=\"token operator\">+</span><span class=\"token string\">\"_id);\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight c\"><figcaption data-lang=\"c\"><span>main_Nemo.C</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"NemoSpaceMeanCenter.h\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// add user-define sapce refine operator</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>tbox<span class=\"token operator\">::</span>Pointer<span class=\"token operator\">&lt;</span>JASMIN<span class=\"token operator\">::</span>pdat<span class=\"token operator\">::</span>NemoSpaceMeanCenter<span class=\"token operator\">></span> nemo_space_mean_center_operator</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token operator\">=</span> new JASMIN<span class=\"token operator\">::</span>pdat<span class=\"token operator\">::</span><span class=\"token function\">NemoSpaceMeanCenter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>grid_geometry<span class=\"token operator\">-></span><span class=\"token function\">addSpatialCoarsenOperator</span><span class=\"token punctuation\">(</span>nemo_space_mean_center_operator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"与-conservative_coarsen-比较\"><a class=\"markdownIt-Anchor\" href=\"#与-conservative_coarsen-比较\">#</a> 与 “CONSERVATIVE_COARSEN” 比较</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>h5diff omare_mean/build/exp_l2/javis_dump.00006/processor_cluster.00000.jasmin omare_220608/build/exp_l2/javis_dump.00006/processor_cluster.00000.jasmin</pre></td></tr></table></figure><pre><code>size:           [2400]           [2400]\nposition        sshn            sshn            difference          \n------------------------------------------------------------\n[ 900 ]          6.04414e-07     6.04414e-07     5.68434e-14    \n1 differences found\ndataset: &lt;/processor.00000/level.00001/patch.00000/un.38&gt; and &lt;/processor.00000/level.00001/patch.00000/un.38&gt;\nsize:           [15000]           [15000]\nposition        un.38           un.38           difference          \n------------------------------------------------------------\n[ 145 ]          -1.00591e-05    -1.00591e-05    9.09495e-13    \n[ 210 ]          -1.2723e-06     -1.2723e-06     1.13687e-13    \n[ 1985 ]          -8.53e-07       -8.53e-07       5.68434e-14    \n[ 2438 ]          -1.50793e-05    -1.50793e-05    9.09495e-13    \n</code></pre>\n<p>加上  <code>1e-10</code>  的限制后只有 14 个差异值。</p>\n<h2 id=\"sshn\"><a class=\"markdownIt-Anchor\" href=\"#sshn\">#</a> sshn</h2>\n<p class=\"gallery\" data-height=\"400\"><img data-src=\"0608.png\" alt=\"\" title=\"jasmin\"><br>\n<img data-src=\"mean.png\" alt=\"mean\"><br>\n<img data-src=\"bug.png\" alt=\"赋0\"></p>\n",
            "tags": [
                "Memo",
                "Coding"
            ]
        },
        {
            "id": "https://ningchenhui.github.io/ESM/NEMO/install/",
            "url": "https://ningchenhui.github.io/ESM/NEMO/install/",
            "title": "Install NEMO notes",
            "date_published": "2022-05-01T15:19:13.000Z",
            "content_html": "<p>NEMO 安装<span id=\"more\"></span></p>\n<h1 id=\"prerequisites\"><a class=\"markdownIt-Anchor\" href=\"#prerequisites\">#</a> Prerequisites</h1>\n<div class=\"note info\">\n<p>Suggestion from J Mak<sup>[4]</sup>:<br>\nGet someone who knows what they are doing to do it for you! Compiling the following from scratch is not the most interesting activity and is actually quite fiddly (especially the HDF5 and NetCDF4 stuff)…if you don’t have access to people who can do that, then try.</p>\n</div>\n<p>Before installing these, run  <code>which h5copy</code>  and  <code>which nc-config</code>  to see if hdf5 and netcdf are already available. If so, we can skip installing them and zlib.</p>\n<h2 id=\"zlib\"><a class=\"markdownIt-Anchor\" href=\"#zlib\">#</a> zlib</h2>\n<p>When I was trying to install Netcdf, I found this requirement in its  <code>INSTALL.md</code>  file. After downloading packages from <span class=\"exturl\" data-url=\"ZnRwOi8vZnRwLnVuaWRhdGEudWNhci5lZHUvcHViL25ldGNkZi9uZXRjZGYtNA==\">server</span>, build it like:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./configure --prefix<span class=\"token operator\">=</span>/home/user/study/software/zlib</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">make</span> check <span class=\"token function\">install</span></pre></td></tr></table></figure><h2 id=\"hdf5\"><a class=\"markdownIt-Anchor\" href=\"#hdf5\">#</a> hdf5</h2>\n<p>Specifying the location of the zlib library:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">CC</span><span class=\"token operator\">=</span>/usr/local/mpich-3.1/bin/mpicc ./configure --with-zlib<span class=\"token operator\">=</span>/home/user/study/software/zlib --prefix<span class=\"token operator\">=</span>/home/user/study/software/hdf5 --<span class=\"token punctuation\">&#123;</span>enable-fortran,disable-shared,enable-parallel<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">make</span> check <span class=\"token function\">install</span></pre></td></tr></table></figure><p>I just add  <code>[--&#123;enable-fortran,disable-shared,enable-parallel&#125;]</code>  from offical documentation of NEMO<sup>[1]</sup>, but it may bring some problems.</p>\n<h2 id=\"netcdf\"><a class=\"markdownIt-Anchor\" href=\"#netcdf\">#</a> netcdf</h2>\n<p>After HDF5 is done, build netcdf, specifying the location of the HDF5, zlib, and<br>\nlibraries in the CPPFLAGS and LDFLAGS environment variables. For example:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">CC</span><span class=\"token operator\">=</span>mpicc <span class=\"token assign-left variable\">CPPFLAGS</span><span class=\"token operator\">=</span>-I/home/user/study/software/hdf5/include <span class=\"token assign-left variable\">LDFLAGS</span><span class=\"token operator\">=</span>-L/home/user/study/software/hdf5/lib <span class=\"token assign-left variable\">LD_LIBRARY_PATH</span><span class=\"token operator\">=</span>/home/user/study/software/hdf5/lib:/home/user/study/software/zlib/lib ./configure --prefix<span class=\"token operator\">=</span>/home/user/study/software/netcdf-c-p --<span class=\"token punctuation\">&#123;</span>enable-fortran,disable-shared,enable-parallel,enable-parallel-tests<span class=\"token punctuation\">&#125;</span> --enable-netcdf4</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">make</span> check <span class=\"token function\">install</span></pre></td></tr></table></figure><p>You can check the output or setting file in  <code>lib</code>  to see whether parallel IO is on.</p>\n<p>Then build netcdf-fortran like:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">CC</span><span class=\"token operator\">=</span>mpicc <span class=\"token assign-left variable\">FC</span><span class=\"token operator\">=</span>mpif90 <span class=\"token assign-left variable\">F77</span><span class=\"token operator\">=</span>mpif77 <span class=\"token assign-left variable\">CPPFLAGS</span><span class=\"token operator\">=</span><span class=\"token string\">\"-I/home/user/study/software/netcdf-c-p/include -I/home/user/study/software/hdf5/include -I/home/user/study/software/zlib/include\"</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token assign-left variable\">LDFLAGS</span><span class=\"token operator\">=</span><span class=\"token string\">\"-L/home/user/study/software/netcdf-c-p/lib -L/home/user/study/software/hdf5/lib -L/home/user/study/software/zlib/lib\"</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">LD_LIBRARY_PATH</span><span class=\"token operator\">=</span>/home/user/study/software/netcdf-c-p/lib:/home/user/study/software/hdf5/lib:/home/user/study/software/zlib/lib <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">LIBS</span><span class=\"token operator\">=</span><span class=\"token string\">\"-lnetcdf -lhdf5_hl -lhdf5 -lz -lcurl\"</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>./configure --disable-shared --prefix<span class=\"token operator\">=</span>/home/user/study/software/netcdf-f-p</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">make</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">make</span> check</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">make</span> <span class=\"token function\">install</span></pre></td></tr></table></figure><h2 id=\"ncview\"><a class=\"markdownIt-Anchor\" href=\"#ncview\">#</a> ncview</h2>\n<p>It is not necessary, but it’s a easy tool to check the nc file.</p>\n<p>First install Xaw using  <code>sudo yum install libXaw-devel</code> .<br>\nThen just following [6].</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./configure --prefix<span class=\"token operator\">=</span><span class=\"token variable\">$&#123;<span class=\"token environment constant\">HOME</span>&#125;</span>/study/software/ncview/ --with-udunits2_incdir<span class=\"token operator\">=</span><span class=\"token variable\">$&#123;<span class=\"token environment constant\">HOME</span>&#125;</span>/study/software/udunits/include/ --with-udunits2_libdir<span class=\"token operator\">=</span><span class=\"token variable\">$&#123;<span class=\"token environment constant\">HOME</span>&#125;</span>/study/software/udunits/lib/ --with-png_incdir<span class=\"token operator\">=</span><span class=\"token variable\">$&#123;<span class=\"token environment constant\">HOME</span>&#125;</span>/study/software/libpng/include/ --with-png_libdir<span class=\"token operator\">=</span><span class=\"token variable\">$&#123;<span class=\"token environment constant\">HOME</span>&#125;</span>/study/software/libpng/lib/</pre></td></tr></table></figure><h2 id=\"xios\"><a class=\"markdownIt-Anchor\" href=\"#xios\">#</a> XIOS</h2>\n<p>Refer to wiki<sup>[2]</sup> and J Mak’s notes<sup>[4]</sup>, first</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>svn checkout -r <span class=\"token number\">1566</span> http://forge.ipsl.jussieu.fr/ioserver/svn/XIOS/branchs/xios-2.5 xios-2.5</pre></td></tr></table></figure><p>NEMO has requirements for the XIOS version, remember to check that.</p>\n<p>Then modify files  <code>arch-GCC_LINUX.*</code>  in  <code>arch</code> , add the  <code>-ldl</code>  flag to  <code>HDF5_LIB</code>  in  <code>arch-GCC_local.path</code>  since we build hdf5 library as a not shareable.</p>\n<p>The  <code>boost_dir</code>  and  <code>OASIS_dir</code>  are not necessary, just leave them.</p>\n<p>Finally, run</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./make_xios --arch GCC_LINUX</pre></td></tr></table></figure><h1 id=\"nemo\"><a class=\"markdownIt-Anchor\" href=\"#nemo\">#</a> NEMO</h1>\n<p>Copy and rename an configuration file from an architecture similar to our own. Set the following variables:</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>%NCDF_HOME    &#x2F;usr&#x2F;local&#x2F;path&#x2F;to&#x2F;netcdf</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>%HDF5_HOME    &#x2F;usr&#x2F;local&#x2F;path&#x2F;to&#x2F;hdf5</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>%XIOS_HOME    &#x2F;home&#x2F;$( whoami )&#x2F;path&#x2F;to&#x2F;xios-trunk</pre></td></tr></table></figure><p>Compile a reference configuration:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./makenemo –m <span class=\"token string\">'my_arch'</span> –r GYRE_PISCES</pre></td></tr></table></figure><p>And find  <code>nemo</code>  in  <code>cfgs/GYRE_PISCES/EXP00</code> .</p>\n<h1 id=\"good-luck\"><a class=\"markdownIt-Anchor\" href=\"#good-luck\">#</a> Good luck!</h1>\n<p>Hope you can find nemo soon.</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>._      ._      ._      ._      ._    </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  _.-._)&#96;\\_.-._)&#96;\\_.-._)&#96;\\_.-._)&#96;\\_.-._)&#96;\\_ </pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      o         _,           _,             </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        o      .&#39; (        .-&#39; &#x2F;             </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      o     _&#x2F;..._&#39;.    .&#39;   &#x2F;              </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  (    o .-&#39;&#96;      &#96; &#39;-.&#x2F;  _.&#39;               </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  )    ( o)           ;&#x3D; &lt;_         (       </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  (      &#39;-.,\\\\__ __.-;&#96;\\   &#39;.        )      </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  )  )       \\) |&#96;\\ \\)  &#39;.   \\      (   (   </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  (  (           \\_&#x2F;       &#39;-._\\      )   )  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  )  ) jgs                     &#96;    (   (   </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></td></tr></table></figure><h1 id=\"reference\"><a class=\"markdownIt-Anchor\" href=\"#reference\">#</a> Reference</h1>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaXRlcy5uZW1vLW9jZWFuLmlvL3VzZXItZ3VpZGUvaW5zdGFsbC5odG1s\">NEMO documentation</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb3JnZS5pcHNsLmp1c3NpZXUuZnIvaW9zZXJ2ZXIvd2lraS9kb2N1bWVudGF0aW9u\">XIOS wiki</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdXBwb3J0Lmh1YXdlaWNsb3VkLmNvbS9wcnRnLWt1bnBlbmdocGNzL2t1bnBlbmduZW1vXzAyXzAwMDEuaHRtbA==\">Kunpeng NEMO transplant</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZW1vLXJlbGF0ZWQucmVhZHRoZWRvY3MuaW8vZW4vbGF0ZXN0L2NvbXBpbGF0aW9uX25vdGVzL25lbW8zNi5odG1s\">J Mak NEMO notes</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96ZW5vZG8ub3JnL3JlY29yZC8zMzg2MzEwIy5ZbTEwNUpKQnhRSQ==\">NEMO Reference configurations inputs</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXJ0aWNsZS8xNDcxMzM4\">NCVIEW installation</span></li>\n</ol>\n",
            "tags": [
                "Memo",
                "Coding"
            ]
        },
        {
            "id": "https://ningchenhui.github.io/ESM/OMARE/omare220205/",
            "url": "https://ningchenhui.github.io/ESM/OMARE/omare220205/",
            "title": "OMARE 学习使用（一）",
            "date_published": "2022-02-05T11:19:13.000Z",
            "content_html": "<p>Learn to run OMARE（i）<span id=\"more\"></span></p>\n<p>step 1 - 解压源代码后，在目录里创建  <code>build</code>  文件夹<br>\n step 2 - 修改文件中的路径</p>\n<pre><code>a. CMakeLists.txt\n  set(JASMIN_VERSION 新路径)\n  debug 行运行时注释掉，调试时开启\nb. input/GYRE/namelist_cfg (之后可以在build中改)\n  nn_GYRE  resolution\n</code></pre>\n<p>step 3 - 进入  <code>build</code>  文件夹，执行  <code>~/jasmin4/bin/cmake ../</code> <br>\nstep 4 - 执行  <code>make</code>  ( <code>make -j 50</code>  多线程)<br>\nstep 5 -  <code>./main2d ../input/nemo-2d.input</code>   运行不完 / 测试时可  <code>ctrl+c</code>  中止<br>\n step 6 -  <code>ctrl+r</code>   <code>teravap</code>  查看数据 （ <code>/usr/local/teravap/teravap2_2_0.linux- x86_64/bin/teravap</code> ）<br>\n         数据在  <code>./build/javis../dumps.javis</code>  中，打开后 Add - Mesh , Draw。更换数据需要重启。</p>\n<p>修改完 h 文件后执行 step 4</p>\n<p>虚拟机 mpi 运行</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mpirun -n <span class=\"token number\">4</span> ./main2d <span class=\"token punctuation\">..</span>/input/nemo-2d.input</pre></td></tr></table></figure><p>运行步数在  <code>nemo-2d.input</code>  里改， <code>namelist</code>  里无效。</p>\n<p>使用 gdb 调试时 Fortran 的代码行是混乱的，用 watch 下断点。</p>\n<p>gdb 调试方法参考 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdxaWppbnlhL2FydGljbGUvZGV0YWlscy8xMDE1NTkzODY=\">这篇博客</span>。</p>\n<p>调试例子</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>b NemoSpaceMeanCenter :: coarsen</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>b postprocessCoarsenOperator</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">set</span> args <span class=\"token punctuation\">..</span>/input/nemo-2d.input</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>r</pre></td></tr></table></figure><p>对于 shared_ptr</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>p fdata</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$3</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token operator\">&lt;</span>boost::shared_ptr<span class=\"token operator\">&lt;</span>JASMIN::pdat::CellData<span class=\"token operator\">&lt;</span><span class=\"token number\">2</span>, double<span class=\"token operator\">></span> <span class=\"token operator\">>></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>px <span class=\"token operator\">=</span> 0x9a95ed0, pn <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      pi_ <span class=\"token operator\">=</span> 0x9a96460<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>, <span class=\"token operator\">&lt;</span>No data fields<span class=\"token operator\">></span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>使用如下命令查看。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>p <span class=\"token variable\"><span class=\"token punctuation\">((</span>JASMIN<span class=\"token operator\">:</span><span class=\"token operator\">:</span>pdat<span class=\"token operator\">:</span><span class=\"token operator\">:</span>CellData<span class=\"token operator\">&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>double<span class=\"token operator\">></span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>fdata<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>getDepth<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>p <span class=\"token operator\">*</span><span class=\"token punctuation\">((</span><span class=\"token punctuation\">(</span>JASMIN<span class=\"token operator\">:</span><span class=\"token operator\">:</span>pdat<span class=\"token operator\">:</span><span class=\"token operator\">:</span>CellData<span class=\"token operator\">&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>double<span class=\"token operator\">></span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>fdata<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>getPointer<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>p <span class=\"token operator\">*</span><span class=\"token punctuation\">((</span><span class=\"token punctuation\">(</span>JASMIN<span class=\"token operator\">:</span><span class=\"token operator\">:</span>pdat<span class=\"token operator\">:</span><span class=\"token operator\">:</span>CellData<span class=\"token operator\">&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>double<span class=\"token operator\">></span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>coarse.getPatchData<span class=\"token punctuation\">(</span>manager<span class=\"token operator\">-</span><span class=\"token operator\">></span>sshn_id<span class=\"token punctuation\">))</span></span>-<span class=\"token operator\">></span>getPointer<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>+400<span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "Memo",
                "Coding"
            ]
        },
        {
            "id": "https://ningchenhui.github.io/ESM/Data/model02/",
            "url": "https://ningchenhui.github.io/ESM/Data/model02/",
            "title": "安装NCL",
            "date_published": "2021-03-17T16:00:00.000Z",
            "content_html": "<p>NCAR command language (NCL)</p>\n<span id=\"more\"></span>\n<h2 id=\"关于\"><a class=\"markdownIt-Anchor\" href=\"#关于\">#</a> 关于</h2>\n<p>NCAR 命令语言（NCL）是美国国家大气研究中心（NCAR）计算与信息系统实验室的产品，是一种专门为科学数据处理和可视化设计的解释语言。学习使用 NCL 主要是为了处理 NetCDF 格式。</p>\n<h2 id=\"参考网站\"><a class=\"markdownIt-Anchor\" href=\"#参考网站\">#</a> 参考网站</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5uY2wudWNhci5lZHUv\">官网</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5uY2wudWNhci5lZHUvZ2V0X3N0YXJ0ZWQuc2h0bWw=\">安装指导</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5uY2wudWNhci5lZHUvRG9jdW1lbnQvTWFudWFscy9OQ0xfVXNlcl9HdWlkZS8=\">用户指导手册</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5uY2wudWNhci5lZHUvRG9jdW1lbnQvTWFudWFscy9OQ0xfVXNlcl9HdWlkZS9EYXRhLw==\">手册的数据文件</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5weW5nbC51Y2FyLmVkdS8=\">pyngl</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5uY2wudWNhci5lZHUvRG9jdW1lbnQvTWFudWFscy9OQ0xfdG9fUHl0aG9uL1RyYW5zaXRpb25fR3VpZGVfTkNMX1B5TkdMLnBkZg==\">ncl2py Guide</span></li>\n</ul>\n<h2 id=\"安装\"><a class=\"markdownIt-Anchor\" href=\"#安装\">#</a> 安装</h2>\n<p>NCL 适用于 MacOS，Linux 和运行 Windows 10 Linux 子系统的 Windows 系统。换新笔记本后我安装了 WSL，所以这里在 WSL 中安装。<br>\n首先要安装 conda，这里按提示安装了 miniconda。（难怪我在超算的 <code>.bashrc</code>  里只看到了 miniconda，没找到 NCL，但找到了 NCO……<br>\n 然后按照建议在 conda 环境下安装 NCL，新环境为 ncl_stable。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda create -n ncl_stable -c conda-forge ncl</pre></td></tr></table></figure><p>每次进入该环境，执行</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">source</span> activate ncl_stable</pre></td></tr></table></figure><p>要显示图形化界面，首先启动 Xming 开启 X11 转接…… 然后执行下面的命令检测</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ncl -V</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ncl <span class=\"token variable\">$NCARG_ROOT</span>/lib/ncarg/nclex/gsun/gsun02n.ncl</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ncl <span class=\"token variable\">$NCARG_ROOT</span>/lib/ncarg/nclex/nug/NUG_multi_timeseries.ncl</pre></td></tr></table></figure><p>就可以看到很漂亮的图啦！</p>\n<p>于是又登上超算找 <code>conda</code> ，结果不能直接用。在 <code>.conda</code>  文件夹里有个 <code>environment.txt</code>  里明明看到了有 <code>anaconda</code>  和 ncl_stable 环境。翻 bashrc 发现有句</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">wanwb</span><span class=\"token operator\">=</span><span class=\"token string\">'source /home/export/online3/cesm06/wanwb/.bashrc'</span></pre></td></tr></table></figure><p>果断执行 <code>wanwb</code> ，可以用 conda 了！可以用 ncl！<br>\n<img style=\"display: inline-block; width: 70%; max-width: 70%; height: auto;\" data-src=\"1.png\" /></p>\n<p>回到 WSL，执行 <code>ng4ex gsun01n</code>  提示 /bin/csh: bad interpreter: No such file or directory 查一下需要安装 C-shell。再次执行，可以看到一些折线图，且工作路径下多了一个 <code>gsun01n.ncl</code>  文件。</p>\n<h2 id=\"配置环境\"><a class=\"markdownIt-Anchor\" href=\"#配置环境\">#</a> 配置环境</h2>\n<p>由于使用了 ncl_stable 环境，就不用再设置变量 <code>NCARG_ROOT</code>  和路径 <code>$NCARG_ROOT/bin</code>  了。<br>\n在家目录下放置 <code>.hluresfile</code>  文件来个性化设置 NCL 图形环境。<br>\n关于代码编辑的高亮，我用了 vscode 连接 WSL，打开 ncl 文件后安装 NCL 扩展即可。不得不说这真的好用。</p>\n<h2 id=\"准备学习\"><a class=\"markdownIt-Anchor\" href=\"#准备学习\">#</a> 准备学习</h2>\n<p>把手册下载下来进行学习！有些大的数据文件在官网上，参考中已经列出来了。</p>\n<img style=\"display: inline-block; width: 70%; max-width: 70%; height: auto;\" data-src=\"2.png\" />\n<p>加载公用函数库： <code>load &quot;$NCARG_ROOT/lib/ncarg/nclscripts/csm/contributed.ncl&quot;</code> <br>\n 运行样例： <code>ng4ex file.ncl</code> <br>\n 样例数据： <code>$NCARG_ROOT/lib/ncarg/data/nug/</code></p>\n<h2 id=\"几天后\"><a class=\"markdownIt-Anchor\" href=\"#几天后\">#</a> 几天后</h2>\n<p>把手册大致过了一遍，对某些语法感到不适外，在手册最后看到了一章 PyNGL 和 PyNIO 的。于是很疑惑地到官网再一看……<br>\n 好家伙，NCAR 已经不更新 NCL 了，官方都转 python 了</p>\n<p>（3.22：问了师姐，他们那篇论文用的代码基本是 matlab…… 而我没能找到机器上有没有 matlab……）<br>\n（续：matlab 在另一个账号下…… 代码放机器上被清了…… ）</p>\n<h2 id=\"pyngl-pynio\"><a class=\"markdownIt-Anchor\" href=\"#pyngl-pynio\">#</a> PyNGL &amp; PyNIO</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda create --name pyn_env --channel conda-forge pynio pyngl</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">source</span> activate pyn_env</pre></td></tr></table></figure><p>报错了，可能版本不兼容。删除环境重建</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda <span class=\"token function\">env</span> remove --name pyn_env</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>conda create --name pyn_env --channel conda-forge/label/cf201901 xarray netcdf4 scipy pyngl pynio</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">source</span> activate pyn_env</pre></td></tr></table></figure><p>最后清理下安装的包</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda clean -a</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>conda clean -p</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>conda clean -t</pre></td></tr></table></figure>",
            "tags": [
                "Tool"
            ]
        },
        {
            "id": "https://ningchenhui.github.io/ESM/Data/model01/",
            "url": "https://ningchenhui.github.io/ESM/Data/model01/",
            "title": "初识NetCDF",
            "date_published": "2021-03-16T09:08:20.000Z",
            "content_html": "<p>Network Common Data Form (NetCDF)</p>\n<span id=\"more\"></span>\n<!--ncl-->\n<h2 id=\"关于\"><a class=\"markdownIt-Anchor\" href=\"#关于\">#</a> 关于</h2>\n<p>Unidata 网络通用数据格式（netCDF）是用于科学数据访问的接口，并且是一个自由分发的提供了该接口的实现软件库。netCDF 库还定义了用于表示科学数据数据格式。 接口，库和格式共同支持科学数据的创建，访问和共享。</p>\n<h2 id=\"参考网站\"><a class=\"markdownIt-Anchor\" href=\"#参考网站\">#</a> 参考网站</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudW5pZGF0YS51Y2FyLmVkdS9zb2Z0d2FyZS9uZXRjZGYv\">官网</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1VuaWRhdGEvbmV0Y2RmLWM=\">GitHub</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dzIubWF0aHdvcmtzLmNuL2hlbHAvbWF0bGFiL25ldHdvcmstY29tbW9uLWRhdGEtZm9ybS5odG1sP3NfdGlkPUNSVVhfbGZ0bmF2\">Matlab</span></li>\n</ul>\n<h2 id=\"开始\"><a class=\"markdownIt-Anchor\" href=\"#开始\">#</a> 开始</h2>\n<p>因为还不太熟悉超算服务器，我先把其中一个月的数据传到了本地，然后用 Matlab 查看。</p>\n<ol>\n<li>\n<p><code>ncdisp</code>  在命令行窗口中显示 NetCDF 数据源内容</p>\n<pre><code> FileName='T045_D.cice.h.0036-01.nc';\n ncdisp(FileName)\n</code></pre>\n <img style=\"display: inline-block; width: 70%; max-width: 70%; height: auto;\" data-src=\"1.png\" />\n<p>后面有非常多的变量……</p>\n</li>\n<li>\n<p><code>ncinfo</code>  以结构体形式返回有关 NetCDF 数据源的信息</p>\n<pre><code> finfo = ncinfo(FileName);\n</code></pre>\n</li>\n<li>\n<p><code>ncread</code>  读取 NetCDF 数据源中的变量数据</p>\n<pre><code> iceVolume=ncread(FileName,'vicen001_d'); %读取全部\n start=[100,200,1];count=[Inf,Inf,1];stride=[5,5,1];%读取部分，分别是起始点、数量、间隔\n iceVolumePart=ncread(FileName,'vicen001_d',start,count,stride);\n surf(double(iceVolumePart));\n title('Ice Volume');\n</code></pre>\n <img style=\"display: inline-block; width: 70%; max-width: 70%; height: auto;\" data-src=\"2.png\" />\n</li>\n<li>\n<p>NetCDF 包<br>\n为了对读写过程进行更多控制，可使用包含低级函数的 NetCDF 库程序包。详细可查看 matlab 官方文档。</p>\n</li>\n</ol>\n",
            "tags": [
                "Tool"
            ]
        }
    ]
}